<doc id="910" url="?curid=910" title="Компьютер">
Компьютер

Компью́тер (,  — «вычислитель») — устройство или система, способное выполнять заданную чётко определённую изменяемую последовательность операций. Это чаще всего операции численных расчётов и манипулирования данными, однако сюда относятся и операции ввода-вывода. Описание последовательности операций называется "программой".
Электро́нная вычисли́тельная маши́на, ЭВМ — комплекс технических средств, где основные функциональные элементы (логические, запоминающие, индикационные и др.) выполнены на электронных элементах, предназначенных для автоматической обработки информации в процессе решения вычислительных и информационных задач.
ЭВМ используется как один из способов реализации компьютера. В настоящее время термин ЭВМ, как относящийся больше к вопросам конкретной физической реализации компьютера, почти вытеснен из бытового употребления и в основном используется инженерами цифровой электроники, как правовой термин в юридических документах, а также в историческом смысле — для обозначения компьютерной техники 1940—1980-х годов и больших вычислительных устройств, в отличие от персональных.
Электронная вычислительная машина подразумевает использование электронных компонентов в качестве её функциональных узлов, однако компьютер может быть устроен и на других принципах — он может быть механическим, биологическим, оптическим, квантовым и т. п. "(подробнее: Классы компьютеров#По виду рабочей среды)", работая за счёт перемещения механических частей, движения электронов, фотонов или эффектов других физических явлений. Кроме того, по типу функционирования вычислительная машина может быть цифровой (ЦВМ) и аналоговой (АВМ).
С другой стороны, термин «компьютер» предполагает возможность изменения выполняемой программы (перепрограммирования).
Этимология.
Слово "компьютер" является производным от английских слов , , которые переводятся как «вычислять», «вычислитель» (английское слово, в свою очередь, происходит от латинского  — «вычислять»). Первоначально в английском языке это слово означало человека, производящего арифметические вычисления с привлечением или без привлечения механических устройств. В дальнейшем его значение было перенесено на сами машины, однако современные компьютеры выполняют множество задач, не связанных напрямую с математикой.
Впервые трактовка слова "компьютер" появилась в 1897 году в Оксфордском словаре английского языка. Его составители тогда понимали компьютер как "механическое" вычислительное устройство. В 1946 году словарь пополнился дополнениями, позволяющими разделить понятия цифрового, аналогового и электронного компьютера.
Экспоненциальное развитие компьютерной техники.
После изобретения интегральной схемы развитие компьютерной техники резко ускорилось. Этот эмпирический факт, замеченный в 1965 году соучредителем компании Intel Гордоном Е. Муром, назвали по его имени Законом Мура. Столь же стремительно развивается и процесс миниатюризации компьютеров. Первые электронно-вычислительные машины (например, такие, как созданный в 1946 году ЭНИАК) были огромными устройствами, весившими тонны, занимавшими целые комнаты и требовавшими большого количества обслуживающего персонала для успешного функционирования. Они были настолько дороги, что их могли позволить себе только правительства и большие исследовательские организации, и представлялись настолько экзотическими, что казалось, будто небольшая горстка таких систем сможет удовлетворить любые будущие потребности. В контрасте с этим, современные компьютеры — гораздо более мощные и компактные и гораздо менее дорогие — стали воистину вездесущими.
Архитектура и структура.
Архитектура компьютеров может изменяться в зависимости от типа решаемых задач. Оптимизация архитектуры компьютера производится с целью максимально реалистично математически моделировать исследуемые физические (или другие) явления. Так, электронные потоки могут использоваться в качестве моделей потоков воды при компьютерном моделировании (симуляции) дамб, плотин или кровотока в человеческом мозгу. Подобным образом сконструированные аналоговые компьютеры были обычны в 1960-х годах, однако сегодня стали достаточно редким явлением.
Результат выполненной задачи может быть представлен пользователю при помощи различных устройств ввода-вывода информации, таких как ламповые индикаторы, мониторы, принтеры, проекторы и т. п.
Первая троичная ЭВМ «Сетунь» на ферритдиодных ячейках была построена Брусенцовым в МГУ.
Классификация.
Элементная основа цифрового компьютера.
Поверхностный характер представленного подхода к классификации компьютеров очевиден. Он обычно используется лишь для обозначения общих черт наиболее часто встречающихся компьютерных устройств. Быстрые темпы развития вычислительной техники означают постоянное расширение областей её применения и быстрое устаревание используемых понятий. Для более строгого описания особенностей того или иного компьютера обычно требуется использовать другие схемы классификаций.
Физическая реализация.
Более строгий подход к классификации основан на отслеживании используемых при создании компьютеров технологий. Самые ранние компьютеры были полностью механическими системами. Тем не менее, уже в 1930-х годах телекоммуникационная промышленность предложила разработчикам новые, электромеханические компоненты (реле), а в 1940-х были созданы первые полностью электронные компьютеры, имевшие в своей основе электронные лампы. В 1950—1960-х годах на смену лампам пришли транзисторы, а в конце 1960-х — начале 1970-х годов — используемые и сегодня полупроводниковые интегральные схемы (кремниевые чипы).
Приведённый перечень технологий не является исчерпывающим; он описывает только основную тенденцию развития вычислительной техники. В разные периоды истории исследовалась возможность создания вычислительных машин на основе множества других, ныне позабытых и порою весьма экзотических технологий. Например, существовали планы создания гидравлических и пневматических компьютеров, между 1903 и 1909 годами некто Перси И. Луджет даже разрабатывал проект программируемой аналитической машины, работающей на базе пошивочных механизмов (переменные этого вычислителя планировалось определять при помощи ниточных катушек).
В настоящее время ведутся серьёзные работы по созданию оптических компьютеров, использующих вместо традиционного электричества световые сигналы. Другое перспективное направление подразумевает использование достижений молекулярной биологии и исследований ДНК. И, наконец, один из самых новых подходов, способный привести к грандиозным изменениям в области вычислительной техники, основан на разработке квантовых компьютеров.
Впрочем, в большинстве случаев технология исполнения компьютера является гораздо менее важной, чем заложенные в его основу конструкторские решения.
По способностям.
Одним из наиболее простых способов классифицировать различные типы вычислительных устройств является определение их способностей. Все вычислители могут, таким образом, быть отнесены к одному из трёх типов:
Современный компьютер общего назначения.
При рассмотрении современных компьютеров наиболее важной особенностью, отличающей их от ранних вычислительных устройств, является то, что при соответствующем программировании любой компьютер может подражать поведению любого другого (хоть эта возможность и ограничена, к примеру, вместимостью средств хранения данных или различием в скорости). Таким образом, предполагается, что современные машины могут эмулировать любое вычислительное устройство будущего, которое когда-либо может быть создано. В некотором смысле эта пороговая способность полезна для различия компьютеров общего назначения и устройств специального назначения. Определение «компьютер общего назначения» может быть формализовано в требовании, чтобы конкретный компьютер был способен подражать поведению универсальной машины Тьюринга. Первым компьютером, удовлетворяющим такому условию, считается машина Z3, созданная немецким инженером Конрадом Цузе в 1941 году (доказательство этого факта было проведено в 1998 году).
Конструктивные особенности.
Современные компьютеры используют весь спектр конструкторских решений, разработанных за всё время развития вычислительной техники. Эти решения, как правило, не зависят от физической реализации компьютеров, а сами являются основой, на которую опираются разработчики. Ниже приведены наиболее важные вопросы, решаемые создателями компьютеров:
Цифровой или аналоговый.
Фундаментальным решением при проектировании компьютера является выбор, будет ли он цифровой или аналоговой системой. Если цифровые компьютеры работают с дискретными численными или символьными переменными, то аналоговые предназначены для обработки непрерывных потоков поступающих данных. Сегодня цифровые компьютеры имеют значительно более широкий диапазон применения, хотя их аналоговые собратья все ещё используются для некоторых специальных целей. Следует также упомянуть, что здесь возможны и другие подходы, применяемые, к примеру, в импульсных и квантовых вычислениях, однако пока что они являются либо узкоспециализированными, либо экспериментальными решениями.
Примерами аналоговых вычислителей, от простого к сложному, являются: номограмма, логарифмическая линейка, астролябия, осциллограф, телевизор, аналоговый звуковой процессор, автопилот, мозг. 
Среди наиболее простых дискретных вычислителей известен абак, или обыкновенные счёты; наиболее сложной из такого рода систем является суперкомпьютер.
Система счисления.
Примером компьютера на основе десятичной системы счисления является первая американская вычислительная машина Марк I.
Важнейшим шагом в развитии вычислительной техники стал переход к внутреннему представлению чисел в двоичной форме. Это значительно упростило конструкции вычислительных устройств и периферийного оборудования. Принятие за основу двоичной системы счисления позволило более просто реализовывать арифметические функции и логические операции.
Тем не менее, переход к двоичной логике был не мгновенным и безоговорочным процессом. Многие конструкторы пытались разработать компьютеры на основе более привычной для человека десятичной системы счисления. Применялись и другие конструктивные решения. Так, одна из ранних советских машин работала на основе троичной системы счисления, использование которой во многих отношениях более выгодно и удобно по сравнению с двоичной системой (проект троичного компьютера Сетунь был разработан и реализован талантливым советским инженером Н. П. Брусенцовым).
Под руководством академика Хетагурова Я. А. разработан «высоконадёжный и защищённый микропроцессор недвоичной системы кодирования для устройств реального времени», использующий систему кодирования 1 из 4 с активным нулём.
В целом, однако, выбор внутренней системы представления данных не меняет базовых принципов работы компьютера — любой компьютер может эмулировать любой другой.
Хранение программ и данных.
Во время выполнения вычислений часто бывает необходимо сохранить промежуточные данные для их дальнейшего использования. Производительность многих компьютеров в значительной степени определяется скоростью, с которой они могут читать и писать значения в (из) памяти и её общей ёмкости. Первоначально компьютерная память использовалась только для хранения промежуточных значений, но вскоре было предложено сохранять код программы в той же самой памяти (архитектура фон Неймана, она же «принстонская»), что и данные. Это решение используется сегодня в большинстве компьютерных систем. Однако для управляющих контроллеров (микро-ЭВМ) и сигнальных процессоров более удобной оказалась схема, при которой данные и программы хранятся в различных разделах памяти (гарвардская архитектура).
Программирование.
Способность машины к выполнению определённого изменяемого набора инструкций (программы) без необходимости физической переконфигурации является фундаментальной особенностью компьютеров. Дальнейшее развитие эта особенность получила, когда машины приобрели способность динамически управлять процессом выполнения программы. Это позволяет компьютерам самостоятельно изменять порядок выполнения инструкций программы в зависимости от состояния данных. Первую реально работающую программируемую вычислительную машину сконструировал немец Конрад Цузе в 1941 году.
При помощи вычислений компьютер способен обрабатывать информацию по определённому алгоритму. Решение любой задачи для компьютера является последовательностью вычислений.
В большинстве современных компьютеров проблема сначала описывается в понятном им виде (при этом вся информация, как правило, представляется в двоичной форме — в виде единиц и нулей, хотя компьютер может быть реализован и на других основаниях, как целочисленных — например, троичный компьютер, так и нецелых), после чего действия по её обработке сводятся к применению простой алгебры логики. Поскольку практически вся математика может быть сведена к выполнению булевых операций, достаточно быстрый электронный компьютер может быть применим для решения большинства математических задач, а также и большинства задач по обработке информации, которые могут быть сведены к математическим.
Было обнаружено, что компьютеры могут решить не любую математическую задачу. Впервые задачи, которые не могут быть решены при помощи компьютеров, были описаны английским математиком Аланом Тьюрингом.
Применение.
Первые компьютеры создавались исключительно для вычислений (что отражено в названиях «компьютер» и «ЭВМ»). Даже самые примитивные компьютеры в этой области во много раз превосходят людей (если не считать некоторых уникальных людей-счётчиков). Не случайно первым высокоуровневым языком программирования был Фортран, предназначенный исключительно для выполнения математических расчётов.
Вторым крупным применением были базы данных. Прежде всего, они были нужны правительствам и банкам. Базы данных требуют уже более сложных компьютеров с развитыми системами ввода-вывода и хранения информации. Для этих целей был разработан язык Кобол. Позже появились СУБД со своими собственными языками программирования.
Третьим применением было управление всевозможными устройствами. Здесь развитие шло от узкоспециализированных устройств (часто аналоговых) к постепенному внедрению стандартных компьютерных систем, на которых запускаются управляющие программы. Кроме того, всё бо́льшая часть техники начинает включать в себя управляющий компьютер.
Четвёртое. Компьютеры развились настолько, что стали главным информационным инструментом как в офисе, так и дома. Теперь почти любая работа с информацией зачастую осуществляется через компьютер — будь то набор текста или просмотр фильмов. Это относится и к хранению информации, и к её пересылке по каналам связи. Основное применение современных домашних компьютеров — навигация в Интернете и игры.
Пятое. Современные суперкомпьютеры используются для компьютерного моделирования сложных физических, биологических, метеорологических и других процессов и решения прикладных задач. Например, для моделирования ядерных реакций или климатических изменений. Некоторые проекты проводятся при помощи распределённых вычислений, когда большое число относительно слабых компьютеров одновременно работает над небольшими частями общей задачи, формируя таким образом очень мощный компьютер.
Наиболее сложным и слаборазвитым применением компьютеров является искусственный интеллект — применение компьютеров для решения таких задач, где нет чётко определённого более или менее простого алгоритма. Примеры таких задач — игры, машинный перевод текста, экспертные системы.

</doc>
<doc id="911" url="?curid=911" title="Вычислительная сеть">
Вычислительная сеть

Компьютерная сеть (вычислительная сеть) — система связи компьютеров или вычислительного оборудования (серверы, маршрутизаторы и другое оборудование). Для передачи данных могут быть использованы различные физические явления, как правило — различные виды электрических сигналов, световых сигналов или электромагнитного излучения.
Стеки протоколов.
При реализации компьютерной сети могут использоваться различные наборы протоколов, некоторые из них:
Уровни.
Сетевая модель OSI
История.
Впервые в мире вычислительная сеть была применена в советском комплексе ПРО «Система А» (генеральный конструктор Г. В. Кисунько), возведённом в 1956—1960 годах в Казахстане. В сеть были объединены разработанные Институтом точной механики и вычислительной техники АН СССР компьютеры «Диана I» и «Диана II» (создатели С. А. Лебедев, В. С. Бурцев).
В 1970-е годы в Великобритании была разработана система доступа к автоматизированным базам данных на основе использования телефонных каналов, телевизоров и клавиатуры, получившая название "видеотекс". Наибольшее развитие видеотекс получил во Франции, где эта система получила название "Минитель".
Глобальная компьютерная сеть.
Глобальная компьютерная сеть (, ) — компьютерная сеть, охватывающая большие территории и включающая в себя большое число компьютеров.
ГКС служат для объединения разрозненных сетей так, чтобы пользователи и компьютеры, где бы они ни находились, могли взаимодействовать со всеми остальными участниками глобальной сети.
Некоторые ГКС построены исключительно для частных организаций, другие являются средством коммуникации корпоративных ЛВС с сетью Интернет или посредством Интернет с удалёнными сетями, входящими в состав корпоративных. Чаще всего ГКС опирается на выделенные линии, на одном конце которых маршрутизатор подключается к ЛВС, а на другом коммутатор связывается с остальными частями ГКС. Основными используемыми протоколами являются TCP/IP, SONET/SDH, MPLS, ATM и Frame relay. Ранее был широко распространён протокол X.25, который может по праву считаться прародителем Frame relay.
ГКС связывает компьютеры, рассредоточенные на расстоянии сотен и тысяч километров. Часто используются уже существующие не очень качественные линии связи. Более низкие, чем в локальных сетях, скорости передачи данных (десятки килобит в секунду) ограничивают набор услуг передачей файлов, преимущественно не в оперативном, а в фоновом режиме, с использованием электронной почты. Для стойкой передачи дискретных данных применяются более сложные методы и оборудование, чем в локальных сетях.
Глобальные сети отличаются от локальных тем, что рассчитаны на неограниченное число абонентов и используют, как правило, не слишком качественные каналы связи и сравнительно низкую скорость передачи, а механизм управления обменом у них в принципе не может быть гарантированно скорым.
В глобальных сетях намного более важно не качество связи, а сам факт её существования. Правда, в настоящий момент уже нельзя провести четкий и однозначный предел между локальными и глобальными сетями. Большинство локальных сетей имеют выход в глобальную сеть, но характер переданной информации, принципы организации обмена, режимы доступа к ресурсам внутри локальной сети, как правило, сильно отличаются от тех, что приняты в глобальной сети. И, хотя все компьютеры локальной сети в данном случае включены также и в глобальную сеть, специфику локальной сети это не отменяет. Возможность выхода в глобальную сеть остается всего лишь одним из ресурсов, поделенным пользователями локальной сети.

</doc>
<doc id="912" url="?curid=912" title="NNTP">
NNTP

NNTP () — представляет собой сетевой протокол распространения, запрашивания, размещения и получения групп новостей при взаимодействии между сервером групп новостей и клиентом.
Введение.
NNTP — протокол, разработанный для обмена сообщениями в телеконференциях.
По строению этот протокол во многом схож с протоколом приема и передачи электронной почты SMTP.
Существует вариация протокола NNTP, называемая NNRP (Network News Readers Protocol). Она отличается только набором поддерживаемых команд, и предназначена для чтения конференций с сервера новостей клиентским ПО в режиме онлайн. Функционально NNTP ориентирован на то, что статьи отправляются подписчикам при их появлении на сервере, а NNRP — по запросу клиента. Соответственно, NNTP используется для обмена сообщениями между серверами новостей, а NNRP — для чтения сообщений с ньюссервера и создания новых сообщений.
За NNTP закреплён TCP-порт 119. При подключении к NNTP-серверу по SSL (т. н. NNTPS) используется порт 563.
NNTP предполагает, что серверы новостей имеют постоянное IP-подключение. Когда онлайн-технологии были менее распространены, серверы новостей обменивались новостями посредством uucp.
Протокол NNTP, как и SMTP, является текстовым, то есть все команды и ответы на них являются обычными текстовыми строками. Важной особенностью протокола NNTP является его эффективность в случае сложных графов связей между серверами новостей. Чтобы одно и то же сообщение не передавалось многократно, обычно отправляющий сервер сначала сообщает идентификатор нового сообщения, а само сообщение отправляет только после подтверждения принимающей стороны о том, что этого сообщения там ещё нет. В случае расширения stream NNTP эта концепция развивается ещё дальше: отправляющая сторона шлёт список идентификаторов новых статей, не дожидаясь ответа на каждый из них, и сами статьи, если принимающая запросила их по идентификаторам.
Часто серверы новостей держат постоянно открытыми одну или несколько NNTP-сессий, чтобы не открывать их каждый раз заново при получении новых сообщений.
Пример NNTP-сессии.
A: — отвечающая сторона, O: — вызывающая сторона
Клиенты групп новостей и серверы групп новостей.
Иногда говорят «клиент групп новостей» вместо «NNTP-клиент». Следует понимать, что NNTP-клиенты поддерживают протокол NNTP не в полной мере, а лишь его вариацию NNRP. На сегодняшний день доступны следующие клиентские программы:
Из серверного программного обеспечения известно:
Другие реализации можно попытаться найти в ODP. 
Группы новостей.
Большинство групп новостей, распространяемых при помощи NNTP, принадлежит сети Usenet.
В Интернете существуют однако и другие группы новостей: предоставляемые шлюзами других сетей, частные и т. п.

</doc>
<doc id="913" url="?curid=913" title="Электронная почта">
Электронная почта

Электро́нная по́чта (, от ) — технология и сервис по пересылке и получению электронных сообщений (называемых «письма», «электронные письма» или «сообщения») между пользователями компьютерной сети (в том числе — Интернета).
Электронная почта по составу элементов и принципу работы практически повторяет систему обычной (бумажной) почты, заимствуя как термины (почта, письмо, конверт, вложение, ящик, доставка и другие), так и характерные особенности — простоту использования, задержки передачи сообщений, достаточную надёжность и в то же время отсутствие гарантии доставки.
Достоинствами электронной почты являются: легко воспринимаемые и запоминаемые человеком адреса вида имя_пользователя@имя_домена (например, somebody@example.com); возможность передачи как простого текста, так и форматированного, а также произвольных файлов (текстовые документы, медиафайлы, программы, архивы, и т.д.); независимость серверов (в общем случае они обращаются друг к другу непосредственно); достаточно высокая надёжность доставки сообщения; простота использования человеком и программами.
Недостатки электронной почты: наличие такого явления, как спам (массовые рекламные и вирусные рассылки); возможные задержки доставки сообщения (до нескольких суток); ограничения на размер одного сообщения и на общий размер сообщений в почтовом ящике (персональные для пользователей).
В настоящее время любой начинающий пользователь может завести свой бесплатный электронный почтовый ящик, достаточно зарегистрироваться на одном из интернет-порталов.
Названия.
Если в Европе, Америке и др. регионах при написании используются только два варианта — «email» и, реже, «e-mail» (с марта 2011 года англоязычным СМИ рекомендуется писать сокращение от «электронная почта» как «email», а не «e-mail»), то в русском языке присутствует значительная вариативность. Наиболее часто в кириллических текстах также используется «e-mail», то есть написание латиницей без транслитерации (визуальное восприятие других форм написания хуже). Но можно встретить и другие написания:
Правильное написание пока не зафиксировано в словарях. Справочное бюро Грамота.ру указывает, что Е. Ваулина в словаре «Мой компьютер» предлагает писать "e-майл" и "е-мэйл", но замечает, что такое написание не соответствует литературной норме, в то же время, в другом ответе советуют писать "e-mail" латиницей.
Де-факто в официальных русскоязычных документах:
История.
Появление электронной почты можно отнести к 1965 году, когда сотрудники Массачусетского технологического института (MIT) Ноэль Моррис и Том Ван Влек написали программу Mail для операционной системы CTSS (Compatible Time-Sharing System), установленную на компьютере IBM 7090/7094.
Общее развитие электронной почты шло через развитие локального взаимодействия пользователей на многопользовательских системах. Пользователи могли, используя программу mail (или её эквивалент), пересылать друг другу сообщения в пределах одного мейнфрейма (большого компьютера). Следующий шаг был в возможности переслать сообщение пользователю на другой машине — для этого использовалось указание имени машины и имени пользователя на машине. Адрес мог записываться в виде foo!joe (пользователь joe на компьютере foo). Третий шаг для становления электронной почты произошёл в момент появления передачи писем через третий компьютер. В случае использования UUCP-адрес пользователя включал в себя маршрут до пользователя через несколько промежуточных машин (например, codice_1 — письмо для joe через машину gate1, gate2 на машину foo). Недостатком такой адресации было то, что отправителю (или администратору машины, на которой работал отправитель) необходимо было знать точный путь до машины адресата.
После появления распределённой глобальной системы имён DNS, для указания адреса стали использоваться доменные имена — codice_2 — пользователь user на машине example.com. Одновременно с этим происходило переосмысление понятия «на машине»: для почты стали использоваться выделенные серверы, на которые не имели доступ обычные пользователи (только администраторы), а пользователи работали на своих машинах, при этом почта приходила не на рабочие машины пользователей, а на почтовый сервер, откуда пользователи забирали свою почту по различным сетевым протоколам (среди распространённых на настоящий момент — POP3, IMAP, MAPI, веб-интерфейсы). Одновременно с появлением DNS была продумана система резервирования маршрутов доставки почты, а доменное имя в почтовом адресе перестало быть именем конкретного компьютера и стало просто фрагментом почтового адреса. За обслуживание домена могут отвечать многие серверы (возможно, физически размещённые на разных континентах и в разных организациях), а пользователи из одного домена могут не иметь между собой ничего общего (особенно подобное характерно для пользователей бесплатных серверов электронной почты).
Кроме того, существовали и другие системы электронной почты (некоторые из них существуют и сейчас), как то: Netmail в сети Фидонет, X.400 в сетях X.25. Доступ к ним из сети Интернет и обратно осуществляется через почтовый шлюз. Для маршрутизации почты в сетях X.25 в DNS предусмотрена специальная ресурсная запись c соответствующим названием X25 (код 19).
MxA-классификация.
В терминологии электронной почты выделяются следующие компоненты:
В случае использования выделенных серверов для хранения почты пользователей всё взаимодействие пользователя с сервером может происходить по протоколам, не укладывающимся в эту схему.
Почтовые сервера обычно выполняют роль MTA и MDA. Некоторые почтовые сервера (программы) выполняют роль как MTA, так и MDA, некоторые подразумевают разделение на два независимых сервера: сервер-MTA и сервер-MDA (при этом, если для доступа к ящику используются различные протоколы — например, POP3 и IMAP, — то MDA в свою очередь может быть реализован либо как единое приложение, либо как набор приложений, каждое из которых отвечает за отдельный протокол).
Современная архитектура (SMTP).
Общепринятым в мире протоколом обмена электронной почтой является SMTP ( — простой протокол передачи почты). В общепринятой реализации он использует DNS для определения правил пересылки почты (хотя в частных системах, вроде Microsoft Exchange, SMTP может действовать исходя из информации из других источников).
В различных доменах настроены свои, независимые друг от друга, почтовые системы. У каждого почтового домена может быть несколько пользователей. (Однако, фактически, может быть так, что одна организация или персона владеет многими доменами, которые обслуживаются (физически) одной почтовой системой). Почта передаётся между узлами с использованием программ пересылки почты (; такими, как, например, sendmail, exim4, postfix, Microsoft Exchange Server, Lotus Domino и т. д.). Поведение систем при связи друг с другом строго стандартизировано, для этого используется протокол SMTP (и соблюдение этого стандарта, наравне с всеобщей поддержкой DNS всеми участниками, является основой для возможности связи «всех со всеми» без предварительных договорённостей). Взаимодействие почтовой системы и пользователей, в общем случае, никак не регламентируется и может быть произвольным, хотя существуют как открытые, так и закрытые (завязанные на ПО конкретных производителей) протоколы взаимодействия между пользователями и почтовой системой. Программа, работающая в почтовой системе и обслуживающая пользователей, называется MDA (, агент доставки почты). В некоторых почтовых системах MDA и MTA могут быть объединены в одну программу, в других системах могут быть разнесены в виде разных программ или вообще выполняться на различных серверах. Программа, с помощью которой пользователь осуществляет доступ, называется MUA (). В случае использования веб-интерфейса для работы с почтой, её роль выполняет приложение веб-интерфейса, запускаемое на сервере.
Внутри заданной почтовой системы (обычно находящейся в рамках одной организации) может быть множество почтовых серверов, выполняющих как пересылку почты внутри организации, так и другие, связанные с электронной почтой задачи: фильтрацию спама, проверку вложений антивирусом, обеспечение автоответа, архивация входящей/исходящей почты, обеспечение доступа пользователям различными методами (от POP3 до ActiveSync). Взаимодействие между серверами в рамках одной почтовой системы может быть как подчинено общим правилам (использование DNS и правил маршрутизации почты с помощью протокола SMTP), так и следовать собственным правилам компании (используемого программного обеспечения).
Релеи.
DNS позволяет указать в качестве принимающего сервера (MX-запись) любой узел интернета, не обязательно являющийся частью доменной зоны домена получателя. Это может использоваться для настройки релеинга (пересылки) почты через третьи серверы. Сторонний сервер (например, более надёжный, чем серверы пользователя) принимает почту для домена пользователя и пересылает его на почтовые серверы пользователя как только появляется возможность. Исторически контроля за тем, «кому пересылать» почту, не было (или этому не придавали должного значения) и серверы без подобного контроля передавали почту на любые домены. Такие серверы называются открытыми релеями (в настоящее время новые открытые релеи появляются в основном из-за ошибок в конфигурировании).
Для своих пользователей серверы почтовой системы являются релеями (пользователи отправляют почту не на серверы почтовой системы адресата, а на «свой» почтовый сервер, который передаёт письма далее). Во многих сетях провайдеров возможность отправлять письма по протоколу SMTP за пределы сети закрыта (из-за использования этой возможности троянами, вирусами). В этом случае провайдер предоставляет свой SMTP-сервер, через который и направляется вся почта за пределы сети. Открытым релеем при этом считается такой релей, который не проверяет, является ли пользователь «своим» (проверка может осуществляться как на основании сетевого адреса компьютера пользователя, так и на основании идентификации пользователя паролем/сертификатом).
Маршрутизация почты.
Почтовый сервер, получив почту (из локального источника или от другого сервера) проверяет, существуют ли специфичные правила для обработки почты (правила могут основываться на имени пользователя, на домене в адресе, содержимом письма и т. д.), если специфичных правил не обнаружено, то проверяется, является ли почтовый домен "локальным" для сервера (то есть является ли сервер конечным получателем письма). Если является, то письмо принимается в обработку. Если же домен письма не является локальным, то применяется процедура маршрутизации почты (являющаяся основой для передачи писем между различными серверами в Интернете).
При маршрутизации используется только доменная часть адреса получателя (то есть часть, находящаяся после символа @). Для домена получателя ищутся все MX-записи. Они сортируются в порядке убывания приоритета. Если адрес почтового сервера совпадает с одним из узлов, указанных в MX-записях, то все записи с приоритетом меньшим приоритета узла в MX-записи (а также MX-запись самого узла) отбрасываются, а доставка осуществляется на первый отвечающий узел (узлы пробуются в порядке убывания приоритета). Это сделано на случай, если почтовый сервер отправителя является релеем почтового сервера получателя. Если MX-запись для домена не найдена, то делается попытка доставить почту по A-записи, соответствующей домену. Если же записи о домене нет, то формируется сообщение о невозможности доставки (Bounce message). Это сообщение формируется с codice_3 (RFC 5321), в поле «To» указывается отправитель исходного письма, в поле в поле «From» — E-Mail вида codice_4. Под именем сервера понимается имя хоста в Интернет, который сгенерировал уведомление. codice_3 позволяет защитить почтовые сервера от бесконечного хождения сообщений об ошибке между серверами — если сервер обнаруживает, что не может доставить письмо с пустым обратным адресом, то он уничтожает его. Сообщение о невозможности доставки, так же, может формироваться через некоторое время. Это происходит в случае, если обнаруженная проблема определяется, как временная, но истекает время нахождения сообщения в очереди (RFC 5321, раздел 4.5.4.1. Sending Strategy).
Если сеть имеет различные DNS-серверы (например, внешние — в Интернете, и локальные — в собственных пределах), то возможна ситуация, когда «внутренние» DNS-серверы в качестве наиболее приоритетного получателя указывают на недоступный в Интернете сервер, куда и перенаправляется почта с релея, указанного как узел-получатель для Интернета. Подобное разделение позволяет осуществлять маршрутизацию почты по общим правилам между серверами, не имеющими выхода в Интернет.
Протоколы получения почты.
После попадания почты на конечный сервер, он осуществляет временное или постоянное хранение принятой почты. Существует две различные модели работы с почтой: концепция "почтового хранилища (ящика)" и "почтового терминала".
POP3.
В концепции "почтового хранилища" почта на сервере хранится временно, в ограниченном объёме (аналогично почтовому ящику для бумажной почты), а пользователь периодически обращается к ящику и «забирает» письма (то есть почтовый клиент скачивает копию письма к себе и удаляет оригинал из почтового ящика). На основании этой концепции действует протокол POP3.
IMAP.
Концепция "почтового терминала" подразумевает, что вся корреспонденция, связанная с почтовым ящиком (включая копии отправленных писем), хранится на сервере, а пользователь обращается к хранилищу (иногда его по традиции также называют «почтовым ящиком») для просмотра корреспонденции (как новой, так и архива) и написания новых писем (включая ответы на другие письма). На этом принципе действует протокол IMAP и большинство веб-интерфейсов бесплатных почтовых служб. Подобное хранение почтовой переписки требует значительно бо́льших мощностей от почтовых серверов, в результате, во многих случаях происходит разделение между почтовыми серверами, пересылающими почту, и серверами хранения писем.
Различия.
Основываясь на работе протоколов можно разделить их по двум основным критериям:
В определённых условиях сервер хранения писем может быть настроен на поведение, подобное клиенту: такой сервер обращается к почтовому серверу по протоколу POP3 и забирает почту себе. Подобные решения используются обычно в малых организациях, в которых нет инфраструктуры для развёртывания полноценных почтовых серверов; в этом случае используется локальный сервер для хранения почты и почтовый сервер провайдера, предоставляющий услугу получения почты по POP3 (например, с помощью fetchmail). Основным недостатком подобного решения является задержка в доставке (так как забирающее почту ПО обращается на сервера с некоторой задержкой) — например, POP3 connector из Exchange 2003 Server в составе Windows SBS не позволяет через интерфейс конфигурирования выставить интервал менее 15 минут.
Структура письма.
При передаче по протоколу SMTP "Электронное письмо" состоит из следующих частей:
Данные SMTP-конверта.
Данные SMTP-конверта содержат в себе следующую информацию:
Заголовки письма.
Заголовки письма описываются стандартами RFC:
Заголовки отделяются от тела письма пустой строкой. Заголовки используются для журналирования прохождения письма и служебных пометок (иногда их называют кладжами). В Microsoft Outlook эти заголовки называются «Заголовки Интернет». В заголовках обычно указываются: почтовые серверы, через которые прошло письмо (каждый почтовый сервер добавляет информацию о том, от кого он получил это письмо), информацию о том, похоже ли это письмо на спам, информацию о проверке антивирусами, уровень срочности письма (может меняться почтовыми серверами). Также в заголовке обычно пишется программа, с помощью которой было создано письмо. Поскольку заголовки являются служебной информацией, то чаще всего почтовые клиенты скрывают их от пользователя при обычном чтении писем, но также предоставляют возможность увидеть эти заголовки, если возникает потребность в более детальном анализе письма. В случае, если письмо из формата SMTP конвертируется в другой формат (например, в Microsoft Exchange 2007 письма конвертируются в MAPI), то заголовки сохраняются отдельно, для возможности диагностики.
Заголовки обычно добавляются снизу вверх (то есть каждый раз, когда к сообщению нужно добавить заголовок, он дописывается первой строкой, перед всеми предыдущими).
Помимо служебной информации, заголовки письма также хранят и показываемую пользователю информацию, это обычно отправитель письма, получатель, тема и дата отправки.
Заголовки сообщения могут содержать только 7-битные символы. При необходимости использовать национальные символы в каких-то полях, требуется использование кодировок. Как правило, это Base64 или Quoted-Printable.
Помимо стандартных, почтовые клиенты, серверы и роботы обработки почты могут добавлять свои собственные заголовки, начинающиеся с «X-» (например, codice_48, codice_49 или codice_50).
Тело письма.
Тело письма отделяется от заголовка пустой строкой. В не-smtp стандартах формат письма зависит от стандарта системы (например, MAPI), но перед «выходом» письма за пределы MAPI-совместимой системы (например, перед пересылкой через Интернет) обычно приводится к SMTP-совместимому виду (иначе маршрутизация письма была бы невозможной, так как стандартом передачи почты в Интернете является SMTP).
В теле сообщения допускаются только печатные символы. Потому для целей передачи бинарной информации (картинок, исполняемых файлов и т.п.) применяются кодировки, приводящие данные с 7-битному виду — Base64 или UUE. Кроме того, в самом начале существования E-Mail ограничение было более жёстким — некоторые почтовые системы поддерживали только 7-битные сообщения. С целью работы с такими системами обычный текст, при наличии национальных символов, так же, может кодироваться в 7-битный вид. Для этого используются Base64 или Quoted-Printable. Однако, почтовые системы, которые могут работать только с 7-битными сообщениями сейчас, вряд ли существуют.
Цепочки писем.
Благодаря наличию в письме уникального идентификатора, а также тому, что подавляющее большинство почтовых клиентов при ответе на письмо копируют его идентификатор в поле codice_51 («в ответ на»), появляется возможность достоверной группировки писем по "цепочке" (). В разных почтовых клиентах это реализовано по разному, например, Microsoft Outlook позволяет найти все связанные с заданным письма; веб-интерфейс GMail группирует сообщения на основании данных о цепочке в единый объект. Некоторые почтовые клиенты (например, mutt) позволяют структурировать цепочки (образующиеся обычно в почтовых рассылках, когда в беседе участвует много подписчиков) в форме дерева (вопрос породил несколько ответов, на каждый из которых дали комментарий — это сформировало несколько ветвей дерева). Также такие клиенты обычно умеют принудительно резать цепочки при смене темы сообщения (считая, что смена темы сообщения означает новое обсуждение, хотя, быть может, и вызванное предыдущей беседой).
Шифрование почты.
Для шифрования почты в настоящий момент широко применяются два стандарта: S/MIME (использующий инфраструктуру открытых ключей) и Open PGP (использующий сертификаты со схемой доверия, группирующегося вокруг пользователя).
Ранее также существовали стандарты MOSS и PEM, но, из-за несовместимости друг с другом и неудобства использования, они не прижились.
Стандарты S/MIME и Open PGP позволяют обеспечить три вида защиты: защиту от изменения, неотзывную подпись и конфиденциальность (шифрование). Дополнительно, S/MIME третьей версии позволяет использовать защищённое квитирование (при котором квитанция о получении письма может быть сгенерирована успешно только в том случае, когда письмо дошло до получателя в неизменном виде).
Оба стандарта используют симметричные криптоалгоритмы для шифрования тела письма, а симметричный ключ шифруют с использованием открытого ключа получателя. Если письмо адресуется группе лиц, то симметричный ключ шифруется по-очереди каждым из открытых ключей получателей (и иногда, для удобства, открытым ключом отправителя, чтобы он имел возможность прочитать отправленное им письмо).
Коммерческое использование.
В настоящий момент существуют следующие модели коммерческого применения почтовых систем:
Почтовые рассылки.
Почтовая система позволяет организовать сложные системы, основанные на пересылке почты от одного ко многим абонентам, это:
Для управления почтовыми рассылками используются "менеджеры почтовых рассылок". Помимо ведения списка адресов и выполнения отсылки заданного сообщения они обеспечивают фильтрацию писем, возможности премодерации писем перед помещением в рассылку, ведение архивов, управление подпиской/отпиской, рассылку дайджестов (краткого содержимого) вместо всего объёма рассылки.
Примеры программ управления рассылками:
Спам.
Спам — разновидность почтовой рассылки с целью рекламы (часто нежелательной) того или иного товара или услуги, аналог бумажной рекламы, бесплатно распространяемой по почтовым ящикам жилых домов.
По мере роста популярности электронной почты, она (наравне с новостными группами usenet), начала использоваться для рассылки незапрошенных рекламных сообщений, аналогично тому, как раскидываются рекламные брошюры в обычные почтовые ящики. Однако, в отличие от существенной стоимости бумажной рассылки, отправка значительного количества (миллионов и миллиардов) сообщений практически ничего не стоит отправителю. Это привело к непропорциональному росту количества и размера рекламных рассылок (по некоторым данным, спам в настоящее время составляет 70-90 % от всех почтовых сообщений, то есть превысил объём полезной почтовой нагрузки в 2-10 раз).
Для рассылки спама в настоящий момент активно используются все возможные технические ухищрения: открытые релеи, ремейлеры, прокси-серверы, бесплатные серверы электронной почты (допускающие автоматизацию отправки почты), ботнеты, поддельные сообщения о невозможности доставки.
По мере ужесточения запрета на размещение рекламы, сообщения разделились на легитимные рассылки (на которые обычно подписывается пользователь и от которых он может отказаться в любой момент) и нелегитимные (собственно и называемые спамом). Для борьбы со спамом были разработаны различные механизмы (чёрные списки отправителей, серые списки, требующие повторного обращения почтового сервера для отправки, контекстные фильтры). Одним из последствий внедрения средств борьбы со спамом стала вероятность «ошибочно положительного» решения относительно спама, то есть часть писем, не являющихся спамом, стала помечаться как спам. В случае агрессивной антиспам-политики (уничтожение писем, кажущихся спамом, в автоматическом режиме без уведомления отправителя/получателя) это приводит к труднообнаруживаемым проблемам с прохождением почты.
Законодательное регулирование в России.
Федеральный закон № 152-ФЗ «О персональных данных».

</doc>
<doc id="914" url="?curid=914" title="BBS">
BBS

BBS (biːbiːɛs,  — электронная доска объявлений). Широко используемый во времена редкости кабельных компьютерных сетей способ общения пользователей компьютеров через коммутируемые телефонные сети.
Изначально BBS содержали разнообразные фирмы и доступ к ним был платный. Впоследствии же, в качестве хобби, их стали открывать и частные лица. В основной своей массе доступ к частным BBS бесплатный.
Технологии.
BBS могли быть как автономными, так и связанными с другими BBS (обычно через Фидонет).
Для доступа к BBS необходимы телефонная сеть, модем и программа-терминал (minicom, Y-term, , Telix, Hyper Terminal, Terminate, Telemax и другие). Некоторые BBS доступны также (или исключительно) через Интернет по протоколу telnet.
Пользователь BBS запускает программу-терминал, инициирует в этой программе телефонный звонок на номер BBS, после соединения BBS предлагает авторизоваться (ввести логин и пароль) либо зарегистрироваться как новому пользователю и после успешного логина пользователя предоставляет ему доступ:
В дополнение к онлайновому доступу к конференциям были разработаны способы оффлайнового чтения конференций с помощью и . Пользователь соединялся с BBS, скачивал на свой компьютер файл-пакет с сообщениями, отсоединялся. Читал сообщения, писал ответные и новые сообщения в конференции, которые затем программой "QWK" или "Blue Wave" собирались в пакет. В наиболее свободное время работы BBS пользователь снова соединялся с BBS, закачивал на неё пакет со своими сообщениями и скачивал пакет с сообщениями, которые оставили на BBS другие пользователи за время, прошедшее с его предыдущего звонка на BBS.
Для организации BBS необходимо специальное программное обеспечение.
Представление.
Работа с большинством BBS производится с помощью терминальной программы в текстовом режиме.
Могут использоваться режимы «простой текст» (8-битные символы без цветовых кодов и очистки экрана), ANSI (текстовое расширение ASCII с возможностью цветового выделения, позволяющий создавать псевдографические рисунки) и (более эффективный двоичный протокол с возможностью передачи растровой графики).
Позже был разработан протокол , поддерживающий векторную графику и указательные устройства ввода. Официальный редактор RIPscrip был платным, а вскоре BBS уступили популярность Всемирной паутине с HTML.
Уровни доступа.
У каждого зарегистрированного пользователя на BBS может быть установлен уровень доступа, как правило от twit (самый нижний уровень, при котором доступ вообще закрыт) до sysop (с полными правами). В зависимости от этого уровня может варьироваться время нахождения на линии, лимит на скачку файлов, возможность создания сообщений, выход в чат и т. п.

</doc>
<doc id="916" url="?curid=916" title="BeOS">
BeOS

BeOS (не путать с BIOS) — операционная система, история которой начинается в 1991 г. Изначально разрабатывалась как базовая ОС для BeBox. К выгодным отличиям BeOS от других популярных в то время систем относят многопоточность, микроядерность, поддержку многопроцессорных архитектур, 64-битную журналируемую файловую систему, крайне удобный и простой пользовательский интерфейс.
История.
Создание компании Be Inc..
Корпорация Be Inc. была создана в 1990 году бывшим исполнительным директором Apple Жаном-Луи Гассье с целью создать компьютерную систему нового поколения (заметим, что Гассье пошёл по пути основателя Apple Стива Джобса и его платформы NeXT). На подъёме энтузиазма Гассье и его соратники объединились, чтобы сделать простой в использовании, надёжный компьютер, свободный от пережитков прошлого. "Планировалось создать именно компьютер", операционная система была только побочной целью. Например, файловая система не должна была содержать каталогов вообще, все файлы лежали на диске без распределения по директориям, а принадлежность к той или иной программе определялась на основе атрибутов — информации о файле, не записанной в самом файле.
BeBox.
Первые версии BeOS работали только на специально созданных компьютерах BeBox, которые тоже производились компанией Be Inc. Отличительными особенностями этих компьютеров были многопроцессорность (в одной из версий компьютера стояло 7 процессоров, в другой — 2), в двухпроцессорной версии — индикаторы загрузки процессоров на передней панели системного блока (известные также под названием Blinkenlights), тёмно-синий цвет системного блока и 37-битный порт на задней панели, известный под названием «GeekPort», с простым и удобным управлением для программиста — чтобы поощрять создание внешних устройств под BeOS. BeBox назывались «Silicon Graphics для нищих» из-за их мощности, позволяющей использовать BeBox в качестве графической рабочей станции при относительно невысокой стоимости. Первые прототипы BeBox строились на процессорах , пока их не сняли с производства. Тогда Ве решила перейти на процессоры PowerPC. С 1995 до 1997 всего было продано около двух тысяч компьютеров BeBox, большинство из которых работают и по сей день. Один из них можно увидеть в компьютерном музее в Бостоне. 30 января 1997 Be Inc. объявила, что сворачивает производство оборудования, и BeBox больше не выпускались.
PowerPC.
После того как было свёрнуто производство BeBox, операционной системе BeOS понадобилась новая платформа. Поскольку она к тому времени уже работала на PowerPC, в качестве новой платформы были выбраны компьютеры Macintosh фирмы Apple Computer, Inc. Портирование BeOS на Macintosh заняло два дня.
К тому времени традиционная операционная система компьютеров Макинтош (System или Classic) безнадёжно устарела, а проект разработки новой, современной системы (Copland) провалился, поэтому исполнительный директор Apple Гил Амелио начал переговоры о покупке Be Inc. Переговоры сорвались, поскольку Жан-Луи Гассье просил $200 миллионов, а Apple готова была потратить не более 125. Совет директоров Apple решил, что лучше выбрать NeXTSTEP и купил NeXT в 1996 году за $429 миллионов, вернув в руководство основателя компании Стива Джобса.
Затем Apple перестала делиться с Be Inc. спецификациями своих новых компьютеров, поэтому BeOS запускается лишь на некоторых Power Macintosh (на других моделях работа возможна только в эмуляторе). В 1997 году Power Computing поставлял BeOS вместе со своей серией клонов Macintosh, которые могли по выбору пользователя грузиться в Mac OS или BeOS.
Intel.
После неудачи с Apple Be Inc. решила перенести систему на обычные процессоры Intel, и, начиная с издания BeOS 3 (примерно 1997 г. также вышли издания 4, 4.5 и 5), эта операционная система работает на обычных IBM PC-совместимых компьютерах. Этот шаг был сделан с целью набрать группу последователей и занять свою нишу на рынке ОС. Минимальные требования для установки (не менявшиеся с тех пор) — процессор Intel Pentium, 32 мегабайта оперативной памяти, 500 мегабайт на жёстком диске, клавиатура и мышь: последнее является системным требованием, потому что без неё в BeOS работать нельзя — в отличие от, например, Microsoft Windows, в которой без указательного устройства ввода работать трудно, но можно.
Версия BeOS R5 стала последней версией BeOS, выпущенной компанией Be Inc. Впервые для широкой публики была выпущена бесплатная версия — Personal edition, которую каждый желающий мог установить на свой компьютер. Она широко распространялась в виде CD-приложений к журналам (в том числе и в России) и была выложена на сайте компании. Кроме того, было достигнуто соглашение с ведущими производителями компьютеров о предустановке BeOS в качестве второй системы, наряду с Windows.
Неудачный менеджмент привёл к тому, что бесплатная версия (BeOS 5 Personal Edition) успешно конкурировала с платной (BeOS 5 Professional). Попытка Be Inc. выпустить бесплатную версию оказалась неудачной с маркетинговой точки зрения: состав бесплатного пакета был таков, что почти полностью дублировал платную и продажи последней неуклонно падали — BeOS 5 Personal Edition распространялась как Windows-программа, устанавливавшаяся в логический раздел на одном из дисков компьютера и предполагалась только для ознакомительных целей, однако включала в себя весь инструментарий, необходимый для разбивки диска, установки системы в отдельный раздел и установки загрузчика, позволявшего выбрать загрузку Windows или BeOS.
Корпорация Microsoft надавила на производителей компьютеров (Hitachi, Compaq), и они отказались от предустановки двух систем на производимые машины. Малоизвестная операционная система так и не стала популярной среди пользователей. 8 сентября 2003 года Microsoft выплатила Be Inc. $23.3 миллионов по иску о нарушении антимонопольного законодательства.
В 2002 году компания Be Inc. объявила себя банкротом и продала всю свою интеллектуальную собственность фирме Palm за 11 млн долларов, куда перешла также и основная часть бывших работников Be Inc.
Cobalt.
В Palm бывшие разработчики BeOS работали над шестой версией операционной системы PalmOS для наладонников, опираясь на сделанные ещё в рамках BeOS наработки операционной системы (BeOS for Internet Appliances) для мобильных устройств.
Шестая версия Palm OS, называемая PalmOS Cobalt, вышла в свет в 2004 году, однако не пошла на серийные устройства и работала только на прототипах. После разделения Palm на PalmOne и PalmSource, с последующим приобретением последней компанией , работы по Cobalt были прекращены, и начата разработка новой ОС для устройств Palm на базе Linux. Все права на систему сейчас принадлежат ACCESS Co., Ltd.
Скорее всего, часть разработчиков BeOS приняли участие в создании Palm webOS, так как новая ОС, основанная на ядре Linux и выпущенная в 2009 году, использует ту же концепцию API-интерфейса для Web-приложений, которая впервые появилась в (BeOS for Internet Appliances) ещё в 2000 году.
Современность.
Несмотря на использование передовых на время существования Be Inc. технологий, BeOS не смогла набрать достаточной массы пользователей и приложений для дальнейшего существования. В настоящее время среди нескольких проектов по возрождению BeOS наибольшие шансы на успех у Haiku team. Группа энтузиастов, среди которых несколько бывших инженеров Be Inc. пишет бинарно-совместимую с BeOS операционную систему с открытыми исходными кодами (в данный момент доступна альфа-версия Haiku R1/Alpha 4).
Незадолго до поглощения Be Inc. Palm’ом немецкая компания приобрела у Be Inc. исходные коды BeOS, как она сама заявляет, однако до сих пор история остаётся тёмной. Наверняка известно только, что у yellowTab есть лицензия от Be Inc. на перепродажу и модификацию BeOS. Вскоре появилась созданная yellowTab операционная система Zeta, являющаяся изменённой версией BeOS 5.1 или операционной системой, созданной на основе полученных от Be Inc. исходных кодов, для BeOS нового поколения (последнее, однако, маловероятно). В начале 2005 года в Ганновере на CeBIT была показана первая версия Zeta. Zeta успешно продавалась; на середину 2005 года было продано больше 80 тыс. копий — это больше, чем было продано копий BeOS за все годы существования Be Inc.
В 2006 году компания yellowTAB подверглась процедуре банкротства, и права на распространение Zeta перешли к немецкой компании , которая в 2007 году отказалась от дальнейшего распространения и поддержки Zeta из-за недостаточного объёма продаж и возможных проблем с правами на исходный код и распространение этой ОС.
BeOS R5.1d0.
BeOS R5.1d0 или Dano/EXP (также известна как "EXP", "Dano", "EXP/Dan0" или "Dan0", "«Подарок»" в русскоязычном BeOS-сообществе) — кодовое имя сборки незавершенного релиза R5.1, утекшего из Be Inc. Дата сборки — день закрытия последней, 15 ноября 2001 года. В Dano реализованы OpenGL, новый сетевой стек (BONE), оконные украшения, XML kit, новый USB-стек, поддержка подсказок, новыx принтеров, новые шрифты, обновлённые Media kit, Interface Kit и app_server, новые драйвера (например, поддержка Adaptec U160 SCSI контроллеров и улучшенная поддержка SB128) и пр.
Существует мнение, согласно которому Be Inc. двигалась в сторону открытия BeOS, в пользу чего свидетельствует замена некоторых проприетарных компонентов на открытые аналоги (замена собственного MP3-кодировщика на Lame, RSA Encryption Engine в NetPositive на OpenSSL).

</doc>
<doc id="920" url="?curid=920" title="Delphi (язык программирования)">
Delphi (язык программирования)

Delphi (Де́лфи, произносится ) — императивный, структурированный, объектно-ориентированный язык программирования со строгой статической типизацией переменных. Основная область использования — написание прикладного программного обеспечения.Первоначально носил название Object Pascal и исторически восходит к одноимённому диалекту языка, разработанному в фирме Apple в 1986 году группой Ларри Теслера. Однако в настоящее время термин Object Pascal чаще всего употребляется в значении языка среды программирования Delphi. Начиная с Delphi 7, в официальных документах Borland стала использовать название Delphi для обозначения языка Object Pascal.
Целевая платформа.
Изначально среда разработки Delphi была предназначена исключительно для разработки приложений Windows, затем был реализован вариант для платформ Linux (как Kylix), однако после выпуска в 2002 году Kylix 3 его разработка была прекращена, и вскоре было объявлено о поддержке Microsoft .NET, которая, в свою очередь, была прекращена с выходом Delphi 2007.
На сегодняшний день, наряду с поддержкой разработки 32 и 64-разрядных программ для Windows, реализована возможность создавать приложения для Apple Mac OS X (начиная с Embarcadero Delphi XE2), iOS (включая симулятор, начиная с XE4 посредством собственного компилятора), а также, в Delphi XE5, для Google Android (непосредственно исполняемые на ARM-процессоре).
Независимая, сторонняя реализация среды разработки проектом Lazarus (Free Pascal, компиляция в режиме совместимости с Delphi) позволяет использовать его для создания приложений на Delphi для таких платформ, как Linux, Mac OS X и Windows CE.
Также предпринимались попытки использования языка в проектах GNU (например, Notepad GNU) и написания компилятора для GCC.
Философия и отличия от популярных прикладных языков программирования.
При создании языка (и здесь качественное отличие от языка C) не ставилась задача обеспечить максимальную производительность исполняемого кода или лаконичность исходного кода для экономии оперативной памяти. Изначально, язык ставил во главу угла стройность и высокую читаемость, поскольку был предназначен для обучения дисциплине программирования. Эта изначальная стройность, в дальнейшем, как по мере роста аппаратных мощностей, так и в результате появления новых парадигм, упростила расширение языка новыми конструкциями.
Так, сложность объектного C++, по сравнению с C, выросла весьма существенно и затруднила его изучение в качестве первого языка программирования, чего нельзя сказать об Object Pascal относительно Pascal.
Ниже перечислены некоторые отличия синтаксических конструкций Delphi от семейства C-подобных языков (C/C++/Java/C#):
Как Delphi, так и C# допускают использование индексируемых свойств: в этом случае синтаксис доступа к такому свойству аналогичен доступу к элементу массива. Однако, если в Delphi число индексируемых свойств, равно как и число индексаторов, может быть произвольным, в C# индексатор применим лишь к специальному свойству по умолчанию. Кроме того, в Delphi свойство по умолчанию не только может быть индексируемым, также оно может быть перегружено по типу индексатора:
История языка.
Object Pascal — результат развития языка Турбо Паскаль, который, в свою очередь, развился из языка Паскаль. Паскаль был полностью процедурным языком, Турбо Паскаль, начиная с версии 5.5, добавил в Паскаль объектно-ориентированные свойства, а в Object Pascal — динамическую идентификацию типа данных с возможностью доступа к метаданным классов (то есть к описанию классов и их членов) в компилируемом коде, также называемую интроспекцией — данная технология получила обозначение RTTI. Так как все классы наследуют функции базового класса TObject, то любой указатель на объект можно преобразовать к нему, после чего воспользоваться методом ClassType и функцией TypeInfo, которые и обеспечат интроспекцию.
Также отличительным свойством Object Pascal от С++ является то, что объекты по умолчанию располагаются в динамической памяти. Однако можно переопределить виртуальные методы NewInstance и FreeInstance класса TObject. Таким образом, абсолютно любой класс может осуществить «желание» «где хочу — там и буду лежать». Соответственно организуется и «многокучность».
Object Pascal (Delphi) является результатом функционального расширения Turbo Pascal.
Delphi оказал огромное влияние на создание концепции языка C# для платформы .NET. Многие его элементы и концептуальные решения вошли в состав С#. Одной из причин называют переход Андерса Хейлсберга, одного из ведущих разработчиков Дельфи, из компании Borland Ltd. в Microsoft Corp.
Delphi for .NET — среда разработки Delphi, а также язык Delphi (Object Pascal), ориентированные на разработку приложений для .NET.
Первая версия полноценной среды разработки Delphi для .NET — Delphi 8. Она позволяла писать приложения только для .NET. Delphi 2006 поддерживает технологию MDA с помощью ECO (Enterprise Core Objects) версии 3.0.
В марте 2006 года компания Borland приняла решение о прекращении дальнейшего совершенствования интегрированных сред разработки JBuilder, Delphi и C++ Builder по причине убыточности этого направления. Планировалась продажа IDE-сектора компании. Группа сторонников свободного программного обеспечения организовала сбор средств для покупки у Borland прав на среду разработки и компилятор.
Однако в ноябре того же года было принято решение отказаться от продажи IDE-бизнеса. Тем не менее, разработкой IDE продуктов теперь будет заниматься новая компания — CodeGear, которая будет финансово полностью подконтрольна Borland.
В августе 2006 года Borland выпустил облегченную версию RAD Studio под именем Turbo: Turbo Delphi (для Win32 и .NET), Turbo C#, Turbo C++.
В марте 2008 года было объявлено о прекращении развития этой линейки продуктов.
В марте 2007 года CodeGear порадовала пользователей обновлённой линейкой продуктов Delphi 2007 for Win32 и выходом совершенно нового продукта Delphi 2007 for PHP.
В июне 2007 года CodeGear представила свои планы на будущее, то есть опубликовала так называемый roadmap.
25 августа 2008 года компания Embarcadero, новый хозяин CodeGear, опубликовала пресс-релиз на Delphi for Win32 2009. Версия привнесла множество нововведений в язык, как то:
Вышедшая в 2011 году версия Delphi XE2 добавила компилятор Win64 и кросс-компиляцию для операционных систем фирмы Apple (MacOS X, iOS).
Вышедшая в 2013 году версия Delphi XE5 обеспечила кросс-компиляцию приложений для устройств на платформе ARM/Android.
Синтаксис языка.
Операторы.
Список операторов через пробел: codice_17codice_18codice_19codice_20codice_21codice_22codice_23
Выражения.
Выражения в Object Pascal (Delphi) бывают арифметическими, логическими и строковыми.
Основные логические выражения:Логические выражения в основном употребляются в условных операторах. К логическим выражениям относятся такие операции как:
Те же четыре оператора используются как бинарные для целочисленных типов. К битовым операторам целочисленных типов относятся также codice_28, codice_29 — операторы логического сдвига.
По типу возвращаемого значения "различаются" операторы целочисленного деления (codice_30 и codice_31) и оператор codice_32. Последний, применяемый как к целочисленным, так и к вещественным операндам, всегда в результате дает вещественный тип.
Операторы codice_33, codice_34, codice_35 — сложение, вычитание, пересечение — используются также для манипуляции со встроенным "множественным" типом. Для проверки вхождения элемента во множество предназначен специальный оператор in:
Оператор сложения codice_33 используется также для конкатенации строк (когда используются встроенные строковые типы).
Оператор codice_37 разыменовывает указатель. Оператор codice_38 выполняет обратное действие, возвращая адрес переменной. Поддерживается простые операции сложения и вычитания над типизированными указателями, с учётом размера типов, на которые они указывают ("умная" арифметика указателей).
В Delphi оператор присваивания, codice_14, образует не выражение, а операцию, таким образом, не допускается "нанизывание" присваиваний.
Система типов.
Система типов в Delphi строгая, статическая. Поддеживаются следующие типы данных:
Объекты.
Объекты как экземпляры класса объявляются в программе в разделе codice_48 как обычные переменные. Например:
Как и в случае записей, для обращения к конкретному элементу объекта (полю, свойству или методу) указывается имя объекта и имя элемента, разделённые точкой, то есть имя элемента является составным.
Классы.
В языке Object Pascal классы — это специальные типы данных, используемые для описания объектов. Соответственно объект, имеющий тип какого-либо класса, является экземпляром (instance) этого класса или переменной этого типа.
Класс представляет собой особый тип, имеющий в своём составе такие элементы, как поля, свойства и методы. Поля класса аналогичны полям записи и служат для хранения информации об объекте. "Методами" называются процедуры и функции, предназначенные как правило для обработки полей. "Свойства" занимают промежуточное положение между полями и методами.
Объектно-ориентированные особенности языка.
Инкапсуляция.
Объединение и скрытие объектных данных, а также обрабатывающих их методов, внутри конкретного класса от пользователя называется инкапсуляцией.
Наследование.
При создании новых объектов способность получить все свойства и методы от своих предков называют наследованием. Такие объекты наследуют после своего создания все поля, свойства, события, методы и прочее от своих предков. Наследование часто избавляет разработчиков от рутинной работы и позволяет не мешкая приступить к разработке чего-то нового.
Полиморфизм.
Delphi поддерживает только ad hoc полиморфизм, т. е. методы различных объектов, которые могут иметь одинаковые имена, но по внутреннему содержимому отличаются друг от друга.
Примеры.
Структура программы.
Каждая написанная программа на языке Delphi состоит из заголовка программы (program NewApplication;), поля используемых модулей Uses (к примеру, Uses Windows, Messages, SysUtils и т. д.), который может не входить в саму структуру, а также блоков описания и исполнения (начинаются составным оператором begin и заканчиваются end.).
Пример № 1.
Вывод сообщения «Hello, world!» в консольном приложении Delphi
Пример № 2.
Вывод сообщения «Hello, world!» в 32-разрядном GUI приложении Delphi
Пример № 3.
Динамическое создание списка строк и запись его в файл. 
Известное программное обеспечение, созданное на Delphi.
Среди многих распространённых программных продуктов, написанных на Delphi, можно найти:

</doc>
<doc id="922" url="?curid=922" title="DNS">
DNS

DNS ( — система доменных имён) — компьютерная распределённая система для получения информации о доменах. Чаще всего используется для получения IP-адреса по имени хоста (компьютера или устройства), получения информации о маршрутизации почты, обслуживающих узлах для протоколов в домене (SRV-запись).
Распределённая база данных DNS поддерживается с помощью иерархии DNS-серверов, взаимодействующих по определённому протоколу.
Основой DNS является представление об иерархической структуре доменного имени и "зонах". Каждый сервер, отвечающий за имя, может "делегировать" ответственность за дальнейшую часть домена другому серверу (с административной точки зрения — другой организации или человеку), что позволяет возложить ответственность за актуальность информации на серверы различных организаций (людей), отвечающих только за «свою» часть доменного имени.
Начиная с 2010 года в систему DNS внедряются средства проверки целостности передаваемых данных, называемые "DNS Security Extensions" (DNSSEC). Передаваемые данные не шифруются, но их достоверность проверяется криптографическими способами.
Внедряемый стандарт DANE обеспечивает передачу средствами DNS достоверной криптографической информации (сертификатов), используемых для установления безопасных и защищённых соединений транспортного и прикладного уровней.
Ключевые характеристики DNS.
DNS обладает следующими характеристиками:
DNS важна для работы Интернета, так как для соединения с узлом необходима информация о его IP-адресе, а для людей проще запоминать буквенные (обычно осмысленные) адреса, чем последовательность цифр IP-адреса. В некоторых случаях это позволяет использовать виртуальные серверы, например, HTTP-серверы, различая их по имени запроса. Первоначально преобразование между доменными и IP-адресами производилось с использованием специального текстового файла hosts, который составлялся централизованно и автоматически рассылался на каждую из машин в своей локальной сети. С ростом Сети возникла необходимость в эффективном, автоматизированном механизме, которым и стала DNS.
DNS была разработана Полом Мокапетрисом в 1983 году; оригинальное описание механизмов работы содержится в RFC 882 и RFC 883. В 1987 публикация RFC 1034 и RFC 1035 изменила спецификацию DNS и отменила RFC 882, RFC 883 и RFC 973 как устаревшие.
Терминология и принципы работы.
Ключевыми понятиями DNS являются:
Система DNS содержит иерархию DNS-серверов, соответствующую иерархии зон. Каждая зона поддерживается как минимум одним "авторитетным сервером DNS" (от  — авторитетный), на котором расположена информация о домене.
Имя и IP-адрес не тождественны — один IP-адрес может иметь множество имён, что позволяет поддерживать на одном компьютере множество веб-сайтов (это называется виртуальный хостинг). Обратное тоже справедливо — одному имени может быть сопоставлено множество IP-адресов: это позволяет создавать балансировку нагрузки.
Для повышения устойчивости системы используется множество серверов, содержащих идентичную информацию, а в протоколе есть средства, позволяющие поддерживать синхронность информации, расположенной на разных серверах. Существует 13 корневых серверов, их адреса практически не изменяются.
Протокол DNS использует для работы TCP- или UDP-порт 53 для ответов на запросы. Традиционно запросы и ответы отправляются в виде одной UDP-датаграммы. TCP используется, когда размер данных ответа превышает 512 байт, и для AXFR-запросов.
Рекурсия.
Термином Рекурсия в DNS обозначают алгоритм поведения DNS-сервера, при котором сервер выполняет от имени клиента полный поиск нужной информации во всей системе DNS, при необходимости обращаясь к другим DNS-серверам.
DNS-запрос может быть "рекурсивным" — требующим полного поиска, — и "нерекурсивным" (или "итеративным") — не требующим полного поиска.
Аналогично — DNS-сервер может быть "рекурсивным" (умеющим выполнять полный поиск) и "нерекурсивным" (не умеющим выполнять полный поиск). Некоторые программы DNS-серверов, например, BIND, можно сконфигурировать так, чтобы запросы одних клиентов выполнялись "рекурсивно", а запросы других — "нерекурсивно".
При ответе на "нерекурсивный" запрос, а также при неумении или запрете выполнять "рекурсивные" запросы, DNS-сервер либо возвращает данные о зоне, за которую он ответственен, либо возвращает ошибку. Настройки нерекурсивного сервера, когда при ответе выдаются адреса серверов, которые обладают большим объёмом информации о запрошенной зоне, чем отвечающий сервер (чаще всего — адреса корневых серверов), являются некорректными, и такой сервер может быть использован для организации DoS-атак.
В случае "рекурсивного" запроса DNS-сервер опрашивает серверы (в порядке убывания уровня зон в имени), пока не найдёт ответ или не обнаружит, что домен не существует (на практике поиск начинается с наиболее близких к искомому DNS-серверов, если информация о них есть в кэше и не устарела, сервер может не запрашивать другие DNS-серверы).
Рассмотрим на примере работу всей системы.
Предположим, мы набрали в браузере адрес ru.wikipedia.org. Браузер спрашивает у сервера DNS: «какой IP-адрес у ru.wikipedia.org»?
Однако сервер DNS может ничего не знать не только о запрошенном имени, но и даже обо всём домене wikipedia.org.
В этом случае сервер обращается к "корневому серверу" — например, 198.41.0.4. Этот сервер сообщает — «У меня нет информации о данном адресе, но я знаю, что 204.74.112.1 является ответственным за зону org.» Тогда сервер DNS направляет свой запрос к 204.74.112.1, но тот отвечает «У меня нет информации о данном сервере, но я знаю, что 207.142.131.234 является ответственным за зону wikipedia.org.» Наконец, тот же запрос отправляется к третьему DNS-серверу и получает ответ — IP-адрес, который и передаётся клиенту — браузеру.
В данном случае при разрешении имени, то есть в процессе поиска IP по имени:
Иногда допускается, чтобы запрошенный сервер передавал "рекурсивный" запрос «вышестоящему» DNS-серверу и дожидался готового ответа.
При "рекурсивной" обработке запросов все ответы проходят через DNS-сервер, и он получает возможность "кэшировать" их. Повторный запрос на те же имена обычно не идет дальше "кэша" сервера, обращения к другим серверам не происходит вообще. Допустимое время хранения ответов в "кэше" приходит вместе с ответами (поле "TTL" ресурсной записи).
Рекурсивные запросы требуют больше ресурсов от сервера (и создают больше трафика), так что обычно принимаются от «известных» владельцу сервера узлов (например, провайдер предоставляет возможность делать рекурсивные запросы только своим клиентам, в корпоративной сети рекурсивные запросы принимаются только из локального сегмента). Нерекурсивные запросы обычно принимаются ото всех узлов сети (и содержательный ответ даётся только на запросы о зоне, которая размещена на узле, на DNS-запрос о других зонах обычно возвращаются адреса других серверов).
Обратный DNS-запрос.
DNS используется в первую очередь для преобразования символьных имён в IP-адреса, но он также может выполнять обратный процесс. Для этого используются уже имеющиеся средства DNS. Дело в том, что с записью DNS могут быть сопоставлены различные данные, в том числе и какое-либо символьное имя. Существует специальный домен in-addr.arpa, записи в котором используются для преобразования IP-адресов в символьные имена. Например, для получения DNS-имени для адреса 11.22.33.44 можно запросить у DNS-сервера запись 44.33.22.11.in-addr.arpa, и тот вернёт соответствующее символьное имя. Обратный порядок записи частей IP-адреса объясняется тем, что в IP-адресах старшие биты расположены в начале, а в символьных DNS-именах старшие (находящиеся ближе к корню) части расположены в конце.
Записи DNS.
Записи DNS, или Ресурсные записи ("англ." Resource Records, RR) — единицы хранения и передачи информации в DNS. Каждая ресурсная запись состоит из следующих полей:
Наиболее важные типы DNS-записей:
Зарезервированные доменные имена.
Документ RFC 2606 (Reserved Top Level DNS Names — Зарезервированные имена доменов верхнего уровня) определяет названия доменов, которые следует использовать в качестве примеров (например, в документации), а также для тестирования. Кроме codice_1, codice_2 и codice_3, в эту группу также входят codice_4, codice_5 и др.
Интернациональные доменные имена.
Доменное имя может состоять только из ограниченного набора ASCII-символов, позволяя набрать адрес домена независимо от языка пользователя. ICANN утвердил основанную на Punycode систему IDNA, преобразующую любую строку в кодировке Unicode в допустимый DNS набор символов.
Программное обеспечение DNS.
Серверы имен:

</doc>
<doc id="927" url="?curid=927" title="FTP">
FTP

FTP ( — протокол передачи файлов) — стандартный протокол, предназначенный для передачи файлов по TCP-сетям (например, Интернет). Использует 21-й порт. FTP часто используется для загрузки сетевых страниц и других документов с частного устройства разработки на открытые сервера хостинга.
Протокол построен на архитектуре «клиент-сервер» и использует разные сетевые соединения для передачи команд и данных между клиентом и сервером. Пользователи FTP могут пройти аутентификацию, передавая логин и пароль открытым текстом, или же, если это разрешено на сервере, они могут подключиться анонимно. Можно использовать протокол SSH для безопасной передачи, скрывающей (шифрующей) логин и пароль, а также шифрующей содержимое.
Первые клиентские FTP-приложения были интерактивными инструментами командной строки, реализующими стандартные команды и синтаксис. Графические пользовательские интерфейсы с тех пор были разработаны для многих используемых по сей день операционных систем. Среди этих интерфейсов как программы общего веб-дизайна вроде Microsoft Expression Web, так и специализированные FTP-клиенты (например, FileZilla).
FTP является одним из старейших прикладных протоколов, появившимся задолго до HTTP, и даже до TCP/IP, в 1971 году. В первое время он работал поверх протокола NCP. Он и сегодня широко используется для распространения ПО и доступа к удалённым хостам.
Описание протокола.
Отличие от HTTP.
Достаточно яркая особенность протокола FTP в том, что он использует множественное (как минимум — двойное) подключение. При этом один канал является управляющим, через который поступают команды серверу и возвращаются его ответы (обычно через TCP-порт 21), а через остальные происходит собственно передача данных, по одному каналу на каждую передачу. Поэтому в рамках одной сессии по протоколу FTP можно передавать одновременно несколько файлов, причём в обоих направлениях. Для каждого канала данных открывается свой TCP порт, номер которого выбирается либо сервером, либо клиентом, в зависимости от режима передачи.
Протокол FTP имеет двоичный режим передачи, что сокращает накладные расходы трафика и уменьшает время обмена данными при передаче больших файлов. Протокол же HTTP обязательно требует кодирования двоичной информации в текстовую форму, например при помощи алгоритма Base64.
Начиная работу через протокол FTP, клиент входит в сессию, и все операции проводятся в рамках этой сессии (проще говоря, сервер помнит текущее состояние). Протокол HTTP ничего не «помнит» — его задача — отдать данные и забыть, поэтому запоминание состояния при использовании HTTP осуществляется внешними по отношению к протоколу методами.
FTP работает на прикладном уровне модели OSI и используется для передачи файлов с помощью TCP/IP. Для этого должен быть запущен FTP-сервер, ожидающий входящих запросов. Компьютер-клиент может связаться с сервером по порту 21. Это соединение (поток управления) остаётся открытым на время сессии. Второе соединение (поток данных), может быть открыт как сервером из порта 20 к порту соответствующего клиента (активный режим), или же клиентом из любого порта к порту соответствующего сервера (пассивный режим), что необходимо для передачи файла данных. Поток управления используется для работы с сессией — например, обмен между клиентом и сервером командами и паролями с помощью telnet-подобного протокола. Например, «RETR имя файла» передаст указанный файл от сервера клиенту. Вследствие этой двухпортовой структуры, FTP считается внешнеполосным протоколом, в отличие от внутриполосного HTTP.
Соединение и передача данных.
Протокол определен в RFC 959.
Сервер отвечает по потоку управления трёхзначными ASCII-кодами состояния с необязательным текстовым сообщением. Например, «200» (или «200 ОК») означает, что последняя команда была успешно выполнена. Цифры представляют код ответа, а текст — разъяснение или запрос. Текущая передача по потоку данных может быть прервана с помощью прерывающего сообщения, посылаемого по потоку управления.
FTP может работать в активном или пассивном режиме, от выбора которого зависит способ установки соединения. В активном режиме клиент создаёт управляющее TCP-соединение с сервером и отправляет серверу свой IP-адрес и произвольный номер клиентского порта, после чего ждёт, пока сервер запустит TCP-соединение с этим адресом и номером порта. В случае, если клиент находится за брандмауэром и не может принять входящее TCP-соединение, может быть использован пассивный режим. В этом режиме клиент использует поток управления, чтобы послать серверу команду PASV, и затем получает от сервера его IP-адрес и номер порта, которые затем используются клиентом для открытия потока данных с произвольного клиентского порта к полученному адресу и порту. Оба режима были обновлены в сентябре 1998 г. для поддержки IPv6. В это время были проведены дальнейшие изменения пассивного режима, обновившие его до расширенного пассивного режима.
При передаче данных по сети могут быть использованы четыре представления данных:
Для текстовых файлов предоставлены различные форматы управления и настройки структуры записи. Эти особенности были разработаны для работы с файлами, содержащими Telnet или ASA-форматирование.
Передача данных может осуществляться в любом из трёх режимов:
Аутентификация.
FTP-аутентификация использует схему имя пользователя/пароль для предоставления доступа. Имя пользователя посылается серверу командой USER, а пароль — командой PASS. Если предоставленная клиентом информация принята сервером, то сервер отправит клиенту приглашение и начинается сессия. Пользователи могут, если сервер поддерживает эту особенность, войти в систему без предоставления учётных данных, но сервер может предоставить только ограниченный доступ для таких сессий.
Анонимный FTP.
Хост, обеспечивающий FTP-сервис, может предоставить анонимный доступ к FTP. Пользователи обычно входят в систему как «anonymous» (может быть регистрозависимым на некоторых FTP-серверах) в качестве имени пользователя. Хотя обычно пользователей просят прислать адрес их электронной почты вместо пароля, никакой проверки фактически не производится. Многие FTP-хосты, предоставляющие обновления программного обеспечения, поддерживают анонимный доступ.
NAT-PT.
Специально для работы FTP-протокола через межсетевые экраны было сделано расширение NAT, называемое NAT-PT (rfc2766), позволяющее транслировать входящие соединения от сервера к клиенту через NAT. В процессе такого соединения NAT подменяет передаваемые данные от клиента, указывая серверу истинный адрес и порт, с которым сможет соединиться сервер, а потом транслирует соединение от сервера от этого адреса клиенту на его адрес. Несмотря на все меры и нововведения, принятые для поддержки FTP-протокола, на практике функция NAT-PT обычно отключается во всех роутерах и маршрутизаторах с целью обеспечения дополнительной безопасности от вирусных угроз.
NAT и обход брандмауэров.
FTP обычно передает данные при наличии соединения сервера с клиентом, после того как клиент отправил команду PORT. Это создает проблему как для NAT, так и для брандмауэров, которые не разрешают соединения из интернета к внутренним хостам. Для NAT дополнительной проблемой является то, что представление IP-адресов и номера порта в команде PORT относится к IP-адресу и порту внутреннего хоста, вместо публичного IP-адреса и NAT-порта. Существует два подхода к этой проблеме. Первый заключается в том, что FTP-клиент и FTP-сервер используют команду PASV, которая вызывает соединение для передачи данных, установленное от клиента к серверу. Второй подход — изменение для NAT значений команды PORT с помощью шлюза на прикладном уровне.
Поддержка веб-браузерами.
Большая часть обычных веб-браузеров может извлекать файлы, расположенные на FTP-серверах, хотя они могут не поддерживать расширения протоколов вроде FTPS. Когда указан FTP-адрес, а не HTTP-адрес, доступный контент на удалённом сервере представляется аналогично остальному веб-контенту. Полностью функциональный FTP-клиент может быть запущен в Firefox как расширение FireFTP.
Синтаксис.
Синтаксис FTP URL описан в RFC1738, в форме: ftp://&lt;хост&gt;&lt;порт&amp;gt/&lt;путь&gt; (параметры в квадратных скобках необязательны). Например:
ftp://public.ftp-servers.example.com/mydirectory/myfile.txt
или:
ftp://user001:secretpassword@private.ftp-servers.example.com/mydirectory/myfile.txt
Более детально об указании имени пользователя и пароля написано в документации браузеров. По умолчанию, большинство веб-браузеров используют пассивный (PASV) режим, который лучше обходит брандмауэры конечного пользователя.
Безопасность.
FTP не разрабатывался как защищённый (особенно по нынешним меркам) протокол и имеет многочисленные уязвимости в защите. В мае 1999 авторы RFC 2577 свели уязвимости в следующий список проблем:
FTP не может зашифровать свой трафик, все передачи — открытый текст, поэтому имена пользователей, пароли, команды и данные могут быть прочитаны кем угодно, способным перехватить пакет по сети. Эта проблема характерна для многих спецификаций Интернет-протокола (в их числе SMTP, Telnet, POP, IMAP), разработанных до создания таких механизмов шифрования, как TLS и SSL. Обычное решение этой проблемы — использовать «безопасные», TLS-защищённые версии уязвимых протоколов (FTPS для FTP, TelnetS для Telnet и т. д.) или же другой, более защищённый протокол, вроде SFTP/SCP, предоставляемого с большинством реализаций протокола Secure Shell.
Безопасный FTP.
Существует несколько методов безопасной передачи файлов, в одно или другое время называемых «Безопасным FTP».
FTPS.
Явный FTPS — расширение стандарта FTP, позволяющее клиентам требовать того, чтобы FTP-сессия была зашифрована. Это реализуется отправкой команды «AUTH TLS». Сервер обладает возможностью позволить или отклонить соединения, которые не запрашивают TLS. Это расширение протокола определено в спецификации RFC 4217. Неявный FTPS — устаревший стандарт для FTP, требующий использования SSL- или TLS-соединения. Этот стандарт должен был использовать отличные от обычного FTP порты.
SFTP.
SFTP, или «SSH File Transfer Protocol», не связан с FTP, за исключением того, что он тоже передаёт файлы и имеет аналогичный набор команд для пользователей. SFTP, или безопасный FTP, — это программа, использующая SSH (Secure Shell) для передачи файлов. В отличие от стандартного FTP он шифрует и команды, и данные, предохраняя пароли и конфиденциальную информацию от открытой передачи через сеть. По функциональности SFTP похож на FTP, но так как он использует другой протокол, клиенты стандартного FTP не могут связаться с SFTP-сервером и наоборот.
FTP через SSH (не SFTP).
FTP через SSH (не SFTP) относится к практике туннелирования обычной FTP-сессии через SSH-соединение. Поскольку FTP использует несколько TCP-соединений, туннелирование через SSH особенно затруднительно. Когда много SSH-клиентов пытаются установить туннель для канала управления (изначальное «клиент-сервер» соединение по порту 21), защищён будет только этот канал; при передаче данных программное обеспечение FTP на любом конце установит новые TCP-соединения (каналы данных), которые обойдут SSH-соединение и, таким образом, лишатся целостной защиты.
Иначе, для клиентского программного обеспечения SSH необходимо иметь определённые знания о FTP для отслеживания и перезаписи сообщений потока управления FTP и автономного открытия новых перенаправлений для потока данных FTP. Программные пакеты, поддерживающие этот режим:
FTP через SSH иногда относят к безопасным FTP; но не стоит путать его с другими методами, такими как SSL/TLS (FTPS). Другие методы передачи файлов с помощью SSH и не связанные с FTP — SFTP и SCP; в каждом из них и учётные и файловые данные всегда защищены протоколом SSH.
История.
Первая реализация протокола (1971 г.) предусматривала обмен между клиентом и сервером сообщениями, состоящими из заголовка (72 бит) и данных переменной длины. Заголовок сообщения включал в себя запрос к FTP-серверу или ответ от него, тип и длину передаваемых данных. В качестве данных передавались параметры запроса (например, путь и имя файла), информация от сервера (например, список файлов в каталоге) и сами файлы. Таким образом, команды и данные передавались по одному и тому же каналу.
В 1972 г. протокол был полностью изменён, и принял вид, близкий к современному. Команды с параметрами от клиента и ответы сервера передаются по TELNET-соединению (канал управления), для передачи данных создаётся отдельное соединение (канал данных).
В последующих редакциях была добавлена возможность работы в пассивном режиме, передачи файлов между FTP-серверами, введены команды получения информации, смены текущего каталога, создания и удаления каталогов, сохранения файлов под уникальным именем. Некоторое время существовали команды для передачи электронной почты через FTP, однако впоследствии они были исключены из протокола.
В 1980 г. FTP-протокол стал использовать TCP. Последняя редакция протокола была выпущена в 1985 г. В 1997 г. появилось дополнение к протоколу, позволяющее шифровать и подписывать информацию в канале управления и канале данных. В 1999 г. выпущено дополнение, посвящённое интернационализации протокола, которое рекомендует использовать кодировку UTF-8 для команд и ответов сервера и определяет новую команду LANG, устанавливающую язык ответов.
Коды ответов FTP.
Ниже представлено краткое описание кодов ответа, которые могут быть возвращены FTP-сервером. Эти коды были стандартизированы IETF в RFC 959. Как было сказано ранее, код ответа — трёхзначное число. Первая цифра отвечает за один из трёх исходов: успех, отказ или указание на ошибку либо неполный ответ.
Вторая цифра определяет тип ошибки:
Третья цифра окончательно специфицирует ошибку.
Пример.
 220 FTP server ready.
Аргумент 192,168,254,253,207,56 означает, что соединение к серверу ожидается на узле с IP-адресом 192.168.254.253 на порту 207 « 8 + 56 = 53048 (где « — операция побитового сдвига, 207 записывается в младший разряд, а потом сдвигается в старший, чтобы в младший записать 56 или 207*256+56=53048).
На многих FTP-серверах существует каталог (под названием incoming, upload и т. п.), открытый на запись и предназначенный для закачки файлов на сервер. Это позволяет пользователям наполнять сервера свежими данными.
FXP.
FXP ( — протокол обмена файлами) — способ передачи файлов между двумя FTP-серверами напрямую, не закачивая их на свой компьютер. При FXP-сессии клиент открывает два FTP-соединения к двум разным серверам, запрашивая файл на первом сервере, указывая в команде PORT IP-адрес второго сервера.
Несомненным преимуществом поддержки стандарта FXP является то, что на конечных пользователей, желающих скопировать файлы с одного FTP-сервера на другой, уже не действует ограничение пропускной способности их собственного интернет-соединения. Нет необходимости скачивать себе файл, чтобы потом загрузить его на другой FTP-сервер. Таким образом, время передачи файлов будет зависеть только от скорости соединения между двумя удаленными FTP-серверами, которая в большинстве случаев заведомо больше «пользовательской».
FXP стал использоваться злоумышленниками для атак на другие серверы: в команде PORT указывается IP-адрес и порт атакуемого сервиса на компьютере жертвы, и командами RETR/STOR производится обращение на этот порт от лица FTP-сервера, а не атакующей машины, что позволяло устраивать масштабные DDoS-атаки с использованием сразу многих FTP-серверов, либо обходить систему безопасности компьютера жертвы, если он полагается только на проверку IP клиента и используемый для атаки FTP-сервер находится в доверенной сети или на шлюзе. В результате сейчас практически все серверы проверяют соответствие IP-адреса, указанного в команде PORT, IP-адресу FTP-клиента и по умолчанию запрещают использование там IP-адресов третьих сторон. Таким образом, использование FXP невозможно при работе с публичными FTP-серверами.

</doc>
<doc id="931" url="?curid=931" title="Gnutella">
Gnutella

Gnutella — полностью децентрализованная файлообменная сеть в рамках Интернета, потомок Napster, отличается принципиальным отсутствием центрального сервера. Сеть формируется, когда один пользователь Gnutella соединяется с другим пользователем, после чего они могут обмениваться доступной информацией. Обмениваться можно файлами любых форматов, есть множество удобных функций. В результате полной децентрализации сеть практически невозможно уничтожить, так как для этого потребуется вывести из строя каждый узел сети.
История появления сети Gnutella.
Первый клиент сети Gnutella был разработан Джастином Франкелем и Томом Пеппером из Nullsoft в начале 2000 года, вскоре после приобретения их компанией AOL. 14 марта программа была доступна для скачивания на серверах в Nullsoft. Первая версия программы давала возможность пользователю искать и обмениваться всеми видами файлов с другими владельцами Gnutella без участия каких-либо серверов. Это событие было заранее анонсировано на Slashdot и в этот день программу скачали тысячи людей. Исходный код должен был быть выпущен позже, в соответствии с GNU General Public License (GPL).
На следующий день AOL остановила распространение программы по правовым вопросам и отстранила Nullsoft от выполнения любой дальнейшей работы над проектом (официально AOL назвала Gnutella как «unauthorized freelance project» и открестились от него), после чего разработчики Gnutella, во главе с Джастином Френкелем, уволились. Но это не помешало распространению Gnutella, через несколько дней протокол был подвергнут реверс-инженерингу и начали появляться свободные и открытые клоны. Этот изначальный процесс параллельного развития различных клиентов различными группами продолжается и сегодня.
Механизм работы.
При подключении клиент получает от узла, с которым ему удалось соединиться, список из пяти активных узлов; им отсылается запрос на поиск ресурса по ключевому слову. Узлы ищут у себя соответствующие запросу ресурсы и, если не находят их, пересылают запрос активным узлам вверх по «дереву» (топология сети имеет структуру графа типа “дерево”), пока не найдется ресурс или не будет превышено максимальное число шагов. Такой поиск называется размножением запросов (query flooding).
Понятно, что подобная реализация ведёт к экспоненциальному росту числа запросов и соответственно на верхних уровнях “дерева” может привести к отказу в обслуживании, что и наблюдалось неоднократно на практике. Разработчики усовершенствовали алгоритм, ввели правила, в соответствии с которыми запросы могут пересылать вверх по “дереву” только определенные узлы — так называемые выделенные (ultrapeers), остальные узлы (leaves) могут лишь запрашивать последние. Введена также система кеширующих узлов.
В таком виде сеть функционирует и сейчас, хотя недостатки алгоритма и слабые возможности расширяемости ведут к уменьшению её популярности.
Поиск в Gnutella построен на децентрализованной технологии gPulp.
Клиенты.
На данный момент Gnutella является одной из наиболее популярных файлообменных сетей. Работа сети Gnutella непрерывно совершенствуется благодаря усилиям разработчиков множества клиентов сети:
Реакция со стороны FSF.
Название Gnutella первоначально было игрой слов GNU, так как разработчики планировали выпустить исходный код под лицензией GNU GPL, и Nutella — марки любимой ореховой пасты этих разработчиков. Однако, ни самая первая программа, ни соответствующие современные проекты не являются свободным ПО, включая использующие протокол Gnutella gtk-gnutella, mutella и gnucleus. Кроме того, Фонд свободного программного обеспечения сосредоточен на свободе копирования и изменения программного обеспечения, в то время как Gnutella — это, прежде всего, сеть обмена музыкальными файлами. И хотя существует некоторое сходство в вопросах этики копирования программного обеспечения и музыкальных записей, FSF попросила разработчиков Gnutella изменить название программы для избежания путаницы.

</doc>
<doc id="935" url="?curid=935" title="HTTP">
HTTP

HTTP ( — «протокол передачи гипертекста») — протокол прикладного уровня передачи данных (изначально — в виде гипертекстовых документов в формате HTML, в настоящий момент используется для передачи произвольных данных). Основой HTTP является технология «клиент-сервер», то есть предполагается существование потребителей (клиентов), которые инициируют соединение и посылают запрос, и поставщиков (серверов), которые ожидают соединения для получения запроса, производят необходимые действия и возвращают обратно сообщение с результатом.
HTTP в настоящее время повсеместно используется во Всемирной паутине для получения информации с веб-сайтов. В 2006 году в Северной Америке доля HTTP-трафика превысила долю P2P-сетей и составила 46 %, из которых почти половина — это передача потокового видео и звука.
HTTP используется также в качестве «транспорта» для других протоколов прикладного уровня, таких как SOAP, XML-RPC, WebDAV.
Основным объектом манипуляции в HTTP является ресурс, на который указывает URI (Uniform Resource Identifier) в запросе клиента. Обычно такими ресурсами являются хранящиеся на сервере файлы, но ими могут быть логические объекты или что-то абстрактное. Особенностью протокола HTTP является возможность указать в запросе и ответе способ представления одного и того же ресурса по различным параметрам: формату, кодировке, языку и т. д. (В частности для этого используется HTTP-заголовок.) Именно благодаря возможности указания способа кодирования сообщения клиент и сервер могут обмениваться двоичными данными, хотя данный протокол является текстовым.
HTTP — протокол прикладного уровня, аналогичными ему являются FTP и SMTP. Обмен сообщениями идёт по обыкновенной схеме «запрос-ответ». Для идентификации ресурсов HTTP использует глобальные URI. В отличие от многих других протоколов, HTTP не сохраняет своего состояния. Это означает отсутствие сохранения промежуточного состояния между парами «запрос-ответ». Компоненты, использующие HTTP, могут самостоятельно осуществлять сохранение информации о состоянии, связанной с последними запросами и ответами (например, «куки» на стороне клиента, «сессии» на стороне сервера). Браузер, посылающий запросы, может отслеживать задержки ответов. Сервер может хранить IP-адреса и заголовки запросов последних клиентов. Однако сам протокол не осведомлён о предыдущих запросах и ответах, в нём не предусмотрена внутренняя поддержка состояния, к нему не предъявляются такие требования.
Программное обеспечение.
Всё программное обеспечение для работы с протоколом HTTP разделяется на три большие категории:
Для отличия конечных серверов от прокси в официальной документации используется термин «исходный сервер» (). Один и тот же программный продукт может одновременно выполнять функции клиента, сервера или посредника в зависимости от поставленных задач. В спецификациях протокола HTTP подробно описывается поведение для каждой из этих ролей.
Клиенты.
Первоначально протокол HTTP разрабатывался для доступа к гипертекстовым документам Всемирной паутины. Поэтому основными реализациями клиентов являются браузеры (агенты пользователя). Для просмотра сохранённого содержимого сайтов на компьютере без соединения с Интернетом были придуманы офлайн-браузеры. При нестабильном соединении для загрузки больших файлов используются менеджеры закачек. Они позволяют в любое время докачать указанные файлы после потери соединения с веб-сервером. Виртуальные атласы, такие как Google Планета Земля и NASA World Wind, тоже используют HTTP.
Нередко протокол HTTP используется программами для скачивания обновлений.
Целый комплекс программ-роботов используется в поисковых системах Интернета. Среди них веб-пауки (краулеры), которые производят проход по гиперссылкам, составляют базу данных ресурсов серверов и сохраняют их содержимое для дальнейшего анализа.
Исходные серверы.
Основные реализации: Apache, Internet Information Services (IIS), nginx, Google Web Server, lighttpd.
Прокси-серверы.
Основные реализации: Squid, UserGate, Multiproxy, Naviscope, nginx.
Структура протокола.
Каждое HTTP-сообщение состоит из трёх частей, которые передаются в указанном порядке:
Заголовки и тело сообщения могут отсутствовать, но стартовая строка является обязательным элементом, так как указывает на тип запроса/ответа. Исключением является версия 0.9 протокола, у которой сообщение запроса содержит только стартовую строку, а сообщения ответа только тело сообщения.
Для версии протокола 1.1 сообщение запроса обязательно должно содержать заголовок "Host".
Стартовая строка.
Стартовые строки различаются для запроса и ответа. Строка запроса выглядит так:
Здесь:
Чтобы запросить страницу данной статьи, клиент должен передать строку (задан всего один заголовок):
Стартовая строка ответа сервера имеет следующий формат: HTTP/Версия КодСостояния Пояснение, где:
Например, стартовая строка ответа сервера на предыдущий запрос может выглядеть так:
Методы.
Метод HTTP () — последовательность из любых символов, кроме управляющих и разделителей, указывающая на основную операцию над ресурсом. Обычно метод представляет собой короткое английское слово, записанное заглавными буквами. Обратите внимание, что название метода чувствительно к регистру.
Каждый сервер обязан поддерживать как минимум методы GET и HEAD. Если сервер не распознал указанный клиентом метод, то он должен вернуть статус 501 (Not Implemented). Если серверу метод известен, но он неприменим к конкретному ресурсу, то возвращается сообщение с кодом 405 (Method Not Allowed). В обоих случаях серверу следует включить в сообщение ответа заголовок Allow со списком поддерживаемых методов.
Кроме методов GET и HEAD, часто применяется метод POST.
OPTIONS.
Используется для определения возможностей веб-сервера или параметров соединения для конкретного ресурса. В ответ серверу следует включить заголовок Allow со списком поддерживаемых методов. Также в заголовке ответа может включаться информация о поддерживаемых расширениях.
Предполагается, что запрос клиента может содержать тело сообщения для указания интересующих его сведений. Формат тела и порядок работы с ним в настоящий момент не определён. Сервер пока должен его игнорировать. Аналогичная ситуация и с телом в ответе сервера.
Для того, чтобы узнать возможности всего сервера, клиент должен указать в URI звёздочку — «*». Запросы «OPTIONS * HTTP/1.1» могут также применяться для проверки работоспособности сервера (аналогично «пингованию») и тестирования на предмет поддержки сервером протокола HTTP версии 1.1.
Результат выполнения этого метода не кэшируется.
GET.
Используется для запроса содержимого указанного ресурса. С помощью метода GET можно также начать какой-либо процесс. В этом случае в тело ответного сообщения следует включить информацию о ходе выполнения процесса.
Клиент может передавать параметры выполнения запроса в URI целевого ресурса после символа «?»:codice_1
Согласно стандарту HTTP, запросы типа GET считаются идемпотентными
Кроме обычного метода GET, различают ещё условный GET и частичный GET. Условные запросы GET содержат заголовки If-Modified-Since, If-Match, If-Range и подобные. Частичные GET содержат в запросе Range. Порядок выполнения подобных запросов определён стандартами отдельно.
HEAD.
Аналогичен методу GET, за исключением того, что в ответе сервера отсутствует тело. Запрос HEAD обычно применяется для извлечения метаданных, проверки наличия ресурса (валидация URL) и чтобы узнать, не изменился ли он с момента последнего обращения.
Заголовки ответа могут кэшироваться. При несовпадении метаданных ресурса с соответствующей информацией в кэше копия ресурса помечается как устаревшая.
POST.
Применяется для передачи пользовательских данных заданному ресурсу. Например, в блогах посетители обычно могут вводить свои комментарии к записям в HTML-форму, после чего они передаются серверу методом POST и он помещает их на страницу. При этом передаваемые данные (в примере с блогами — текст комментария) включаются в тело запроса. Аналогично с помощью метода POST обычно загружаются файлы на сервер.
В отличие от метода GET, метод POST не считается идемпотентным, то есть многократное повторение одних и тех же запросов POST может возвращать разные результаты (например, после каждой отправки комментария будет появляться очередная копия этого комментария).
При результате выполнения 200 (Ok) в тело ответа следует включить сообщение об итоге выполнения запроса. Если был создан ресурс, то серверу следует вернуть ответ 201 (Created) с указанием URI нового ресурса в заголовке Location.
Сообщение ответа сервера на выполнение метода POST не кэшируется.
PUT.
Применяется для загрузки содержимого запроса на указанный в запросе URI. Если по заданному URI не существует ресурс, то сервер создаёт его и возвращает статус 201 (Created). Если же был изменён ресурс, то сервер возвращает 200 (Ok) или 204 (No Content). Сервер не должен игнорировать некорректные заголовки Content-*, передаваемые клиентом вместе с сообщением. Если какой-то из этих заголовков не может быть распознан или не допустим при текущих условиях, то необходимо вернуть код ошибки 501 (Not Implemented).
Фундаментальное различие методов POST и PUT заключается в понимании предназначений URI ресурсов. Метод POST предполагает, что по указанному URI будет производиться обработка передаваемого клиентом содержимого. Используя PUT, клиент предполагает, что загружаемое содержимое соответствует находящемуся по данному URI ресурсу.
Сообщения ответов сервера на метод PUT не кэшируются.
PATCH.
Аналогично PUT, но применяется только к фрагменту ресурса.
DELETE.
Удаляет указанный ресурс.
TRACE.
Возвращает полученный запрос так, что клиент может увидеть, какую информацию промежуточные серверы добавляют или изменяют в запросе.
CONNECT.
Преобразует соединение запроса в прозрачный TCP/IP-туннель, обычно чтобы содействовать установлению защищённого SSL-соединения через нешифрованный прокси.
Коды состояния.
Код состояния является частью первой строки ответа сервера. Он представляет собой целое число из трёх цифр. Первая цифра указывает на класс состояния. За кодом ответа обычно следует отделённая пробелом поясняющая фраза на английском языке, которая разъясняет человеку причину именно такого ответа. Примеры:
Клиент узнаёт по коду ответа о результатах его запроса и определяет, какие действия ему предпринимать дальше. Набор кодов состояния является стандартом, и они описаны в соответствующих документах RFC. Введение новых кодов должно производиться только после согласования с IETF. Клиент может не знать все коды состояния, но он обязан отреагировать в соответствии с классом кода.
В настоящее время выделено пять классов кодов состояния.
В этот класс выделены коды, информирующие о процессе передачи. В HTTP/1.0 сообщения с такими кодами должны игнорироваться. В HTTP/1.1 клиент должен быть готов принять этот класс сообщений как обычный ответ, но ничего отправлять серверу не нужно. Сами сообщения от сервера содержат только стартовую строку ответа и, если требуется, несколько специфичных для ответа полей заголовка. Прокси-серверы подобные сообщения должны отправлять дальше от сервера к клиенту.
Сообщения данного класса информируют о случаях успешного принятия и обработки запроса клиента. В зависимости от статуса сервер может ещё передать заголовки и тело сообщения.
Коды класса 3xx сообщают клиенту что для успешного выполнения операции необходимо сделать другой запрос (как правило по другому URI). Из данного класса пять кодов 301, 302, 303, 305 и 307 относятся непосредственно к перенаправлениям (редирект). Адрес, по которому клиенту следует произвести запрос, сервер указывает в заголовке Location. При этом допускается использование фрагментов в целевом URI.
Класс кодов 4xx предназначен для указания ошибок со стороны клиента. При использовании всех методов, кроме HEAD, сервер должен вернуть в теле сообщения гипертекстовое пояснение для пользователя.
Коды 5xx выделены под случаи неудачного выполнения операции по вине сервера. Для всех ситуаций, кроме использования метода HEAD, сервер должен включать в тело сообщения объяснение, которое клиент отобразит пользователю.
Заголовки.
Заголовки HTTP () — это строки в HTTP-сообщении, содержащие разделённую двоеточием пару параметр-значение. Формат заголовков соответствует общему формату заголовков текстовых сетевых сообщений ARPA (см. RFC 822). Заголовки должны отделяться от тела сообщения хотя бы одной пустой строкой.
Примеры заголовков:
В примере выше каждая строка представляет собой один заголовок. При этом то, что находится до первого двоеточия, называется именем (), а что после неё — значением ().
Все заголовки разделяются на четыре основных группы:
Именно в таком порядке рекомендуется посылать заголовки получателю.
Все необходимые для функционирования HTTP заголовки описаны в основных RFC. Если не хватает существующих, то можно вводить свои. Традиционно к именам таких дополнительных заголовков добавляют префикс «X-» для избежания конфликта имён с возможно существующими. Например, как в заголовках X-Powered-By или X-Cache. Некоторые разработчики используют свои индивидуальные префиксы. Примерами таких заголовков могут служить Ms-Echo-Request и Ms-Echo-Reply, введённые корпорацией Microsoft для расширения WebDAV.
Тело сообщения.
Тело HTTP сообщения (message-body), если оно присутствует, используется для передачи тела объекта, связанного с запросом или ответом. Тело сообщения (message-body) отличается от тела объекта (entity-body) только в том случае, когда применяется кодирование передачи, что указывается полем заголовка Transfer-Encoding.
Поле Transfer-Encoding должно использоваться для указания любого кодирования передачи, примененного приложением в целях гарантирования безопасной и правильной передачи сообщения. Поле Transfer-Encoding — это свойство сообщения, а не объекта, и, таким образом, может быть добавлено или удалено любым приложением в цепочке запросов/ответов.
Правила, устанавливающие допустимость тела сообщения в сообщении, отличны для запросов и ответов.
Присутствие тела сообщения в запросе отмечается добавлением к заголовкам запроса поля заголовка Content-Length или Transfer-Encoding. Тело сообщения (message-body) МОЖЕТ быть добавлено в запрос только когда метод запроса допускает тело объекта (entity-body).
Включается или не включается тело сообщения (message-body) в сообщение ответа зависит как от метода запроса, так и от кода состояния ответа. Все ответы на запрос с методом HEAD не должны включать тело сообщения (message-body), даже если присутствуют поля заголовка объекта (entity-header), заставляющие поверить в присутствие объекта. Никакие ответы с кодами состояния 1xx (Информационные), 204 (Нет содержимого, No Content), и 304 (Не модифицирован, Not Modified) не должны содержать тела сообщения (message-body). Все другие ответы содержат тело сообщения, даже если оно имеет нулевую длину.
Примеры диалогов HTTP.
Обычный GET-запрос.
Запрос клиента:
Ответ сервера:
Аналогично выглядит ответ 203. Что существенно, непосредственно запрашиваемые данные отделены от HTTP-заголовков с помощью CRLF CRLF (двух переводов строки).
Перенаправления.
Предположим, что у вымышленной компании Example Corp. есть основной сайт по адресу http://example.com и домен-псевдоним example.org. Клиент посылает запрос страницы «О компании» на вторичный домен (часть заголовков опущена):
Так как домен example.org не является основным и компания не собирается в будущем его использовать в других целях, их сервер вернёт код для постоянного перенаправления, указав в заголовке Location целевой URL:
В заголовке Location можно указывать фрагменты как в данном примере. Браузер не указал фрагмент в запросе, так как его интересует весь документ. Но он автоматически прокрутит страницу до фрагмента «contacts», как только загрузит её. В тело ответа также был помещён короткий HTML-документ со ссылкой, с помощью которой посетитель попадёт на целевую страницу, если браузер не перейдёт на неё автоматически. Заголовок Content-Type содержит характеристики именно этого HTML-пояснения, а не документа, который находится по целевому URI.
Допустим, эта же компания Example Corp. имеет несколько региональных представительств по всему миру. И для каждого представительства у них есть сайт с соответствующим ccTLD. Запрос главной страницы основного сайта example.com может выглядеть так:
Сервер принял во внимание заголовок Accept-Language и сформировал ответ с временным перенаправлением на российский сервер example.ru, указав его адрес в заголовке Location:
Обратите внимание на заголовок Cache-Control. Значение «private» сообщает остальным серверам (в первую очередь прокси) что ответ может кэшироваться только на стороне клиента. В противном случае не исключено, что следующие посетители из других стран будут переходить всё время не в своё представительство.
Для перенаправления также используются коды ответа 303 (See Other) и 307 (Temporary Redirect).
Докачка и фрагментарное скачивание.
Допустим, вымышленная организация предлагает скачать с сайта видео прошедшей конференции по адресу http://example.org/conf-2009.avi объёмом примерно 160 МБ. Рассмотрим, как происходит докачивание этого файла в случае сбоя и как менеджер закачек организовал бы многопоточную загрузку нескольких фрагментов.
В обоих случаях клиенты произведут свой первый запрос наподобие этого:
Заголовок Referer указывает, что файл был запрошен с главной страницы сайта. Менеджеры закачек обычно тоже его указывают, чтобы эмулировать переход со страницы сайта. Без него сервер может ответить 403 (Access Forbidden), если не допускаются запросы с других сайтов. В нашем случае сервер вернул успешный ответ:
Заголовок Accept-Ranges информирует клиента о том, что он может запрашивать у сервера фрагменты, указывая их смещения от начала файла в байтах. Если этот заголовок отсутствует, то клиент может предупредить пользователя, что докачать файл, скорее всего, не удастся.
Исходя из значения заголовка Content-Length, менеджер закачек поделит весь объём на равные фрагменты и запросит их по отдельности, организовав несколько потоков. Если сервер не укажет размер, то клиенту параллельное скачивание реализовать не удастся, но при этом он сможет докачивать файл, пока сервер не ответит 416 (Requested Range Not Satisfiable).
Допустим, на 84-м мегабайте соединение с Интернетом прервалось и процесс загрузки приостановился. Когда соединение с Интернетом было восстановлено, менеджер закачек автоматически послал новый запрос на сервер, но с указанием выдать содержимое с 84-го мегабайта:
Сервер не обязан помнить, какие и от кого запросы были до этого, и поэтому клиент снова вставил заголовок Referer, как будто это его самый первый запрос. Указанное значение заголовка Range говорит серверу — «выдай содержимое от 88080384-го байта до самого конца». В связи с этим сервер вернёт ответ:
Заголовок Accept-Ranges здесь уже не обязателен, так как клиент уже знает об этой возможности сервера. О том, что передаётся фрагмент, клиент узнаёт по коду 206 (Partial Content). В заголовке Content-Range содержится информация о данном фрагменте: номера начального и конечного байта, а после слэша — суммарный объём всего файла в байтах. Обратите внимание на заголовок Content-Length — в нём указывается размер тела сообщения, то есть передаваемого фрагмента. Если сервер вернёт несколько фрагментов, то Content-Length будет содержать их суммарный объём.
Теперь вернёмся к менеджеру закачек. Зная суммарный объём файла «conf-2009.avi», программа поделила его на 10 равных секций.
Начальную менеджер загрузит при самом первом запросе, прервав соединение как только дойдёт до начала второго. Остальные он запросит отдельно. Например, 4-я секция будет запрошена со следующими заголовками (часть заголовков опущена — см. полный пример выше):
Ответ сервера в этом случае будет следующим (часть заголовков опущена — см. полный пример выше):
Если подобный запрос отправить серверу, который не поддерживает фрагменты, то он вернёт стандартный ответ 200 (OK) как было показано в самом начале, но без заголовка Accept-Ranges.
Основные механизмы протокола.
Частичные GET.
HTTP позволяет запросить не сразу всё содержимое ресурса, а только указанный фрагмент. Такие запросы называются частичные GET, возможность их выполнения необязательна (но желательна) для серверов. Частичные GET в основном используются для докачки файлов и быстрого параллельного скачивания в нескольких потоках. Некоторые программы скачивают заголовок архива, выводят пользователю внутреннюю структуру, а потом уже запрашивают фрагменты с указанными элементами архива.
Для получения фрагмента клиент посылает серверу запрос с заголовком Range, указывая в нём необходимые байтовые диапазоны. Если сервер не понимает частичные запросы (игнорирует заголовок Range), то он вернёт всё содержимое со статусом 200, как и при обычном GET. В случае успешного выполнения сервер возвращает вместо кода 200 ответ со статусом 206 (Partial Content), включая в ответ заголовок Content-Range. Сами фрагменты могут быть переданы двумя способами:
Условные GET.
Метод GET изменяется на «условный GET», если сообщение запроса включает в себя поле заголовка «If-Modified-Since». В ответ на условный GET, тело запрашиваемого ресурса передается только, если он изменялся после даты, указанной в заголовке «If-Modified-Since». Алгоритм определения этого включает в себя следующие случаи:
Использование метода условный GET направлено на разгрузку сети, так как он позволяет не передавать по сети избыточную информацию.
Согласование содержимого.
Согласование содержимого () — механизм автоматического определения необходимого ресурса при наличии нескольких разнотипных версий документа. Субъектами согласования могут быть не только ресурсы сервера, но и возвращаемые страницы с сообщениями об ошибках (403, 404 и т. п.).
Различают два основных типа согласований:
Одновременно могут быть использованы оба типа или каждый из них по отдельности.
В основной спецификации по протоколу (RFC 2616) также выделяется так называемое прозрачное согласование () как предпочтительный вариант комбинирования обоих типов. Последний механизм не следует путать с независимой технологией Transparent Content Negotiation (TCN, «Прозрачное согласование содержимого», см. RFC 2295), которая не является частью протокола HTTP, но может использоваться с ним. У обоих существенное различие в принципе работы и самом значении слова «прозрачное» (transparent). В спецификации по HTTP под прозрачностью подразумевается, что процесс не заметен для клиента и сервера, а в технологии TCN прозрачность означает доступность полного списка вариантов ресурса для всех участников процесса доставки данных.
Управляемое сервером.
При наличии нескольких версий ресурса сервер может анализировать заголовки запроса клиента, чтобы выдать, по его мнению, наиболее подходящую. В основном анализируются заголовки Accept, Accept-Charset, Accept-Encoding, Accept-Languages и User-Agent. Серверу желательно включать в ответ заголовок Vary с указанием параметров, по которым различается содержимое по запрашиваемому URI.
Географическое положение клиента можно определить по удалённому IP-адресу. Это возможно за счёт того что IP-адреса, как и доменные имена, регистрируются на конкретного человека или организацию. При регистрации указывается регион, в котором будет использоваться желаемое адресное пространство. Эти данные общедоступны, и в Интернете можно найти соответствующие свободно распространяемые базы данных и готовые программные модули для работы с ними (следует ориентироваться на ключевые слова «Geo IP»).
Следует помнить что такой метод способен определить местоположение максимум с точностью до города (отсюда определяется и страна).
При этом информация актуальна только на момент регистрации адресного пространства. Например, если московский провайдер зарегистрирует диапазон адресов с указанием Москвы и начнёт предоставлять доступ клиентам из ближайшего Подмосковья, то его абоненты могут на некоторых сайтах наблюдать, что они из Москвы, а не из Красногорска или Дзержинского.
Управляемое сервером согласование имеет несколько недостатков:
Управляемое клиентом.
В данном случае тип содержимого определяется только на стороне клиента.
Для этого сервер возвращает ответ с кодом состояния 300 (Multiple Choices) или 406 (Not Acceptable) список вариантов, среди которых пользователь выбирает подходящий.
Управляемое клиентом согласование хорошо, когда содержимое различается по самым частым параметрам (например, по языку и кодировке) и используется публичный кэш.
Основной недостаток — лишняя нагрузка, так как приходится делать дополнительный запрос, чтобы получить нужное содержимое.
Прозрачное согласование.
Данное согласование полностью прозрачно для клиента и сервера. В данном случае используется общий кэш, в котором содержится список вариантов, как для управляемого клиентом согласования. Если кэш понимает все эти варианты, то он сам делает выбор, как при управляемом сервером согласовании. Это снижает нагрузки с исходного сервера и исключает дополнительный запрос со стороны клиента.
В основной спецификации по протоколу HTTP механизм прозрачного согласования подробно не описан.
Множественное содержимое.
Протокол HTTP поддерживает передачу нескольких сущностей в пределах одного сообщения. Причём сущности могут передаваться не только в виде одноуровневой последовательности, но в виде иерархии с вложением элементов друг в друга. Для обозначения множественного содержимого используются медиатипы multipart/*. Работа с такими типами осуществляется по общим правилам, описанным в RFC 2046 (если иное не определено конкретным медиатипом). Если получателю не известно как работать с типом, то он обрабатывает его так же, как multipart/mixed.
Параметр boundary означает разделитель между различными типами передаваемых сообщений. Например передаваемый из формы параметр DestAddress передает значение адреса e-mail, а следующий за ним элемент AttachedFile1 отправляет двоичное содержимое изображения формата .jpg
Со стороны сервера сообщения со множественным содержимым могут посылаться в ответ на частичные GET при запросе нескольких фрагментов ресурса. В этом случае используется медиатип multipart/byteranges.
Со стороны клиента при отправке HTML-формы чаще всего пользуются методом POST. Типичный пример: страницы отправки электронных писем со вложенными файлами. При отправке такого письма браузер формирует сообщение типа multipart/form-data, интегрируя в него как отдельные части, введённые пользователем, тему письма, адрес получателя, сам текст и вложенные файлы:
В примере в заголовках Content-Disposition параметр name соответствует атрибуту name в HTML-тегах &lt;INPUT&gt; и &lt;TEXTAREA&gt;. Параметр filename равен исходному имени файла на компьютере пользователя. Более подробная информация о формировании HTML-форм и вложении файлов в RFC 1867.
Особенности протокола.
Большинство протоколов предусматривают установление TCP-сессии, в ходе которой один раз происходит авторизация, и дальнейшие действия выполняются в контексте этой авторизации. HTTP же устанавливает отдельную TCP-сессию на каждый запрос; в более поздних версиях HTTP было разрешено делать несколько запросов в ходе одной TCP-сессии, но браузеры обычно запрашивают только страницу и включённые в неё объекты (картинки, каскадные стили и т. п.), а затем сразу разрывают TCP-сессию. Для поддержки авторизованного (неанонимного) доступа в HTTP используются cookies; причём такой способ авторизации позволяет сохранить сессию даже после перезагрузки клиента и сервера.
При доступе к данным по FTP или по файловым протоколам тип файла (точнее, тип содержащихся в нём данных) определяется по расширению имени файла, что не всегда удобно. HTTP перед тем, как передать сами данные, передаёт заголовок «Content-Type: тип/подтип», позволяющую клиенту однозначно определить, каким образом обрабатывать присланные данные. Это особенно важно при работе с CGI-скриптами, когда расширение имени файла указывает не на тип присылаемых клиенту данных, а на необходимость запуска данного файла на сервере и отправки клиенту результатов работы программы, записанной в этом файле (при этом один и тот же файл в зависимости от аргументов запроса и своих собственных соображений может порождать ответы разных типов — в простейшем случае картинки в разных форматах).
Кроме того, HTTP позволяет клиенту прислать на сервер параметры, которые будут переданы запускаемому CGI-скрипту. Для этого же в HTML были введены формы.
Перечисленные особенности HTTP позволили создавать поисковые машины (первой из которых стала AltaVista, созданная фирмой DEC), форумы и Internet-магазины. Это коммерциализировало Интернет, появились компании, основным полем деятельности которых стало предоставление доступа в Интернет (провайдеры) и создание сайтов.

</doc>
<doc id="937" url="?curid=937" title="OSCAR">
OSCAR

OSCAR ( — открытая система для общения в реальном времени) — открытый (с 5 марта 2008 года), но не свободный сетевой протокол, обеспечивающий обмен мгновенными и офлайновыми текстовыми сообщениями. В данный момент используется для двух систем: AIM (компания AOL, управляемая Time Warner) и ICQ (компания Mail.Ru Group).
В программах-клиентах сторонних разработчиков некоторые состояния могут отсутствовать или иметь место дополнительные.
Реализации протокола.
Существует большое количество альтернативных клиентов ICQ для разных операционных систем, например: Miranda IM (Windows), QIP 2012 (Windows), &amp;RQ (Windows), Pidgin (Windows, GNU/Linux), Licq (GNU/Linux), Kopete (GNU/Linux), qutIM (Windows, GNU/Linux, Mac OS X), Adium (Mac OS X) и пр.
5 марта 2008 года AOL открыла спецификации протокола (как впоследствии оказалось — не полностью: с помощью изменения закрытых деталей спецификации впоследствии 3 раза блокировались все неофициальные клиенты) и разрешила создание альтернативных клиентов, но с некоторыми ограничениями, установленными лицензией — например, клиент, используемый более чем 100 000 пользователями, должен показывать рекламу.

</doc>
<doc id="939" url="?curid=939" title="IMAP">
IMAP

IMAP () — протокол прикладного уровня для доступа к электронной почте.
Базируется на транспортном протоколе TCP и использует порт 143.
IMAP предоставляет пользователю обширные возможности для работы с почтовыми ящиками, находящимися на центральном сервере. Почтовая программа, использующая этот протокол, получает доступ к хранилищу корреспонденции на сервере так, как будто эта корреспонденция расположена на компьютере получателя. Электронными письмами можно манипулировать с компьютера пользователя (клиента) без постоянной пересылки с сервера и обратно файлов с полным содержанием писем.
Для отправки писем используется обычно протокол SMTP, так как собственная команда отправки протокола IMAP, называемая APPEND, считается «неудачной» и «небезопасной».
Цель разработки протокола IMAP.
Протокол IMAP представляет собой, в основном, альтернативу POP3 с зачаточными способностями по отправке.
POP3 имеет ряд недостатков, и наиболее серьёзный из них — отсутствие возможностей по управлению перемещением и хранением сообщений на сервере. Сообщения, как правило, загружаются с почтового сервера все сразу, после чего они с сервера удаляются, то есть отсутствует возможность выбирать сообщения для получения.
Для решения проблем, связанных с этой особенностью POP3, в Вашингтонском университете был разработан новый протокол, предполагающий возможность получения пользователями электронной почты из одного почтового ящика из различных мест, при этом сообщения не распределяются между точками получения. Пользователю предоставляется возможность управлять сообщениями в его почтовом ящике и дополнительными функциями по обслуживанию почтовых ящиков на сервере.
Преимущества по сравнению с POP3.
При использовании POP3 клиент подключается к серверу только на промежуток времени, необходимый для загрузки новых сообщений. При использовании IMAP соединение не разрывается, пока пользовательский интерфейс активен, а сообщения загружаются только по требованию клиента. Это позволяет уменьшить время отклика для пользователей, в чьих ящиках имеется много сообщений большого объёма.
Протокол POP требует, чтобы текущий клиент был единственным подключенным к ящику. IMAP позволяет одновременный доступ нескольких клиентов к ящику и предоставляет клиенту возможность отслеживать изменения, вносимые другими клиентами, подключенными одновременно с ним.
Благодаря системе флагов, определенной в IMAP4, клиент может отслеживать состояние сообщения (прочитано, отправлен ответ, удалено и т. д.); данные о флагах хранятся на сервере.
Клиенты IMAP4 могут создавать, переименовывать и удалять ящики и перемещать сообщения между ящиками. Кроме того, можно использовать расширение IMAP4 Access Control List (ACL) Extension (RFC 4314) для управления правами доступа к ящикам.
Поиск сообщений происходит на стороне сервера.
IMAP4 имеет явный механизм расширения.
Сообщения и их атрибуты.
IMAP работает только с сообщениями и не требует каких-либо пакетов со специальными заголовками.
Каждое сообщение имеет несколько связанных с ним атрибутов. Эти атрибуты могут быть определены индивидуально или совместно с другими атрибутами.
UID.
Каждому сообщению ставится в соответствие 32-битный код, который при использовании совместно с уникальным идентификатором образует 64-битовую последовательность, гарантирующую однозначную идентификацию сообщения в почтовом ящике. Чем позже сообщение пришло, тем больше его UID.
UID ассоциируется с почтовым ящиком и посылается в виде кода uidvalidity отклика (ok) на фазе выбора почтового ящика. Если UID из предыдущей сессии по какой-то причине не может быть использован, UID должен быть инкрементирован.
UID сообщения не должно изменяться в пределах сессии, его не следует изменять и от сессии к сессии. Однако если невозможно сохранить UID сообщения в последующей сессии, каждая следующая сессия должна иметь новый уникальный код идентификатора, который должен быть больше, чем любой UID, использованный ранее.
Порядковый номер сообщения.
Порядковый номер сообщения в почтовом ящике начинается с 1. Каждое сообщение, начиная со второго, имеет порядковый номер ровно на 1 больше, чем предшествующее ему.
В течение сессии допустимо изменение порядкового номера сообщения. Например, когда сообщение удаляется из почтового ящика, номера всех последующих сообщений изменяются.
Флаги сообщения.
Этот атрибут представляет собой список из нуля или более именованных лексем, соотнесённых с данным сообщением. Флаг устанавливается путём его добавления к этому списку и обнуляется путём его удаления. В IMAP 4.1 существует два типа флагов. Флаг может быть постоянным или действующим только на время данной сессии.
Системным флагом является флаг, имя которого определено в спецификации протокола. Все системные флаги начинаются с символа codice_1.
В настоящее время определены следующие системные флаги:
Внутренние дата и время сообщения на сервере.
Время и дата получения сообщения. В случае доставки сообщения посредством протокола SMTP — дата и время доставки конечному адресату. Для сообщений, доставленных командой копирования — внутренняя дата и время отправителя сообщения. При использовании команды codice_8 — дата и время, заданные параметрами команды.
Взаимодействие клиента и сервера.
Соединение IMAP 4.1 подразумевает установление связи между клиентом и сервером. Клиент посылает серверу команды, сервер клиенту — данные и уведомления о статусе выполнения запроса. Все сообщения, как клиента, так и сервера имеют форму строк, завершающихся специальной последовательностью.
Любая процедура начинается с команды клиента. Любая команда клиента начинается с префикса-идентификатора (обычно короткая буквенно-цифровая строка, например, codice_9, codice_10 и т. д.), называемого меткой (tag). Для каждой команды клиент генерирует свою метку.
Возможны два случая, когда строка, отправленная клиентом, не представляет собой законченную команду. В первом — аргумент команды снабжается кодом, определяющим число октетов в строке. Во втором — аргументы команды требуют отклика со стороны сервера. В обоих случаях сервер посылает запрос продолжения команды, начинающийся с символа codice_11.
Клиент должен завершить отправку одной команды, прежде чем отправить другую.
Протокольный приемник сервера читает строку команды, пришедшей от клиента, осуществляет её разбор, выделяет параметры и передает серверу данные. По завершении команды сервер посылает отклик.
Данные, передаваемые сервером клиенту, а также статусные отклики, которые не указывают на завершение выполнения команды, имеют префикс codice_12 и называются непомеченными откликами.
Данные могут быть отправлены сервером в ответ на команду клиента или по собственной инициативе. Формат данных не зависит от причины отправки.
Отклик указывает на удачное/неудачное выполнение операции. Он использует ту же метку, что и команда клиента, запустившая процедуру. Таким образом, если осуществляется более чем одна команда, метка сервера указывает на команду, вызвавшую данный отклик. Имеется три вида отклика завершения сервера: codice_13 (успешное выполнение), codice_14 (неудача), codice_15 (протокольная ошибка, например, не узнана команда или зафиксирована синтаксическая ошибка).
Протокольный приемник клиента IMAP 4.1 читает строку отклика от сервера и предпринимает действия в соответствии с первым символом codice_12 или codice_11.
Клиент должен быть готов принять любой отклик сервера в любое время. Данные сервера должны быть записаны так, чтобы клиент мог их непосредственно использовать, не посылая серверу уточняющих запросов.
Состояния сервера IMAP.
Сервер IMAP 4.1 находится в одном из четырёх состояний.
Большинство команд можно использовать только в определенных состояниях.
В состоянии "без аутентификации" клиент должен предоставить имя и пароль, прежде чем ему станет доступно большинство команд. Переход в это состояние производится при установлении соединения без предварительной аутентификации.
В состоянии "аутентификации" клиент идентифицирован и должен выбрать почтовый ящик, после чего ему станут доступны команды для работы с сообщениями. Переход в это состояние происходит при установлении соединение с предварительной аутентификацией, когда выданы все необходимые идентификационные данные или при ошибочном выборе почтового ящика.
В состояние "выбора" система попадает, когда успешно осуществлен выбор почтового ящика.
В состояние "выхода" система попадает при прерывании соединения в результате запроса клиента или вследствие независимого решения сервера.

</doc>
<doc id="941" url="?curid=941" title="IRC">
IRC

IRC () — протокол прикладного уровня для обмена сообщениями в режиме реального времени.
Разработан в основном для группового общения, также позволяет общаться через личные сообщения и обмениваться данными, в том числе файлами.
IRC использует транспортный протокол TCP и криптографический TLS (опционально).
IRC начало завоевывать особенную популярность после операции «Буря в пустыне» (1991), когда сообщения со всего мира собирались в одном месте и в режиме «on-line» транслировались в IRC.
Ввиду технической простоты реализации протокол IRC в последнее время стал использоваться при организации ботнетов в качестве средства передачи управляющих команд компьютерам-участникам ботнета от владельца.
История и спецификации.
IRC был разработан в 1988 в качестве замены программы MultiUser Talk.
Основная спецификация — RFC 1459 (1993).
Её дополняют несколько спецификаций 2000 года:
IRC-сеть.
Согласно спецификациям протокола, IRC-сеть — это группа серверов, соединённых между собой. Простейшей сетью является одиночный сервер.
Сеть должна иметь вид связного дерева, в котором каждый сервер является центральным узлом для остальной части сети.
Клиентом называется всё, что подключено к серверу, кроме других серверов. Различают два типа клиентов:
Пересылка сообщений в IRC-сети.
IRC предоставляет возможность как группового, так и приватного общения.
Для группового общения существует несколько возможностей.
Пользователь может отправить сообщение списку пользователей, при этом серверу отправляется список, сервер выделяет из него отдельных пользователей и отправляет копию сообщения каждому из них.
Более эффективным является использование каналов. В этом случае сообщение отправляется непосредственно серверу, а сервер отправляет его всем пользователям в канале.
Как при групповом, так и при приватном общении сообщения отправляются клиентам по кратчайшему пути и видимы только отправителю, получателю и входящим в кратчайший путь серверам.
Кроме того, возможна отправка широковещательного сообщения. Сообщения клиентов, касающиеся изменения состояния сети (например, режима канала или статуса пользователя), должны отправляться всем серверам, входящим в сеть. Все сообщения, исходящие от сервера, также должны быть отправлены всем остальным серверам.
Роли пользователей.
По отношению к серверу IRC пользователи могут быть IRC-операторами сервера (), канала () и обычными пользователями.
Клиентские приложения для IRC-сетей.
Наиболее популярные приложения для различных ОС:
Windows:
Unix и Linux:
Mac OS X:
AmigaOS:
Android:
MIDP:
Специфика русскоязычного IRC.
Использование русского языка в IRC не опирается ни на какой стандарт.
Однако, имеется ряд обычаев и соглашений, возникших в процессе эволюции различных русскоязычных IRC-сообществ.
История вопроса.
Первые русскоговорящие каналы возникли ещё в 1990-х годах в международных сетях, таких как DALnet и IRCNet. Первоначально, под влиянием UNIX-культуры, было принято кодировать буквы русского алфавита в KOI-8.
Примерно с 1995 года начался приток пользователей Windows, которые зачастую вообще не имели понятия, что такое кодовая страница и не знали различия между кириллицей и Windows-1251.
Данное противоречие вызвало много конфликтов.
Стихийно возникшее в те времена соглашение помещало вопрос о кодировках в ве́дение конкретных каналов.
Это было очень неудобно для пользователей, однако на тот момент иного выхода не было.
Отчасти именно эта проблема стимулировала примерно с 2000 года усиленное формирование отдельных русскоязычных сетей, где вопросы кодировки могли бы решаться централизованно.
Обычаи современных русскоязычных сетей.
Традиционно, в международных IRC-сетях клиенты посылают и принимают сообщения, состоящие из байтов; при этом вопрос об интерпретации не ASCII-байтов оставляется на усмотрение клиентов.
Все сколь-нибудь развитые русскоязычные сети, при всех их различиях, придерживаются иного принципа: клиенты посылают и принимают сообщения, состоящие из "символов".
То есть, если "правильно настроенный" клиент отправляет на канал букву «Ы», то все подключенные к каналу правильно настроенные клиенты будут принимать тоже букву «Ы», независимо от того, как каждый из них предпочитает её кодировать.
На практике это обычно реализуется наличием на сервере нескольких TCP-портов, на каждом из которых используется определённая кодировка. Список этих портов принято помещать в MOTD (приветствие сервера).
Таким образом, вопрос о «правильной настройке» клиента сохраняется, однако для пользователя выбрать порт подключения несравненно проще, нежели заниматься установкой таблиц перекодировок символов, возможность чего, кстати, и не во всяком клиенте предусмотрена.
Иногда (хотя и не обязательно), серверное ПО позволяет переключить кодировку без отсоединения от сервера — хотя по ряду причин такое изменение кодировки работает неаккуратно.
Как правило, каждая сеть использует свою внутреннюю кодировку (чаще всего это Windows-1251 и почти никогда UTF-8; почему — см. ниже), при этом данные, передаваемые или принимаемые клиентами, с кодировками отличными от внутренней, подвергаются перекодировке (немедленной при приёме, проводимой в момент формирования входящего сообщения — при передаче).
Ники.
Исторически использование букв кириллицы в никах было невозможно.
Однако самая большая русскоязычная IRC-сеть RusNet позволяет пользоваться кириллическими никами и регистрировать их.
UTF-8 — за и против.
Сторонники интернационализации обычно считают UTF-8 перспективной кодировкой для всех языков, включая русский.
Следует однако отметить, что одна буква кириллицы в UTF-8 занимает два байта, что создаёт некоторую дополнительную нагрузку на сети и ограничивает максимальную длину одного сообщения.
По стандарту, сообщение IRC не может иметь длину больше 510 байтов, из которых собственно на текст приходится никак не больше 499 (по нереалистично завышенной оценке).
Следовательно, отправить в одном сообщении больше 249 русских букв оказывается невозможно.
Ограничение размера сообщений вызывает ещё одну неприятность: при попытке превысить установленный предел сервер обрезает сообщения.
Если срез пройдёт посередине русской буквы (то есть будет передан первый её байт, но отброшен второй), то получившаяся последовательность байтов перестанет, с точки зрения UTF-8, быть правильной строкой.
Ряд клиентов (например, Xchat или mIRC) отобразят такое сообщение как 8-битное (например, в Latin-1 или Windows-1251), что сделает его полностью нечитаемым и занимающим к тому же много места на экране.
Единственным несомненным преимуществом использования UTF-8 для кодировки русского языка является возможность свободно цитировать тексты на других языках, а также использовать экзотические символы наподобие «→» и «☺».
К тому же, являясь клиентом IRC-сети, в которой UTF-8 принят повсеместно, можно будет общаться сразу на многих языках, не заботясь о техническом представлении букв.
Пока, однако, неизвестны многоязычные сети, явно оговаривающие необходимость использования только UTF-8, использующие UTF-8 в качестве внутренней кодировки, или каким-либо иным образом упорядочивающие кодировку символов клиентами (за исключением IRC-сервера внутри сети I2P).

</doc>
<doc id="943" url="?curid=943" title="8086">
8086

Intel 8086 (также известный как iAPX86) — первый 16-битный микропроцессор компании Intel, разрабатывавшийся с весны 1976 года и выпущенный 8 июня 1978 года. Процессор содержал набор команд, который применяется и в современных процессорах, именно от этого процессора берёт своё начало известная на сегодня архитектура x86.
Основными конкурентами микропроцессора Intel 8086 были Motorola 68000, Zilog Z8000, чипсеты F-11 и J-11 семейства PDP-11, MOS Technology 65C816. В некоторой степени, в области военных разработок, конкурентами являлись процессоры-реализации MIL-STD-1750A.
Аналогами микропроцессора Intel 8086 являлись такие разработки, как NEC V30, который был на 5 % производительнее Intel 8086, но при этом был полностью с ним совместим. Советским аналогом являлся микропроцессор К1810ВМ86, входивший в серию микросхем К1810.
История.
Предшественники.
В 1972 году Intel выпустила 8008, первый 8-битный микропроцессор. Он использовал набор инструкций, разработанный корпорацией Datapoint для программируемых компьютерных терминалов, пригодный и для универсальных процессоров. Этот процессор требовал нескольких дополнительных микросхем для использования в полноценном компьютере, отчасти потому, что использовал маленький корпус всего лишь с 18 выводами, который использовался для микросхем DRAM, производимых Intel, и соответственно не мог иметь отдельную шину адресов.
Двумя годами позже, в 1974 году, был запущен 8080, в новом, 40-выводном DIP-корпусе, первоначально разработанном для микросхем калькуляторов. Он имел отдельную шину адресов и расширенный набор инструкций, кодово- (не бинарно-) совместимый с 8008, дополненный для удобства программирования несколькими 16-битными инструкциями. Процессор Intel 8080 часто называют первым по-настоящему удобным и полезным микропроцессором. В 1977 году он был заменён на Intel 8085, с одним питающим напряжением (+5 В) вместо трёх различных на предшественнике и несколькими другими усовершенствованиями. Наиболее известными соперниками были 8-битные Motorola 6800 (1974), Microchip PIC16X (1975) (здесь наверное имеется в виду процессор General Instrument CP1600), MOS Technology 6502 (1975), Zilog Z80 (1976) и Motorola 6809 (1978).
Разработка.
Проект 8086 был начат в мае 1976 года, и первоначально задумывался как временная замена для амбициозного и задерживающегося проекта iAPX 432 (также известного как 8800). Это была попытка, с одной стороны, противостоять менее запаздывавшим 16- и 32-битными процессорам других производителей (таких как Motorola, Zilog и National Semiconductor), а с другой — борьбы с угрозой от Zilog Z80 (разработанного командой под руководством ушедшего из Интел Федерико Фаджина), который стал очень успешным. Первая версия архитектуры 8086 (система команд, прерывания, работа с памятью и вводом-выводом) была разработана с середины мая до середины августа Стивеном Морзе. Потом команда разработчиков была увеличена до четырёх человек, которые представили два основных проектных документа — «8086 Architectural Specifications» и «8086 Device Specifications». При разработке не использовалось специализированных CAD-программ, а диаграммы были исполнены из текстовых символов. Использовались уже опробованные элементы микроархитектуры и физической реализации, в основном от Intel 8085.
Описание.
Рынок 8-разрядных микропроцессоров в конце 1970-х годов был переполнен, и Intel, оставляя попытки закрепиться на нём, выпускает свой первый 16-битный процессор. Процессор Intel 8086 представляет собой модернизированный процессор Intel 8080, и хотя разработчики не ставили перед собой цель достичь полной совместимости на программном уровне, большинство программ, написанных для Intel 8080, способны выполняться и на Intel 8086 после перекомпиляции. Новый процессор несёт в себе множество изменений, которые позволили значительно (в 10 раз) увеличить производительность по сравнению с предыдущим поколением процессоров компании.
Регистры.
Всего в процессоре Intel 8086 было 14 16-разрядных регистров: 4 регистра общего назначения (AX, BX, CX, DX), 2 индексных регистра (SI, DI), 2 указательных (BP, SP), 4 сегментных регистра (CS, SS, DS, ES), программный счётчик или указатель команды (IP) и регистр флагов (FLAGS, включает в себя 9 флагов). При этом регистры данных (AX, BX, CX, DX) допускали адресацию не только целых регистров, но и их младшей половины (регистры AL, BL, CL, DL) и старшей половины (регистры AH, BH, CH, DH), что позволяло использовать не только новое 16-разрядное ПО, но сохраняло совместимость и со старыми программами (правда, их необходимо было, по крайней мере, перекомпилировать).
Шины.
Размер шины адреса был увеличен с 16 бит до 20 бит, что позволило адресовать 1 Мбайт (2 байт) памяти. Шина данных была 16-разрядной. Однако в микропроцессоре шина данных и шина адреса использовали одни и те же контакты на корпусе. Это привело к тому, что нельзя одновременно подавать на системную шину адреса и данные. Мультиплексирование адресов и данных во времени сокращает число контактов корпуса до 20, но и замедляет скорость передачи данных.
Из-за того что выполнение отдельных команд меньше цикла ввода-вывода, в процессор был введён (впервые) буфер команд на 6 байт, это позволяло выполнять, например, команды сложения параллельно командам ввода-вывода.
Для того чтобы адресовать больший, чем Intel 8080, объём памяти, потребовалось изменить способ адресации памяти. Ведь если использовать старые методы, когда адрес к ячейке памяти содержался в указательных регистрах, то пришлось бы увеличивать размер этих самых регистров, чтобы иметь возможность обращаться к большему объёму памяти. Поэтому для адресации 1 Мбайт памяти применили следующую схему. На шину адреса подавался физический адрес размером 20 бит, который формировался путём сложения содержимого одного из сегментных регистров (16 бит), умноженного на 2, с содержимым указательного регистра: таким образом, адресация ячейки памяти производилась по "номеру сегмента" и "эффективному адресу ячейки в сегменте" (называемому также смещением). Если результат сложения оказывался больше, чем 2 − 1, то 21-й бит отбрасывался; такая процедура называется «заворачиванием» адреса (). Этот метод впоследствии (после появления защищённого режима) назвали реальным режимом адресации процессора, такой режим позволяет адресовать до 1 Мбайт памяти.
Для того чтобы адресовать 1 мегабайт памяти (20 бит адреса) с использованием 16-битных регистров используется сегментирование. Старшие 4 бит адреса выводятся на отдельные контакты корпуса, а младшие 16 выводятся на совмещённую шину адреса-данных.
Работа с памятью.
Но граница сегмента не жёсткая, а плавающая. Для того, чтобы адресовать нужный сегмент, используются 16-битные регистры сегмента, значение которых сдвигается на 4 бита вверх и складывается с указательным 16-битным регистром. Полученное значение — 20-битный адрес памяти или устройства выводится на контакты.
Если результат сложения оказывался больше чем 1 мегабайт, выводятся только младшие 20 бит адреса, а старший, 21-й бит, отбрасывается.
Таким образом, память разделяется на сегменты, размером 64 Кбайт каждый и начинающиеся с адреса, кратного 16 (4 бита двоичного смещения вверх любого из регистра-указателей процессора), сегменты могли перекрываться или совпадать (граница параграфа); 
В компьютере, подобном IBM PC, разработчики сэкономили 1 микросхему и решили не использовать разделение адресных пространств для памяти и для устройств ввода-вывода (т. н. "верхняя память" — ) использовались для видеопамяти и BIOS-а, это ограничивало память, доступную пользователю, объёмом в 640 Кбайт (т. н. "обычная память" — ; страницы 0~9). 
На то время такой режим адресации обеспечивал множество преимуществ: ёмкость памяти могла составлять до 1 Мбайт, хотя команды оперировали 16-битными адресами; упрощалось использование отдельных областей памяти для программы, её данных и стека; упрощалась разработка устройств, совместимых друг с другом.
Система команд.
Система команд процессора Intel 8086 состоит из 98 команд (и более 3800 их вариаций): 19 команд передачи данных, 38 команд их обработки, 24 команды перехода и 17 команд управления процессором. Возможно 7 режимов адресации. Микропроцессор не содержал команды для работы с числами с плавающей запятой. Данная возможность реализовывалась отдельной микросхемой, называемой математический сопроцессор, который устанавливался на материнской плате. Сопроцессор вовсе не обязательно должен был быть произвёден Intel (модель Intel 8087), к примеру, некоторые производители микросхем, такие как , выпускали более производительные сопроцессоры, чем Intel.
Система команд процессора Intel 8086 включает в себя несколько очень мощных строковых инструкций. Если инструкция имеет префикс REP (повтор), то процессор будет выполнять операции с блоками — перемещение блока данных, сравнение блоков данных, присвоение определённого значения блоку данных определенной величины, и т. д., то есть, одна инструкция 8086 с префиксом REP может выполнять 4—5 инструкций, выполняемых на некоторых других процессорах. Но следует упомянуть, что подобные приёмы были реализованы и в других процессорах — Zilog Z80 имел инструкции перемещения и поиска блоков, а Motorola 68000 может выполнять операции с блоками, используя всего две команды.
В микропроцессоре Intel 8086 была использована примитивная форма конвейерной обработки. Блок интерфейса с шиной подавал поток команд к исполнительному устройству через 6-байтовую очередь команд. Таким образом, выборка и выполнение новых команд могли происходить одновременно. Это значительно увеличивало пропускную способность процессора и лишало необходимости ожидать считывание команды из памяти при занятом другими операциями интерфейсе микросхемы.
Микрокомпьютеры на основе Intel 8086.
Для работы процессора Intel 8086 требовался полностью новый 16-разрядный набор микросхем поддержки (шинные формирователи, мультиплексоры и демультиплексоры, интерфейсные микросхемы, набор различных контроллеров и т. п.). Так как рынок на тот момент был ориентирован на 8-разрядные микропроцессоры, то производителей производящих 16-разрядные микросхемы поддержки почти не было. Это привело к тому, что данные микросхемы если и присутствовали, то в весьма ограниченном ассортименте и зачастую имели завышенную рыночную цену. Таким образом, крайне мало производителей решились использовать процессор Intel 8086 в своих персональных компьютерах. Intel, столкнувшись с проблемой сбыта, разработала и выпустила в 1979 году процессор Intel 8088, который отличался от Intel 8086 в основном только 8-битной шиной данных. Однако, этот шаг позволил использовать совместно с Intel 8088 большой ассортимент 8-битных микросхем. На основе Intel 8088 было создано большое число персональных компьютеров, которые оставались популярными в 1970-е и 1980-е годы, а также определили популярность набора команд x86 и, соответственно, дальнейшее развитие как процессоров Intel x86, так и компьютеров на основе данной линейки микропроцессоров. Знаменитый персональный компьютер IBM PC (модель IBM 5150) — прародитель всех современный IBM PC-совместимых машин — был построен именно на Intel 8088. 
Тем не менее, дальнейшее развитие 16-разрядных систем, со временем, привело к выпуску большого ассортимента 16-разрядных микросхем поддержки от различных производителей по доступным ценам. Это позволило разрабатывать дешёвые и разнообразные микрокомпьютеры на процессорах Intel 8086. Однако, к 1982 году в ассортименте Intel появились более современные и производительные процессоры с 16-разрядными шинами данных, Intel 80186 и Intel 80286, и производительные компьютеры стали строиться преимущественно на процессоре Intel 80286 и, реже, на основе Intel 80186. Но всё же в основе некоторых микрокомпьютеров использовался Intel 8086, одним из таких является Mycron 2000 — первый коммерческий микрокомпьютер на базе Intel 8086. Машина для обработки текстов IBM Displaywriter, Compaq DeskPro и Wang Professional Computer также использовали Intel 8086.

</doc>
<doc id="947" url="?curid=947" title="Международная организация по стандартизации">
Международная организация по стандартизации

Международная организация по стандартизации, ИСО (International Organization for Standardization, ISO) — международная организация, занимающаяся выпуском стандартов.
Международная организация по стандартизации создана в 1946 году двадцатью пятью национальными организациями по стандартизации, на основе двух организаций: ISA (International Federation of the National Standardizing Associations), учреждённой в Нью-Йорке в 1926 году (расформирована в 1942) и UNSCC (United Nations Standards Coordinating Committee), учреждённой в 1944 году. Фактически её работа началась с 1947 года. СССР был одним из основателей организации, постоянным членом руководящих органов, дважды представитель Госстандарта избирался председателем организации. Россия стала членом ИСО как правопреемник СССР. 23 сентября 2005 года Россия вошла в Совет ИСО.
При создании организации и выборе её названия учитывалась необходимость того, чтобы аббревиатура наименования звучала одинаково на всех языках. Для этого было решено использовать греческое слово "ισος" — равный, вот почему на всех языках мира Международная организация по стандартизации имеет краткое название «исо».
Сфера деятельности ИСО касается стандартизации во всех областях, кроме электротехники и электроники, относящихся к компетенции Международной электротехнической комиссии (МЭК, IEC). Некоторые виды работ выполняются совместными усилиями этих организаций. Кроме стандартизации, ИСО занимается проблемами сертификации.
ИСО определяет свои задачи следующим образом: содействие развитию стандартизации и смежных видов деятельности в мире с целью обеспечения международного обмена товарами и услугами, а также развития сотрудничества в интеллектуальной, научно-технической и экономической областях.
Официальными языками являются: английский, французский и русский.
Состав ИСО.
На сегодняшний день в состав ИСО входит 165 стран своими национальными организациями по стандартизации. Россию представляет Федеральное агентство по техническому регулированию и метрологии в качестве комитета — члена ИСО. Всего в составе ИСО более 100 комитетов-членов. Кроме комитетов-членов, членство в ИСО может иметь статус членов-корреспондентов, которыми являются организации по стандартизации развивающихся государств. Категория член-абонент введена для развивающихся стран. Комитеты-члены имеют право принимать участие в работе любого технического комитета ИСО, голосовать по проектам стандартов, избираться в состав Совета ИСО и быть представленными на заседаниях Генеральной ассамблеи. Члены-корреспонденты (их 42) не ведут активной работы в ИСО, но имеют право на получение информации о разрабатываемых стандартах. Члены-абоненты уплачивают льготные взносы, имеют возможность быть в курсе международной стандартизации.
Организационная структура.
Организационно в ИСО входят руководящие и рабочие органы. Руководящие органы: Генеральная ассамблея (высший орган), Совет, Техническое руководящее бюро. Рабочие органы — технические Комитеты (ТК), подкомитеты, технические консультативные группы (ТКГ).
Генеральная ассамблея.
"Генеральная ассамблея" — это собрание должностных лиц и делегатов, назначенных комитетами-членами. Каждый комитет-член имеет право представить не более трех делегатов, но их могут сопровождать наблюдатели. Члены-корреспонденты и члены-абоненты участвуют как наблюдатели. Генеральная ассамблея 2013 года прошла в Санкт-Петербурге.
Совет.
"Совет" руководит работой ИСО в перерывах между сессиями Генеральной ассамблеи. Совет имеет право, не созывая Генеральной ассамблеи, направить в комитеты-члены вопросы для консультации или поручить комитетам-членам их решение. На заседаниях Совета решения принимаются большинством голосов присутствующих на заседании комитетов-членов Совета. В период между заседаниями и при необходимости Совет может принимать решения путем переписки.
Совету ИСО подчиняется семь комитетов: ПЛАКО (техническое бюро), ПРОФКО (методическая и информационная помощь); КАСКО (комитет по оценке соответствия); ИНФКО (комитет по научно-технической информации); ДЕВКО (комитет по оказанию помощи развивающимся странам); КОПОЛКО (комитет по защите интересов потребителей); РЕМКО (комитет по стандартным образцам).
ПЛАКО.
ПЛАКО (PLACO — Planning Committee) подготавливает предложения по планированию работы ИСО, по организации и координации технических сторон работы. В сферу работы ПЛАКО входят рассмотрение предложений по созданию и роспуску технических комитетов, определение области стандартизации, которой должны заниматься комитеты.
КАСКО.
КАСКО (CASCO — Committee on conformity assessment) занимается вопросами подтверждения соответствия продукции, услуг процессов и систем качества требованиям стандартов, изучая практику этой деятельности и анализируя информацию. Комитет разрабатывает руководства по испытаниям и оценке соответствия (сертификации) продукции, услуг, систем качества, подтверждению компетентности испытательных лабораторий и органов по сертификации. Важная область работы КАСКО — содействие взаимному признанию и принятию национальных и региональных систем сертификации, а также использованию международных стандартов в области испытаний и подтверждения соответствия. КАСКО совместно с МЭК подготовлен целый ряд руководств по различным аспектам сертификации, которые широко используются в странах-членах ИСО и МЭК: принципы, изложенные в этих документах, учтены в национальных системах сертификации, а также служат основой для соглашений по оценке соответствия взаимопоставляемой продукции в торгово-экономических связях стран разных регионов. КАСКО также занимается вопросами создания общих требований к аудиторам по аккредитации испытательных лабораторий и оценке качества работы аккредитующих органов; взаимного признания сертификатов соответствия продукции и систем.
ДЕВКО.
ДЕВКО (DEVCO — Committee on developing country matters) изучает запросы развивающихся стран в области стандартизации и разрабатывает рекомендации по содействию этим странам в данной области. Главные функции ДЕВКО: организация обсуждения в широких масштабах всех аспектов стандартизации в развивающихся странах, создание условий для обмена опытом с развитыми странами; подготовка специалистов по стандартизации на базе различных обучающих центров в развитых странах; содействие ознакомительным поездкам специалистов организаций, занимающихся стандартизацией в развивающихся странах; подготовка учебных пособий по стандартизации для развивающихся стран; стимулирование развития двустороннего сотрудничества промышленно развитых и развивающихся государств в области стандартизации и метрологии. В этих направлениях ДЕВКО сотрудничает с ООН. Одним из результатов совместных усилий стало создание и функционирование международных центров обучения.
КОПОЛКО.
КОПОЛКО (COPOLCO — Committee on consumer policy) изучает вопросы обеспечения интересов потребителей и возможности содействия этому через стандартизацию; обобщает опыт участия потребителей в создании стандартов и составляет программы по обучению потребителей в области стандартизации и доведению до них необходимой информации о международных стандартах. Этому способствует периодическое издание Перечня международных и национальных стандартов, а также полезных для потребителей руководств: «Сравнительные испытания потребительских товаров», «Информация о товарах для потребителей», «Разработка стандартных методов измерения эксплуатационных характеристик потребительских товаров» и др.
КОПОЛКО участвовал в разработке руководства ИСО/МЭК по подготовке стандартов безопасности.
РЕМКО.
РЕМКО (REMCO — Committee on reference materials) оказывает методическую помощь ИСО путем разработки соответствующих руководств по вопросам, касающимся стандартных образцов (эталонов). Так, подготовлен справочник по стандартным образцам и несколько руководств: «Ссылка на стандартные образцы в международных стандартах», «Аттестация стандартных образцов. Общие и статистическое принципы» и др. Кроме того, РЕМКО — координатор деятельности ИСО по стандартным образцам с международными метрологическими организациями, в частности, с МОЗМ — Международной организацией законодательной метрологии.
Порядок разработки стандартов.
Международный стандарт является результатом консенсуса между участниками организации ИСО. Он может использоваться непосредственно или путём внедрения в национальные стандарты разных стран.
Международные стандарты разрабатываются техническими комитетами ИСО (ТК) и подкомитетами (ПК) в ходе шестистадийного процесса:
Таблица условных обозначений стадий даёт наглядное представление о стадиях разработки:
Если в начале работы над проектом стандарта уже имеется более или менее завершённый документ, например, стандарт, разработанный другой организацией, некоторые стадии можно опустить. При так называемой «ускоренной процедуре» документ направляется непосредственно на одобрение членам ИСО в качестве черновика международного стандарта (ЧМС) (стадия 4) или, если документ был разработан международным органом стандартизации, признанным Советом ИСО, в качестве окончательной редакции черновика Международного стандарта (ОЧМС, стадия 5), без прохождения предыдущих стадий.
Ниже приводится обзор всех шести стадий:
Более подробное описание процесса разработки международных стандартов см. в публикации «Директивы ИСО/МЭК, Часть 1, Процедурные правила».
Стадия 1: Стадия предложения.
Первый шаг в разработке международного стандарта — подтверждение того, что конкретный международный стандарт необходим. Новое предложение (НП) направляется на голосование членам соответствующего ТК или ПК, чтобы определить необходимость включения соответствующего пункта в программу работы.
Предложение принимается, если большинство У-членов ТК/ПК («участники») голосуют «за», и если, по крайней мере, пять У-членов заявляют о том, что примут активное участие в проекте. На этой стадии обычно назначается лидер проекта, ответственный за данный пункт программы.
Стадия 2: Подготовительная стадия.
Обычно для подготовки рабочего черновика ТК/ПК создаёт рабочую группу экспертов, председателем (созывающим членом) которой является лидер проекта. Могут приниматься различные редакции рабочих черновиков, до тех пор, пока рабочая группа не решит, что ею разработано наилучшее техническое решение рассматриваемой проблемы. На этой стадии черновик передаётся вышестоящему комитету рабочей группы для прохождения фазы выработки консенсуса.
Стадия 3: Стадия комитета.
Как только первый черновик комитета готов, он регистрируется Главным Секретариатом ИСО. Он рассылается для замечаний и, если необходимо, голосования У-членов ТК/ПК. Могут готовиться разные редакции черновика комитета, до тех пор, пока не будет достигнут консенсус по техническому содержанию текста. Как только консенсус достигнут, текст окончательно редактируется для представления в качестве черновика международного стандарта (ЧМС).
Стадия 4: Стадия вопросов.
Черновик международного стандарта (ЧМС) распространяется среди всех членов ИСО Главным Секретариатом ИСО для голосования и замечаний в течение пяти месяцев. Он одобряется для представления в качестве окончательной редакции черновика международного стандарта (ОЧМС), если две трети У-членов ТК/ПК высказываются «за», и не более одной четверти от общего количества голосов поданы «против». Если критерии одобрения не выполнены, текст возвращается в исходный ТК/ПК для дальнейшего изучения, и исправленный документ снова публикуется для голосования и замечаний в качестве черновика международного стандарта.
Стадия 5: Стадия одобрения.
Окончательная редакция черновика международного стандарта (ОЧМС) распространяется среди всех членов ИСО Главным Секретариатом ИСО для итогового голосования за/против в течение двух месяцев. Если в этот период поступают технические замечания, на этой стадии они уже не рассматриваются, но регистрируются для анализа в ходе будущего пересмотра данного международного стандарта. Текст одобряется для представления в качестве окончательной редакции черновика международного стандарта (ОЧМС), если две трети У-членов ТК/ПК высказываются «за», и не более одной четверти от общего количества голосов поданы «против». Если эти критерии одобрения не выполнены, стандарт возвращается в исходный ТК/ПК для пересмотра с учётом технических причин, представленных в поддержку голосов «против».
Стадия 6: Стадия публикации.
Когда окончательная редакция черновика международного стандарта одобрена, в итоговый текст разрешается, при возникновении такой необходимости, вносить только небольшую редакторскую правку. Итоговый текст отсылается в Главный Секретариат ИСО, который публикует данный международный стандарт.
Пересмотр стандартов.
Все международные стандарты рецензируются всеми членами ИСО, по крайней мере, через три года после публикации и каждые пять лет после первого рецензирования. Решение о подтверждении, пересмотре или отзыве международного стандарта принимается большинством голосов У-членов ТК/ПК.
Критика ISO.
ISO/IEC.
5 сентября 2007 года принятие варианта OOXML как стандарта ISO/IEC 29500 было временно отклонено по результатам голосования.
В марте 2008 года изменённая спецификация была принята как будущий стандарт ISO/IEC 29500. В частности, в Норвегии при этом были отмечены нарушения процесса стандартизации. Позже оказалось, что файлы, сохраняемые Microsoft Office 2007, не проходят тестов на соответствие стандарту, что нарушает правила принятия стандарта через процедуру , требующие, чтобы существовали реализации стандарта.
В мае 2008 были поданы апелляции от ЮАР, Бразилии и Индии, Венесуэлы. Также подана жалоба о нескольких нарушениях от Open Source Leverandørforeningen в Дании.
Публикация ISO/IEC DIS 29500 была отложена на период рассмотрения апелляций (30 дней).
В июле руководители ISO и IEC порекомендовали отклонить апелляции, указав в качестве причины то, что проект стандарта был принят голосованием в соответствии с директивами ISO/IEC JTC 1.
В августе ISO отклонила апелляции стран, выступающих против принятия OOXML как стандарта, так как они не смогли получить поддержку необходимого числа участников ISO для приостановления принятия стандарта.
В конце августа государственные IT‐организации Бразилии, ЮАР, Венесуэлы, Эквадора, Кубы и Парагвая опубликовали заявление о сомнениях в нейтральности ISO.
В Норвегии, где из 21 голоса «против» и двух голосов «за» получилось «за», 29 сентября 2008 года 13 членов технической комиссии в знак протеста вышли из состава .
По данным собрания ISO/IEC JTC1/SC34, подкомиссии ISO/IEC JTC1, в начале октября SC34 отправила OASIS неопубликованный запрос на передачу ей контроля над стандартом ISO/IEC 26300 (ODF), обосновывая это стремлением к лучшей совместимости между стандартами. В Groklaw также обратили внимание на то, что 9 из 20 присутствовавших на собрании в июле являлись сотрудниками или консультантами Microsoft, либо членами ECMA TC45. В результате появились подозрения в попытке захвата Microsoft контроля над ODF.

</doc>
<doc id="953" url="?curid=953" title="XMPP">
XMPP

XMPP (Extensible Messaging and Presence Protocol) — расширяемый протокол обмена сообщениями и информацией о присутствии), ранее известный как Jabber (, джа́ббер — «болтовня», «трёп», «тарабарщина») — открытый, основанный на XML, свободный для использования протокол для мгновенного обмена сообщениями и информацией о присутствии (см. список контактов) в режиме, близком к режиму реального времени. Изначально спроектированный легко расширяемым, протокол, помимо передачи текстовых сообщений, поддерживает передачу голоса, видео и файлов по сети.
В отличие от коммерческих систем мгновенного обмена сообщениями, таких как AIM, ICQ, WLM и Yahoo, XMPP является децентрализованной, расширяемой и открытой системой. Любой желающий может открыть свой сервер мгновенного обмена сообщениями, регистрировать на нём пользователей и взаимодействовать с другими серверами XMPP. На основе протокола XMPP уже открыто множество частных и корпоративных серверов XMPP. Среди них есть достаточно крупные проекты, такие как Facebook, Google Talk, WhatsApp, Одноклассники.ru, QIP, LiveJournal, Juick и др.
История.
Проект Jabber был основан Джереми Миллером в начале 1998 года с разработки сервера jabberd. Первое сообщение о проекте появилось 4 января 1999 года на сайте Slashdot. Эту дату принято считать днем рождения технологии. Вскоре после этого к проекту присоединилось несколько основных разработчиков, которые стали работать над сервером jabberd, клиентами для Windows и GNU/Linux, а также шлюзами в основные системы IM (AIM, ICQ, MSN, и Yahoo). Позже, в 1999 году, "Webb Interactive Services" начало спонсировать основных разработчиков, что ускорило процесс создания проекта. В то время появилась основа протокола Jabber, а также сервер jabberd и ранние клиенты, такие, как WinJab (устарел и получил своё развитие в Exodus) и Gabber. Этот ранний период постоянных изменений закончился в мае 2000 года с выпуском jabberd 1.0.
Ранний протокол Jabber сформировал основы для стандарта XMPP, опубликованного как RFC 3920. Часто этот момент рассматривается как начало соперничества с SIMPLE, основанным на протоколе SIP, как стандартного протокола для мгновенного обмена сообщениями и информацией о присутствии.
С августа 2001 года протокол Jabber переходит под контроль "Jabber Software Foundation" (16 января 2007 года Jabber Software Foundation была переименована в XMPP Standards Foundation), для более точного описания своей работы развития расширений собственно протокола, в отличие от линии развития программы с одноимённым названием.
Jabber, Inc. занимается развитием двух проектов — Jabber Extensible Communications Platform (Jabber XCP) и JabberNow. Первый является фреймворком, а второй — программно-аппаратное решение (специально собранный и настроенный компьютер). Сайт jabber.org все ещё функционирует. Инвесторами проекта Jabber являются Jona, Inc., France Telecom, Intel Capital, и Webb Interactive Services, Inc.
В августе 2005 года Google представил сервис Google Talk — комбинацию VoIP и клиента для обмена сообщениями, использующий XMPP для функций переписки, а также как основу для передачи голоса и файлов. Первоначальный запуск сервиса от Google не включал межсерверного общения, но к 17 января 2006 года такая возможность была добавлена. Однако, в мае 2013 Google объявил о сокращении поддержки межсерверных коммуникаций в связи с продвижением своего сервиса Google Hangouts.
Протокол.
Семейство протоколов XMPP принято как стандарт RFC. Стандартный порт для XMPP — 5222. Также возможно использовать порт 80 и/или 443, если возникают проблемы с файрволом.
Боты.
Большой популярностью в Jabber’е пользуются боты для конференций. Они широко используются для защиты конференций от спама, в качестве цензора, ведения различной статистики, парсинга веб-сайтов (анекдоты, новости и т. п.), создания «мостов» между чатами, ведения логов, управления конференциями и так далее. Функциональность xmpp-ботов и область их применения ограничены только фантазией их разработчиков.
Адресация.
Каждый пользователь в сети Jabber имеет уникальный идентификатор — "Jabber ID" (сокращенно "JID"). Адрес JID, подобно адресу электронной почты, содержит имя пользователя и доменное имя сервера, на котором зарегистрирован пользователь, разделённые знаком @. Например, пользователь user, зарегистрированный на сервере example.com, будет иметь адрес: user@example.com.
Пользователь может иметь одновременно несколько подключений, для различия которых используется дополнительный атрибут JID, называемый "ресурсом" и добавляемый через слэш в конец адреса. К примеру, пусть полный адрес пользователя будет user@example.com/work, тогда сообщения, посланные на адрес user@example.com, дойдут на указанный адрес вне зависимости от имени ресурса, но сообщения для user@example.com/work дойдут на указанный адрес только при соответствующем подключенном ресурсе.
Адреса JID могут также использоваться без явного указания имени пользователя (с указанием имени ресурса или без такового) для системных сообщений и для контроля специальных возможностей на сервере.
Соединение с другими протоколами.
Полезной особенностью XMPP систем являются "транспорты", или "шлюзы", позволяющие пользователям получать доступ к сетям, использующим другие протоколы. Это могут быть другие протоколы мгновенного обмена сообщениями, IRC или такие протоколы, как SMS и электронная почта.
В отличие от мультипротокольных клиентов, XMPP предоставляет доступ на уровне сервера, посредством коммуникации через специальные сервисы-шлюзы, выполняющиеся на удалённом компьютере.
Любой пользователь может «зарегистрироваться» на одном из этих шлюзов, предоставив информацию, необходимую для входа в сеть, и может общаться с пользователями сети так, как если бы они были пользователями сети джаббер. Это значит, что любой клиент, полностью поддерживающий XMPP, может быть использован для доступа к любой сети, для которой существуют шлюзы, без какого-либо дополнительного кода в клиенте и без необходимости клиенту иметь прямой доступ в Интернет.
Реализация шлюзов зависит от конкретного XMPP-сервера и подвержена нестабильности из-за закрытости коммерческих IM-сервисов.

</doc>
<doc id="955" url="?curid=955" title="Ядро Linux">
Ядро Linux

Linux () — ядро операционной системы, соответствующее стандартам "POSIX". Разработка была начата финским студентом Линусом Торвальдсом в 1991 году.
В основном код написан на Си с некоторыми расширениями "gcc" и на ассемблере (с использованием AT&amp;T-синтаксиса "GNU Assembler").
Распространяется как свободное программное обеспечение на условиях "GNU General Public License", кроме несвободных элементов, особенно драйверов, которые используют прошивки, распространяемые под различными лицензиями.
Торговая марка "Linux" зарегистрирована на Линуса Торвальдса.
Операционные системы на базе "Linux" являются лидерами на рынках суперкомпьютеров, микрокомпьютеров, серверов и смартфонов.
История.
Начало проекту было положено в 1991 году с публикации сообщения в новостной группе Usenet comp.os.minix следующего содержания:
Привет всем, кто использует миникс — Я делаю (свободную) операционную систему (всего лишь хобби, она не будет большой и профессиональной, как gnu) для клонов 386 (486) AT…
К тому времени GNU уже создал множество составляющих для свободной операционной системы, но её ядро GNU Hurd ещё не было готово. Поэтому пустующее место ядра для свободной ОС занял Linux и, несмотря на ограниченную функциональность ранних версий, привлёк к себе множество разработчиков и пользователей.
«Linux», разработка которого была начата Торвальдсом — лишь небольшая часть многих из использующих его систем, которые обычно тоже называют «Linux». Это иногда приводит к путанице, и те из них, которые используют системные библиотеки (например, GNU C Library) и другие программы Проекта GNU, называют также «GNU/Linux».
О различных комбинациях свободных компонентов в операционных системах см. Операционные системы на основе свободного ПО.
По состоянию на апрель 2011 года семейство операционных систем на базе ядра Linux — третье по популярности в мире на рынке настольных компьютеров — 5,1 %.
На рынке веб-серверов доля Linux порядка 32 %, остальное — Unix-системы (FreeBSD и др.).
По данным Top500, GNU/Linux используется в качестве операционной системы на 91 % самых мощных суперкомпьютеров планеты. Большинство мобильных устройств, таких, как смартфоны и планшетные компьютеры на базе ОС Android и MeeGo, а также телевизоры, и многие служебные устройства, такие, как внешние сетевые жёсткие диски, маршрутизаторы и модемы, также используют операционные системы на базе ядра Linux.
От: torvalds@klaava.Helsinki.Fi (Линус Бенедикт Торвальдс)
Хронология.
Новостная группа: comp.os.minix
Тема: Небольшой опрос о моей новой операционной системе
Message-ID:&lt;1991Aug25.205708.9541@klaava.Helsinki.Fi&gt;
Дата: 25 Aug 91 20:57:08 GMT
Организация: Хельсинкский Университет
Привет всем тем, кто использует миникс —
Я делаю (свободную) операционную систему (это только хобби, не столь большое и профессиональное, как GNU) для 386 (486)AT-клонов. Эта система пишется с апреля и скоро будет готова. Я хочу получить любой отзыв, касающийся вещей, которые нравятся/не нравятся людям в миникс, так как моя ОС похожа на неё (такое же устройство файловой системы (по практическим соображениям), среди прочего).
В настоящее время я портировал bash (1.08) и gcc (1.40), и, похоже, эти программы работают.
Это значит, что я получу что-то практичное в ближайшие несколько месяцев, и я хочу узнать, какие возможности хочет большинство людей.
Любые предложения принимаются, но я не обещаю, что я осуществлю их:-)
Линус (torvalds@kruuna.helsinki.fi)
PS. Да — в ней нет кода миникс, и будет мультипотоковая ФС.
Система НЕПЕРЕНОСИМА (использует команды Intel 386 и т. д.) и, вероятно, будет поддерживать только жёсткие диски AT, так как это всё, что у меня есть:-(
Версии.
Торвальдс продолжает выпускать новые версии ядра, объединяя изменения, вносимые другими программистами, и внося свои. Оно обычно называется «ванильным» ("vanilla"), то есть официальное ядро без каких-либо сторонних изменений. В дополнение к официальным версиям ядра существуют альтернативные ветки, которые могут быть взяты из различных источников. Как правило, разработчики дистрибутивов Linux поддерживают свои собственные версии ядра, например, включая в них драйверы устройств, которые ещё не включены в официальную версию. С 30 мая 2011 изменена политика нумерации версий ядра .
Нумерация версий до 30 мая 2011.
Номер версии ядра Linux до 30 мая 2011 содержал четыре числа, согласно недавнему изменению в политике именования версий, схема которой долгое время была основана на трёх числах. Для иллюстрации допустим, что номер версии составлен таким образом: A.B.C (например, 2.2.1, 2.4.13 или 2.6.12.3).
Нумерация версий с 30 мая 2011.
30 мая 2011 Линус Торвальдс выпустил ядро версии 3.0-rc1. Вместе с ним изменена политика нумерации версий ядра. Отменено использование чётных/нечётных номеров для обозначения стабильности ядра, а третье число означает стабильность ядра. Версия 3.0 практически не несёт никаких изменений, кроме изменения политики нумерации ядра. Таким образом, стабильные версии ядра 3.0 будут именоваться 3.0.X, а следующий после этого релиз будет иметь номер 3.1.
Поддержка.
В то время как Торвальдс продолжает выпускать новые экспериментальные версии, руководство «старыми» стабильными версиями передаётся другим лицам:
Другими программистами ядра Linux являются Роберт Лав и Инго Молнар.
(См. Список сопроводителей Linux ).
Архитектура.
Ядро Linux поддерживает многозадачность, виртуальную память, динамические библиотеки, отложенную загрузку, производительную систему управления памятью и многие сетевые протоколы.
На сегодняшний день Linux — монолитное ядро с поддержкой загружаемых модулей. Драйверы устройств и расширения ядра обычно запускаются в 0-м кольце защиты, с полным доступом к оборудованию. В отличие от обычных монолитных ядер, драйверы устройств легко собираются в виде модулей и загружаются или выгружаются во время работы системы.
То, что архитектура Linux не является микроядерной, вызвало обширнейшие прения между Линусом Торвальдсом и Эндрю Таненбаумом в конференции comp.os.minix в 1992 г.
Совместимость.
Не задуманный изначально как многоплатформенное ядро, Linux на данное время перенесён на очень широкий круг архитектур, запускается на широком спектре оборудования от iPAQ (карманный компьютер) до IBM S/390 (высокопроизводительный мейнфрейм). Системы на основе Linux используются в качестве основных почти на всех суперкомпьютерах (более 91 % списка Top500), в том числе и на самых мощных — K computer.
Изначально Linux разрабатывался для 32-битных x86-совместимых ПК; на сегодняшний день различные версии ядра Linux запускаются на следующих процессорных архитектурах:
Лицензия.
Linux распространяется на условиях лицензии GNU General Public License, то есть свободно. Эту лицензию выбрал Линус Торвальдс практически сразу после того, как стало понятно, что его хобби начало получать распространение по всему миру. Владельцем торговой марки Linux является Линус, а помогает следить за соблюдением его прав и условий GPL Фонд свободного программного обеспечения.
Символ.
Официальным символом Linux является пингвин по имени Tux, отличающийся от «обычных» пингвинов жёлтым цветом клюва и лап.
В качестве символа версии ядра 2.6.29 принят тасманский дьявол Tuz, изображение которого ранее служило талисманом конференции linux.conf.au 2009. На этой конференции Линус Торвальдс провел успешную акцию по благотворительной продаже игрушек Linux Tasmanian devil за сохранение популяции Тасманского дьявола. В версии 2.6.30 используется прежний логотип.
Оценка стоимости разработки с нуля.
Стоимость переразработки ядра Linux версии 2.6.0 способами, принятыми для разработки проприетарного ПО, была оценена в 612 млн долл. США (467 млн евро) в ценах 2004 года с использованием модели оценки человеко-месяцев COCOMO. В 2006 году исследование, профинансированное Евросоюзом, подняло стоимость разработки ядра Linux до уровня 882 млн евро (1,09 млрд долл. США).
Эта тема была снова поднята в октябре 2008 г. Амандой МакФерсон, Брайаном Проффиттом и Роном Хейл-Эвансом. Используя методологию Дэвида Э. Вилера, они оценили разработку ядра 2.6.25 в 1,3 млрд долл. США (часть от 10,8 млрд долл. США переразработки Fedora 9). Также Гарсиа-Гарсиа и Алонсо де Магдалено из университета Овьедо (Испания) оценили ежегодный прирост стоимости ядра приблизительно в 100 млн евро с 2005 по 2007 гг. и 225 млн евро в 2008 г. Совокупная стоимость разработки в Евросоюзе в 2009 году оценена в более чем 1 млрд евро (около 1,23 млрд долл. США).

</doc>
<doc id="957" url="?curid=957" title="MIDI">
MIDI

MIDI ( — цифровой интерфейс музыкальных инструментов) — стандарт цифровой звукозаписи на формат обмена данными между электронными музыкальными инструментами.
Интерфейс позволяет единообразно кодировать в цифровой форме такие данные как нажатие клавиш, настройку громкости и других акустических параметров, выбор тембра, темпа, тональности и др., с точной привязкой во времени. В системе кодировок присутствует множество свободных команд, которые производители, программисты и пользователи могут использовать по своему усмотрению. Поэтому интерфейс MIDI позволяет, помимо исполнения музыки, синхронизировать управление другим оборудованием, например, осветительным, пиротехническим и т. п.
Последовательность MIDI-команд может быть записана на любой цифровой носитель в виде файла, передана по любым каналам связи. Воспроизводящее устройство или программа называется "синтезатором (секвенсором) MIDI" и фактически является автоматическим музыкальным инструментом.
История.
К концу 70-х годов XX века получили распространение музыкальные синтезаторы. Они представляли собой наборы генераторов звуковых частот, управляемых напряжением. Нажатие клавиши на клавиатуре синтезатора включало генератор, частота которого задавалась напряжением от регулятора тональности данной клавиши. Количество отдельных генераторов определяло количество тонов синтезатора, которые могут звучать одновременно. Конкретные модели синтезаторов могли иметь особенности звучания и характерные специальные эффекты. Реализовать управление всей гаммой потенциальных возможностей синтеза звука в рамках одного аналогового устройства было невозможно. Рабочее место музыканта того времени могло состоять из нескольких разнородных синтезаторов; работать с таким зоопарком было сложно. В начале 80-х годов необходимость увеличения гибкости управления разнородными синтезаторами стала очевидной, а развитие электроники подсказало путь решения проблемы: цифровое программное управление. Компании-производители синтезаторов удачно смогли договориться о разработке и поддержке единого стандарта на интерфейс управления синтезаторами, который и появился в 1982 году. Идеология стандарта подразумевала разделение органов управления и аппаратуры синтеза звука. Интерфейс MIDI фактически стал средством передачи положения клавиш и регуляторов от музыкальной клавиатуры к аппаратуре синтеза звука. Теперь музыкант мог с одной клавиатуры управлять несколькими синтезаторами разных типов и фирм-изготовителей. Более того, цифровой формат передачи позволил дополнить аппаратуру секвенсорами — устройствами, запоминающими наигранную мелодию. Теперь музыкант мог записывать композиции или их части, микшировать без потери качества звука и использования сложных студийных магнитофонов того времени. Стандарт быстро завоевал популярность. Постепенно дополняясь новыми возможностями, он не потерял актуальности и в наше время.
Стандарт на аппаратуру и программное обеспечение.
Физический уровень интерфейса представляет собой токовую петлю (что обеспечивает гальваническую развязку и безопасность при соединении устройств между собой). Передатчик активный, 0..5 мА, наличие тока обозначает 0, нет тока — 1. Разъем 5-штырьковый DIN 41524. Приёмопередатчик асинхронный, скорость 31,25 кбит/с, формат 8-N-1.
MIDI имеет шинную топологию. Источник данных (например, MIDI клавиатура) имеет разъем выхода данных (MIDI OUT), который соединяется кабелем с входом (MIDI IN) первого синтезатора. Синтезатор имеет второй разъем (MIDI THRU), на котором дублируется поток данных со входа. Это позволяет соединить в цепочку произвольное количество синтезаторов. Синтезатор с клавиатурой имеет все три разъема - IN, OUT, THRU.
Интерфейс однонаправленный (симплексный), то есть источник сообщений (например, музыкальная клавиатура) только передает. Никакой обратной связи не предусмотрено.
Стандарт описывает аппаратный интерфейс, который позволяет соединять электронные музыкальные инструменты и компьютеры различных производителей, описывает протоколы связи для передачи данных от одного устройства к другому. MIDI-устройства могут взаимодействовать с программными приложениями, используя коммуникационный протокол MIDI. Используя соответствующий программный MIDI-секвенсор, внешние MIDI-устройства могут посылать информацию на синтезатор звуковой карты. MIDI базируется на пакетах данных, каждый из которых соответствует MIDI-событию (), от нажатия клавиши до простой паузы, эти события разделяются по каналам. Сложная среда MIDI может включать различную аппаратуру, причём каждая часть системы будет отвечать за события на соответствующем канале. Альтернативным вариантом может быть одиночный синтезатор, который сам может управлять всеми каналами.
Формат музыкальных файлов.
В отличие от других форматов это не оцифрованный звук, а наборы команд (проигрываемые ноты, ссылки на проигрываемые инструменты, значения изменяемых параметров звука), которые могут воспроизводиться по-разному в зависимости от устройства воспроизведения. Удобство формата MIDI как формата представления данных позволяет реализовывать устройства, производящие автоматическую аранжировку по заданным аккордам, а также приложения 3D-визуализации звука. Кроме того, такие файлы, как правило, имеют на несколько порядков меньший размер, чем оцифрованный звук сравнимого качества.
Стандартный MIDI-файл (SMF — Standard MIDI File) — это специально разработанный формат файлов, предназначенный для хранения данных, записываемых и/или исполняемых секвенсором, секвенсор может быть как программой для компьютера, так и аппаратно выполненным модулем.
В этом формате хранятся стандартные MIDI-сообщения (то есть статус-байты и соответствующие им байты данных), а также временные метки или маркеры для каждого сообщения (то есть последовательности байтов, указывающие, какое количество условных единиц времени (импульсов, тиков) необходимо подождать перед тем, как исполнить следующее событие MIDI). Этот формат позволяет сохранять информацию о темпе, временном разрешении, выраженном в количестве тиков на одну четвертную длительность (или во временных единицах, приходящихся на одну секунду, в формате SMPTE), обозначения размера, информацию о музыкальных ключах, а также хранить названия треков и паттернов. Формат предусматривает возможность сохранения в одном файле нескольких паттернов и треков таким образом, что программы-приложения могут выбирать из всего набора хранимой информации ту, которая будет понятна данному приложению.
Как правило, трек представляет собой аналог музыкальной партии, например партии трубы. Аналогом паттерна может служить весь набор партий, взятых вместе, например совокупность партий трубы, ударных, фортепиано и т. д., которые используются в данном произведении или его части и исполняются одновременно.
при разработке формата предусмотрели возможность для любого секвенсора читать и записывать файл таким образом, чтобы, с одной стороны, не потерялись его данные, а с другой стороны, чтобы формат был достаточно гибким, приложения могли сохранять в файлах свою специфическую информацию, понятную только им, но не понятную другим программам-приложениям, причём при загрузке файлов MIDI непонятная другим программам-приложениям информация не приводит к недоразумениям, а просто игнорируется. В этом смысле формат файлов MIDI можно сравнить с форматами текстовой информации. Различные программы-секвенсоры способны читать MIDI-файлы, подобно тому, как различные текстовые редакторы читают ASCII-файлы, которые могут содержать вспомогательную информацию, понятную лишь данному редактору. Но в отличие от ASCII-файлов MIDI-файлы содержат цифровую информацию, и к тому же эта информация сохранена в виде записей, то есть групп байтов, которые содержат свой заголовок, состоящий из идентификатора записи и длины записи. Эти записи могут форматироваться, загружаться, игнорироваться и т. д. независимо друг от друга. Для осуществления работы с записями программы-приложения используют дополнительную информацию, записываемую в MIDI-файл. Например, возможно, программа «захочет» сохранить флаг, указывающий на то, что пользователь установил включенным звук метронома. Программа может вставить этот флаг в MIDI-файл таким образом, что другая программа-приложение сможет пропустить этот флаг без внимания. В будущем, возможно, существующий формат MIDI будет расширен и появятся новые типы записей. Новые программы для работы с MIDI-файлами будут распознавать и новые типы записей. Однако старые MIDI-файлы могут быть воспроизведены в своем исходном виде. Формат MIDI задуман таким образом, что с его расширениями будут совместимы более ранние его версии.
Что такое запись?
Данные всегда хранятся в виде записей. В одном MIDI-файле могут сосуществовать несколько различных записей. Каждая запись может иметь свой собственный размер, то есть количество байтов в различных записях может быть различно. Данные, хранящиеся в одной записи, связаны друг с другом определенным образом. Запись — это по своей сути набор взаимосвязанных байтов.
Каждая запись начинается с указания её идентификатора, который состоит из четырёх букв, то есть из четырёх ASCII-байтов. Этот идентификатор указывает, какой тип записи представлен в содержащихся в записи байтах данных. Последующие за идентификатором четыре байта (каждый из которых состоит из 8 бит) образуют 32-битное значение, указывающее длину (или размер) данной записи. Все записи должны начинаться с этих двух полей: идентификатора записи и размера записи. Эти два поля, занимающие всего 8 байт, образуют заголовок записи.
Длина записи не учитывает 8 байт заголовка. Байты длины просто указывают количество байтов в записи, которые следуют за заголовком.
Приведем пример заголовка (здесь байты представлены в шестнадцатеричном виде):
Отметим, что первые четыре байта заголовка образуют MThd (то есть первыми четырьмя байтами заголовка являются ASCII значения букв 'M', 'T', 'h', и 'd'). Последующие 4 байта говорят нам, что в записи будет ещё 6 байтов, следующих за заголовком. После этих шести байтов должен следовать следующий заголовок записи или же конец MIDI-файла.
Фактически все MIDI-файлы начинаются с заголовка MThd и именно этот факт является указанием на то, что мы имеем дело со стандартным MIDI-файлом).
Запись MThd.
Запись MThd имеет длину 6 байт и следует за идентификатором MThd и 32 битным числом (00 00 00 06).
Рассмотрим подробно эти 6 байтов, следующих за 8-байтным заголовком в MThd записи.
Первые два байта данных содержат информацию о формате или типе MIDI-файла. Существует три различных типа (формата) MIDI-файлов.
Тип 0 означает, что файл содержит MIDI-данные, записанные на одном треке, который, вероятно, объединяет в себе все 16 MIDI-каналов. Если ваш секвенсор сохраняет MIDI-данные в одном единственном блоке памяти, из которого он их воспроизводит, то такой секвенсор будет читать и записывать MIDI-данные именно в этот тип MIDI-файлов.
Файл типа 1 подразумевает, что в нём содержатся несколько (но возможно и всего один) одновременно воспроизводимых треков, каждый, вероятно, представляет свой собственный MIDI-канал. Все треки начинают воспроизводиться в один и тот же нулевой момент времени. Все треки, взятые вместе, образуют паттерн. Если ваш секвенсор разделяет в памяти различные MIDI-треки и хранит их в различных блоках и воспроизводит различные треки одновременно, то такой секвенсор будет читать и писать файлы типа 1.
Файлы типа 2 содержат один или несколько независимых треков, каждый такой трек образует свой собственный паттерн. Если ваш секвенсор разделяет MIDI-данные на несколько блоков в памяти, но воспроизводит лишь один единственный блок в данное время, но не воспроизводит их одновременно, когда каждый блок памяти содержит отдельную пьесу или её кусок, то этот секвенсор будет читать и записывать MIDI-файлы второго типа.
Следующие два байта определяют количество треков, хранимых в файле, эти два байта обозначаются NumTracks. Естественно, что для файлов типа 0 значение NumTracks всегда равно 1. Для двух оставшихся типов возможны другие значения.
Оставшиеся два байта указывают величину временного разрешения, то есть количество временных импульсов (временных тиков), приходящихся на одну четвертную длительность, что в виде аббревиатуры английских слов обозначается как PPQN. Например, если ваш секвенвер использует 96 ppqn, то соответствующее поле в заголовке записи будет иметь шестнадцатеричное значение 00 60.
Напротив, если первый байт рассматриваемого поля заголовка отрицателен, то соответствующий формат использует стандарт SMPTE вместо стандарта PPQT. В этом случае первый байт поля временного разрешения принимает значения −24, −25, −29 или −30, что соответствует четырём стандартным типам в стандарте SMPTE. Второй байт (положительная величина) указывает величину разрешения во фрейме. Стандартные величины разрешения фрейма представляют собой 4 (временной код MIDI), 8, 10, 80 (SMPTE) или 100.
Задавая значения фреймов −25 и величину внутрифреймового разрешения 40, можно установить значение временного разрешения длительностью в миллисекунду.
Ниже приводится пример целой записи типа MThd, включая её заголовок:
Запись MTrk.
За записью MThd следует MTrk запись. Это единственный тип записи, отличающийся от MThd записи, который определен для MIDI-файлов в настоящее время. Если по какой-либо причине в файле содержится идентификатор какой-либо записи другого типа, то, вероятно, эта запись создана для какой-либо другой программы, и эта запись должна быть проигнорирована в соответствии с указанной в её заголовке длиной данной записи.
MTrk запись содержит в себе MIDI-данные и байты временных меток, а также необязательную информацию. Эти данные относятся к одному треку. Очевидно, что количество MTrk записей в файле должно совпадать со значением NumTracks, указанном в записи MThd.
Заголовок записи MTrk начинается с идентификатора записи, который представляет собой четыре ASCII-байта 'M', 'T', 'r', 'k', за которым следует значение длины записи, то есть число, равное количеству байтов в данной записи. Для различных треков значения длин MTrk записей могут быть различны. (Например, трек, содержащий партию скрипки из Концерта Баха, по всей видимости будет содержать больше данных, чем трек, содержащий басовую партию, в которой на один такт приходится лишь две ноты.)
Величины переменной длины — Временные метки событий
Трек в MIDI-файле аналогичен треку в MIDI-секвенсоре. Трек секвенсора содержит последовательность событий. Например, первым событием может быть взятие ноты «до» первой октавы. Вторым событием может быть взятие ноты «ми» терцией выше. Эти два события могут произойти в одно и то же время. Третьим событием может быть снятие ноты «до». Это событие может произойти несколькими долями позже после первого события (то есть звук «до» будет снят спустя несколько долей после того, как он был взят). Для каждого события указывается его время, именно в этот момент времени событие происходит. Все события организованы в пределах одной записи в памяти секвенсора в порядке их появления во времени.
В MIDI-файле время события указывается перед байтами данных, которые описывают само событие. Иными словами, временна́я метка события предшествует описанию события. Например, если первое событие происходит спустя 4 временных интервала (временной интервал устанавливается в MThd записи) после начала воспроизведения, то соответствующее ему значение «дельта» — значение промежутка времени — устанавливается равным 04. Если следующее событие происходит одновременно с этим первым событием, то значение его времении дельта равно 00. Таким образом, время дельта — это длительность, выраженная в элементарных временных интервалах, между данным событием и ему предшествующим событием.
Поскольку предполагается, что все треки начинают воспроизводиться с момента времени равного 0, то время дельта первого события становится равным 0.
Значения времен дельта хранятся в виде последовательностей байтов, которые носят название величин переменной длины. Лишь первые 7 бит каждого байта являются значимыми для определения дельта времени. Если время дельта выражено в виде набора 32 бит, то необходимо распаковать эту 4-байтовую величину, выделив последовательность четырёх 7-битных значимых байтов (наподобие того, как это делается для передачи SYSEX сообщений в рамках протокола MIDI). В зависимости от величины времени дельта, количество байтов может быть различным. Для того, чтобы отметить последний байт в последовательности этих байтов, необходимо оставить 7-й бит этого последнего байта чистым (старший бит равен 0). Так, если время дельта находится в пределах от 0 до 127, то оно может быть выражено одним единственным байтом. Самое большое время дельта устанавливается в размере 0FFFFFFF, для записи такого времени потребуется величина переменной длины размером 4 байта. Так могут выглядеть величины переменной длины для разных значений времен дельта (время дельта выражено в виде 32-битного значения):
Время дельта Соответствующая величина переменной длины
Отметим, что использование значений переменной длины, то есть разбиение большой величины на последовательность байтов, не ограничивается случаем с временами дельта. Значения переменный длины используются в MIDI-файлах и в других случаях.
События.
Первые байты (байт 1 или байты с 1 по 4) записи MTrk задают значение времени дельта для первого события в формате величины переменной длины. Следующий за этой величиной байт данных представляет собой первый байт события MIDI. Это байт носит название байта статуса события или байта текущего MIDI-статуса. Для MIDI-событий он представляет собой статус байт данного события. Например, если этот байт равен 0x90, то данное событие — это событие Взять Ноту на MIDI-канале 0. Или, если этот байт равен 0x23, то необходимо обратиться к статус байту предыдущего события. Очевидно, что первое MIDI-событие в MTrk записи обязательно должно содержать в себе статус байт. После статус байта следуют один или два байта данных, в зависимости от типа события. После этих байтов данных находится следующее значение времени дельта (в виде величины переменной длины), и начинается процесс прочтения следующего события.
Особый случай представляют собой сообщения SYSEX, имеющие статус байт, равный F0. События SYSEX могут иметь любую длину. После статус байта F0 следует последовательность значений переменной длины. Можно получить 32-битовое значение, которое равно количеству следующих далее байтов, образующих SYSEX-событие. Эта длина не включает в себя статус байт (F0).
Рассмотрим в качестве примера следующее SYSEX-событие MIDI:
В MIDI-файле такое событие будет сохранено в виде следующей последовательности байтов (исключая время дельта, предшествующее событию):
Статус байт FF зарезервирован для использования в качестве статуса события, не являющегося MIDI-событием. За байтом FF следует другой байт, указывающий какой тип не-MIDI события описывается в данном событии. Это своеобразный второй статус байт. За этим байтом следует величина переменной длины, которая показывает, какое количество байтов содержится в данном событии. то есть задает длину события. Длина не включает в себя начальный статус байт FF, байт типа события, байты длины события. Это особое сообщение, не принадлежащее протоколу MIDI, носит название мета-события. Ниже описаны некоторые мета-события. Если не указано обратное, в записи MTrk может быть размещено более одного мета-события, причём одно и то же мета-событие может быть размещено в одной записи более одного раза. Мета-события могут иметь произвольные временные метки (времена дельта). Как и все MIDI-события, мета-события имеют дельта времена (временные метки), которые указывают промежуток времени, разделяющий данное MIDI-событие или мета-событие от предшествующего, независимо от того, является это событие MIDI-событием или мета-событием. Таким образом, мы можем произвольно смешивать MIDI-события и мета-события.
Номер последовательности (записи).
 FF 00 02 ss ss
Это необязательное мета-событие должно находиться в самом начале MTrk записи перед первой ненулевой временной меткой или перед первым событием. Это мета-событие устанавливает номер последовательности (номер записи) Два байта данных ss ss соответствуют данным в MIDI-сообщении MIDI Cue. В MIDI-файлах второго типа эти числа определяют номера каждого паттерна (или MTrk записи) таким образом, что последовательность пьес, содержащихся в файле может быть управляема при помощи сообщения MIDI Cue/ Если байты ss ss опущены (длина данного мета-сообщения равна 0 вместо 2), то номера MTrk записей устанавливаются в порядке того, как они записаны в файле (первая MTrk соответствует первому треку и т. д.) Файлы нулевого и первого типов, которые содержат единственный паттерн могут содержать мета-сообщение номера последовательности только в первой MTrk записи. Несколько Файлов первого типа, содержащих различные номера последовательностей могут рассматриваться как коллекции независимых пьес.
Можно использовать только одно мета-сообщение номера последовательности для каждого MTrk записи в файле формата 2. Можно использовать только одно мета-сообщение номера последовательности в файле формата 0 им формата 1, и это мета-сообщение должно находиться в первой MTrk записи.
Текст.
 FF 01 len text
Это мета-событие содержит любой объём текста любого назначения. Значение len содержит длину текстового сообщения в байтах. Наиболее удобно помещать такие мета-сообщения в начале MTrk записи. Несмотря на то, что записываемый текст может быть использован в любых целях, необходимо иметь в виду, что предусмотрены также и иные текстовые мета-сообщения, которые специально предназначены для указания инструментов оркестра, слов песен, названий треков и другие. Данное мета-событие главным образом предназначено для добавления комментариев к MIDI-файлу, предполагается, что при загрузке файлов эти комментарии будут проигнорированы.
Отметим, что величина len представляется в виде значения переменной длины.
Мета-событие Copyright.
 FF 02 len text
Текстовое мета-событие copyright наиболее удобно помещать в начале MTrk записи
Отметим, что величина len представляется в виде значения переменной длины.
Имя последовательности/Имя трека.
 FF 03 len text
Текстовое мета-событие, содержащее название MIDI-последовательности или трека. Удобно располагать это мета-событие в начале MTrk записи.
Отметим, что величина len представляется в виде значения переменной длины.
Инструмент.
 FF 04 len text
Текстовое мета-событие, содержащее название инструмента, исполняющего данный трек. Название инструмента может отличаться от названия самого трека. Например, название трека может быть, скажем, «Ария Ленского», а название инструмента может указывать на голос и содержать значение «Тенор».
Наиболее удобно располагать одно или несколько мета-событий подобного типа в самом начале MTrk записи, поскольку эти события несут вспомогательную информацию, которая информирует пользователя о том, какой инструмент исполняет данный трек, а также сообщают другие полезные данные. Обычно реальные параметры, задающие тип инструмента, исполняющего трек, хранятся в файле в виде MIDI-событий типа MIDI Program Change, а описанные здесь мета-события позволяют снабдить пользователя удобно читаемыми описаниями, соответствующими сделанным в MTrk записях конфигурациям.
Отметим, что величина len представляется в виде значения переменной длины.
Слова.
 FF 05 len text
Текстовое мета-событие, содержащее слова вокального произведения, приходящиеся на ту или иную музыкальную долю. Одно мета-событие «Слова» должно содержать один единственный слог текста.
Отметим, что величина len представляется в виде значения переменной длины.
Маркер.
 FF 06 len text
Текстовое мета-событие Маркер устанавливается на определенной музыкальной доле. Это событие может использоваться для организации петель и может обозначать начальную и конечную точку петли.
Отметим, что величина len представляется в виде значения переменной длины.
Точка входа Cue Point.
 FF 07 len text
Текстовое мета-событие «точка входа» может использоваться для обозначения точки входа внешнего потока данных, например точки начала воспроизведения файла с цифровым звуком. Текстовое значение данного мета-события может содержать имя WAV файла, содержащего цифровой звук.
Отметим, что величина len представляется в виде значения переменной длины.
Канал MIDI.
 FF 20 01 cc
Это необязательное мета-событие обычно располагается в начале MTrk сообщения перед первой ненулевой временной меткой и перед первым мета-событием, исключая мета-событие номера последовательности. Мета-событие «канал MIDI» устанавливает значение MIDI-канала с которым будут связаны все последующие мета-события и события SYSEX. Байт данных cc — это номер MIDI-канала, величине 0 соответствует первый канал.
Спецификация MIDI не предусматривает указание номера канала для SYSEX событий и мета-событий. Если создается файл типа 0, то все SYSEX события и мета-события находятся на одном треке и затруднительно распределить эти события между соответствующими канальными (голосовыми) сообщениями (например, если вы хотите обозначить партию канала 1 как «Флейта соло», а партию канала 2 как «Труба соло», то вам придётся использовать два мета-события «Имя трека» для введения этих названий, но поскольку оба этих трека расположены на одном канале, то перед первым мета-сообщением имени трека необходимо поместить мета-сообщение «канал MIDI», в котором указать номер соответствующего канала, а перед вторым мета-сообщением имени трека поместить мета-сообщение канала MIDI с указанием номера второго канала.
На одном MIDI-треке можно использовать более одного мета-сообщения «канал MIDI», если события этого трека нужно распределить между несколькими каналами MIDI.
Порт MIDI.
 FF 21 01 pp
Это необязательное событие, которое как правило располагается в начале записи MTrk перед первым ненулевым временем дельта и перед первым MIDI-событием, которое определяет, с каким MIDI-портом (или устройством) связаны события данного MTrk сообщения. Байт данных pp — это номер порта, нулевому значению pp соответствует первое MIDI-устройство в системе.
Спецификация MIDI предусматривает лишь 16 каналов на один входной или выходной порт (устройство, разъем, инструмент — терминология может быть различной) MIDI. Номер MIDI-канала каждого события MIDI содержится в статус байте события, где он занимает четыре младших бита. Таким образом, номер канала всегда представляет собой число в пределах от 0 до 15. Иногда система позволяет осуществлять работу более чем с 16 каналами MIDI, возникает необходимость преодолеть ограничения, накладываемые малым количеством каналов MIDI, и расширить возможности обмена MIDI-данными, сделать обмен информацией со внешними MIDI-устройствами более эффективным, то есть позволить музыканту работать более чем с 16 каналами. Некоторые секвенсоры также позволяют осуществлять работу более чем с 16 MIDI-каналами на входе и выходе одновременно. К сожалению, протокол MIDI не предусматривает возможность использования более чем 16 MIDI-каналов в рамках статус байта в событии MIDI. Поэтому необходим дополнительный метод, который позволяет различать события, которые соответствуют первому каналу на первом MIDI-порте от событий, соответствующих, скажем, первому каналу на втором MIDI-порте. Описываемой мета-событие позволяет секвенсору определить на какой MIDI-порт посылать события данного MTrk сообщения.
Допускается располагать более одного мета-события «Порт MIDI» в пределах одного MIDI-трека, если требуется изменить значение MIDI-порта в определенный момент времени.
Темп.
 FF 51 03 tt tt tt
Это событие указывает на изменение темпа. 3 байта данных tt tt tt определяют темп в микросекундах в четвертной ноте. Другими словами, значение темпа (мкс) говорит вам, сколько времени должна звучать каждая из «четвертных нот». Если tt tt tt = 07 А1 20, то каждая четвертная нота должна иметь длительность 07 А1 20 (или 500 000) микросекунд. (Проверьте вашим калькулятором Windows в научном режиме). Как правило, музыканты выражают темп как «сумму четвертных нот в каждую минуту (то есть период времени)». Это полностью противоположно тому, как формат MIDI выражает его. Чтобы преобразовать темп в MIDI формат (BPM — ударов в минуту): BPM = 60000000 / (tt tt tt). Например, темп 120 BPM = 07 А1 20 микросекунд за четвертную ноту. ПРИМЕЧАНИЕ: Если темп не определен, по умолчанию предполагается значение 120 BPM.
SMPTE Offset.
FF 54 05 hr mn se fr ff
Назначает SMPTE время начала (часы, минуты, секунды, кадры, субкадры) трека MIDI.
Time Signature (размер).
FF 58 04 nn dd cc bb
Музыкальный размер задаётся четырьмя байтами.
• nn и dd — соответственно числитель и знаменатель в нотной записи.
Знаменатель вычисляется как двойка в степени dd. (dd = 2: 1/4; dd = 3: 1/8 и т. д.)
• cc expresses the number of MIDI clocks in a metronome click.
• bb expresses the number of notated 32nd notes in a MIDI quarter note (24 MIDI clocks).
This event allows a program to relate what MIDI thinks of as a quarter, to something entirely different. For example, 6/8 time with a metronome click every 3 eighth notes and 24 clocks per quarter note would be the following event: FF 58 04 06 03 18 08
NOTE:
• If no Time Signature is defined, the default value 4/4 is assumed.
• Time Signature can only be redefined at measure beginnings.
Key Signature (тональность).
FF 59 02 sf mi
• sf = −7 для 7 бемолей, −1 для 1 бемоля и т. д., 0 для до-мажора или натурального ля-минора, 1 для 1 диеза и т. д.
• mi = 0 для мажора, 1 для минора.
Конец трека.
 FF 2F 00
Это событие является обязательным. Оно обязано быть последним событием каждой MTrk записи. Оно представляет собой явное обозначение конца MTrk записи. Допускается использование единственного мета-события «Конец трека» для каждой MTrk записи.
Улучшение звучания MIDI.
Файлы MIDI являются набором команд для синтезатора (секвенсора), установленного на компьютере, но не несут в себе готовых для воспроизведения аудиоданных.
Часто звучание установленного по умолчанию на компьютере «Программного синтезатора» не устраивает пользователя (из-за качества семплов в «банке звуков» синтезатора). Для улучшения звука можно установить другой MIDI-синтезатор с банком лучшего качества, или же использующий отличный от волнового способ формирования звука, например, физический.
Преобразование в MIDI.
Для преобразования музыкальных записей в команды MIDI существуют различные программы. В качестве исходных могут использоваться как WAV-файлы, так и файлы формата MP3, дорожки Audio CD, а также непосредственно поступающий с микрофона звук без записи его в файл. Некоторые программы умеют распознавать полифоническую музыку, то есть содержащую много голосов. Для улучшения качества распознавания в некоторых программах можно использовать встроенный нотный редактор.

</doc>
<doc id="959" url="?curid=959" title="MP3">
MP3

MP3 (более точно, ; но не "MPEG-3") — кодек третьего уровня, разработанный командой MPEG, лицензируемый формат файла для хранения аудиоинформации.
MP3 является одним из самых распространённых и популярных форматов цифрового кодирования звуковой информации с потерями. Он широко используется в файлообменных сетях для оценочной передачи музыкальных произведений. Формат может проигрываться практически во всех популярных операционных системах, на большинстве портативных аудиоплееров, а также поддерживается всеми современными моделями музыкальных центров и DVD-плееров.
В формате MP3 используется алгоритм сжатия с потерями, разработанный для существенного уменьшения размера данных, необходимых для воспроизведения записи и обеспечения качества воспроизведения звука, близкого к оригинальному (по мнению большинства слушателей), но с ощутимыми потерями качества при прослушивании на качественной звуковой системе. При создании MP3 со средним битрейтом 128 кбит/с в результате получается файл, размер которого примерно равен 1/11 от оригинального файла с CD-Audio. Само по себе несжатое аудио формата CD-Audio имеет битрейт 1411,2 кбит/с. MP3-файлы могут создаваться с высоким или низким битрейтом, который влияет на качество файла-результата. Принцип сжатия заключается в снижении точности некоторых частей звукового потока, что практически неразличимо для слуха на повсеместно распространённой аппаратуре низкой точности воспроизведения звука (например, доминирующее большинство портативных устройств, звуковых карт, музыкальных центров, автомагнитол и прочей не специальной аппаратуры), а также для людей старшего возраста, в связи с естественными возрастными изменениями слухового аппарата, однако в большинстве случаев чётко различимы на специальной аппаратуре высокой точности воспроизведения. Данный метод называют кодированием восприятия. При этом на первом этапе строится диаграмма звука в виде последовательности коротких промежутков времени, затем на ней удаляется информация, не различимая человеческим ухом, а оставшаяся информация сохраняется в компактном виде. Данный подход похож на метод сжатия, используемый при сжатии картинок в формат JPEG.
История.
MP3 разработан рабочей группой института Фраунгофера () под руководством Карлхайнца Бранденбурга и университета Эрланген-Нюрнберг в сотрудничестве с AT&amp;T Bell Labs и Thomson (Джонсон, Штолл, Деери и др.).
Основой разработки MP3 послужил экспериментальный кодек ASPEC (Adaptive Spectral Perceptual Entropy Coding). Первым кодировщиком в формат MP3 стала программа L3Enc, выпущенная летом 1994 года. Спустя один год появился первый программный MP3-плеер — Winplay3.
При разработке алгоритма тесты проводились на вполне конкретных популярных композициях. Основной стала песня Сюзанны Веги «Tom’s Diner». Отсюда возникла шутка, что «MP3 был создан исключительно ради комфортного прослушивания любимой песни Бранденбурга», а Вегу стали называть «мамой MP3».
Описание формата.
Как и формат JPEG, MP3 использует спектральные отсечения, согласно психоакустической модели. Звуковой сигнал разбивается на равные по продолжительности отрезки, каждый из которых после обработки упаковывается в свой фрейм (кадр). Разложение в спектр требует непрерывности входного сигнала, в связи с этим для расчётов используется также предыдущий и следующий фрейм. В звуковом сигнале есть гармоники с меньшей амплитудой и гармоники, лежащие вблизи более интенсивных — такие гармоники отсекаются, так как среднестатистическое человеческое ухо не всегда сможет определить присутствие либо отсутствие таких гармоник. Такая особенность слуха называется эффектом маскировки. Также возможна замена двух и более близлежащих пиков одним усреднённым (что, как правило, и приводит к искажению звука). Критерий отсечения определяется требованием к выходному потоку. Поскольку весь спектр актуален, высокочастотные гармоники не отсекаются, как в JPEG, а только выборочно удаляются, чтобы уменьшить поток информации за счёт разрежения спектра. После спектральной «зачистки» применяются математические методы сжатия и упаковка во фреймы.
Каждый фрейм может иметь несколько контейнеров, что позволяет хранить информацию о нескольких потоках (левый и правый канал либо центральный канал и разница каналов).
Степень сжатия можно варьировать, в том числе в пределах одного фрейма. Интервал возможных значений битрейта составляет 8-320 кбит/c.
MP3 и «качество Audio-CD».
В прошлом было распространено мнение, что запись с битрейтом 128 кбит/c подходит для музыкальных произведений, предназначенных для прослушивания большинством людей, обеспечивая качество звучания Audio-CD. В действительности всё намного сложнее. Во-первых, качество полученного MP3 зависит не только от битрейта, но и от кодирующей программы (кодека) (стандарт не устанавливает алгоритм кодирования, только описывает способ представления). Во-вторых, помимо превалирующего режима CBR (Constant Bitrate — постоянный битрейт) (в котором, проще говоря, каждая секунда аудио кодируется одинаковым числом бит) существуют режимы ABR (Average Bitrate — усреднённый битрейт) и VBR (Variable Bitrate — переменный битрейт). В-третьих, граница 128 кбит/c является условной, так как она была «изобретена» в эпоху становления формата, когда качество воспроизведения звуковых плат и компьютерных колонок, как правило, было ниже, чем в настоящее время.
На данный момент наиболее часто встречаются MP3-файлы с битрейтом 192 кбит/c, что может косвенно говорить о том, что большинство считает этот битрейт достаточным. Реально воспринимаемое «качество» зависит от исходного аудиофайла, слушателя и его аудиосистемы. Некоторые меломаны предпочитают сжимать музыку с «максимальным качеством» — 320 кбит/c, либо даже переходить на кодеки без потерь, например, FLAC. Также среди меломанов бытует мнение, что некоторые семплы (фрагменты аудиозаписи) не поддаются качественному сжатию с потерями: на всех возможных битрейтах не составляет особого труда отличить сжатое аудио от оригинала. Однако есть и серьёзные возражения:
Совершенно очевидно, что (возьмём с запасом) битрейта 256 kbps в подавляющем большинстве случаев должно быть более чем достаточно для комфортного восприятия музыки с CDA-источника (44 kHz/16 bit/stereo). Это очевидно не только из моего доморощенного теста, но и по анализу профессиональных слепых тестов (например, германского издания «c’t», июнь 2000 г.): даже в них экспертам не всегда удается «угадать» сжатый до 256 kbps звук, причём тестирование проходит в специально подготовленных помещениях и на дорогом оборудовании, а эксперт знает, что надо «слушать», чтобы почувствовать сжатие.
Режимы кодирования и опции.
Существует три версии MP3 формата для различных нужд: MPEG-1, MPEG-2 и MPEG-2.5. Отличаются они возможными диапазонами битрейта и частоты дискретизации:
Режимы управления кодированием звуковых каналов.
Так как формат MP3 поддерживает двухканальное кодирование (стерео), существует 4 режима:
CBR.
"CBR" расшифровывается как "Constant Bit Rate", то есть "постоянный битрейт", который задаётся пользователем и не изменяется при кодировании произведения. Таким образом, каждой секунде произведения соответствует одинаковое количество закодированных бит данных (даже при кодировании тишины). "CBR" может быть полезен для потоков мультимедиа-данных по ограниченному каналу; в таком случае кодирование использует все возможности канала данных. Для хранения данный режим кодирования не является оптимальным, так как он не может выделить достаточно места для сложных отрезков исходного произведения, при этом бесполезно тратя место на простых отрезках. Повышенные битрейты (выше 256 кбит/c) могут решить данную проблему, выделив больше места для данных, но зато и пропорционально увеличивая размер файла.
VBR.
"VBR" расшифровывается как "Variable Bit Rate", то есть "изменяющийся битрейт" или "переменный битрейт", который динамически изменяется программой-кодером при кодировании в зависимости от насыщенности кодируемого аудиоматериала и установленного пользователем качества кодирования (например, тишина закодируется с минимальным битрейтом). Этот метод MP3-кодирования является самым прогрессивным и до сих пор развивается и улучшается, так как аудиоматериал разной насыщенности может быть закодирован с определённым качеством, которое обычно выше, чем при установке среднего значения в методе CBR. Плюс к тому, размер файла уменьшается за счёт фрагментов, не требующих высокого битрейта. Минусом данного метода кодирования является сложность предсказания размера выходного файла. Но этот недостаток VBR-кодирования незначителен в сравнении с его достоинствами. Также минусом является то, что VBR считает «незначительной» звуковой информацией более тихие фрагменты, таким образом получается, что если слушать очень громко, то эти фрагменты будут некачественными, в то время как CBR делает с одинаковым битрейтом и тихие, и громкие фрагменты.
Формат VBR постоянно улучшается, благодаря постоянному совершенствованию математической модели кодеков, в частности, после выхода обновлённой версии свободного MP3-кодека LAME (версия 3.99.3), кодирование с переменным битрейтом, по заявлению разработчиков, качественно лучше CBR и тем более ABR. Однако формат CBR 320 кбит/c всё ещё позиционируется как гарантирующий максимальное качество (например он используется в пресете "--preset insane"). 
ABR.
"ABR" расшифровывается как "Average Bit Rate", то есть "усредненный битрейт", который является гибридом VBR и CBR: битрейт в кбит/c задаётся пользователем, а программа варьирует его, постоянно подгоняя под заданный битрейт. Таким образом, кодек будет с осторожностью использовать максимально и минимально возможные значения битрейта, так как рискует не вписаться в заданный пользователем битрейт. Это является явным минусом данного метода, так как сказывается на качестве выходного файла, которое будет немного лучше, чем при использовании CBR, но хуже, чем при использовании VBR. С другой стороны, этот метод позволяет наиболее гибко задавать битрейт (может быть любым числом между 8 и 320, против исключительно кратных 16 чисел метода CBR) и вычислять размер выходного файла.
Кодеки.
Типы программ, необходимые для преобразования форматов файлов. Наиболее распространённые кодеки MP3:
Структура файла.
MP3-файл состоит из нескольких фрагментов (фреймов) MP3, которые, в свою очередь, состоят из заголовка и блока данных. Такая последовательность фрагментов называется элементарным потоком. Фрагменты не являются независимыми элементами («резервуар байт»), и поэтому не могут быть извлечены произвольно. Блок данных MP3-файла содержит сжатую аудиоинформацию в виде частот и амплитуд. На приведённой диаграмме показано, что заголовок MP3 состоит из маркера, который служит для нахождения верного MP3-фрагмента. За ним следует бит, показывающий, что используется стандарт MPEG, и два бита, показывающие использование layer 3; другими словами, это определяет MPEG-1 Audio Layer 3 или MP3. Последующие значения могут варьироваться в зависимости от типа MP3-файла. Стандарт "ISO/IEC 11172-3" определяет диапазон значений для каждой секции заголовка, вместе с общей его спецификацией. Большинство MP3-файлов в настоящий момент содержат ID3-метаданные, которые предшествуют или следуют за MP3-фрагментом; они также отображены на диаграмме.
Теги.
Теги (от  — ярлык, метка, бирка) — метки в границах MP3-файла (в начале и/или в конце). В них может быть записана информация об авторстве, альбоме, годе выпуска, обложек альбомов и текстов песен и прочая информация о треке. В более поздних версиях тегов возможно хранение прочих данных о звуковой записи. Существуют различные версии тегов (см.: ID3).
Недостатки.
"Технические недостатки." Количество каналов звука ограничено двумя, в отличие от AAC и Vorbis.
"Юридические ограничения." Патентом на MP3 владеет компания Alcatel-Lucent, которая требует лицензирования некоторых способов использования формата. Срок действия связанных с MP3 патентов истекает в 2007—2017 годах. Почти полный стандарт появился в открытом доступе 6 декабря 1991 года. В США изобретения, публично раскрытые более года, не могут быть запатентованы. Однако для патентов, оформленных до 8 июня 1995 года, существовала возможность увеличить их сроки действия. Известные патенты, касающиеся расшифровки MP3, прекратили действие в США к декабрю 2012; по другим данным, если учитывать только патенты, заявка на которые была подана до декабря 1992 года, это может произойти в сентябре 2015 года.

</doc>
<doc id="965" url="?curid=965" title="NTP">
NTP

NTP ( — протокол сетевого времени) — сетевой протокол для синхронизации внутренних часов компьютера с использованием сетей с переменной латентностью. Протокол был разработан , профессором Делавэрского университета, в 1985 году. Версия на 2015 год — NTPv4.
NTP, основанный на алгоритме Марзулло, использует для своей работы протокол UDP и учитывает время передачи. Система NTP чрезвычайно устойчива к изменениям латентности среды передачи. В версии 4 способен достигать точности 10 мс (1/100 с) при работе через Интернет, и до 0,2 мс (1/5000 с) и лучше внутри локальных сетей.
Наиболее широкое применение протокол NTP находит для синхронизации серверов точного времени. Для достижения максимальной точности предпочтительна постоянная работа программного обеспечения NTP в режиме системной службы. В семействе операционных систем Microsoft Windows — это служба W32Time, Linux — сервис Ntpd .
Более простая реализация этого алгоритма известна как SNTP — простой протокол сетевого времени. Используется во встраиваемых системах и устройствах, не требующих высокой точности, а также в пользовательских программах точного времени.
Структура пакета.
Структура пакета описана в RFC 5905. Пакет состоит из целого числа 32-битных слов.
Данные в заголовке будут отличаться для различных режимов работы. Например, клиент в поля "часовой слой", "идентификатор источника", "начальное время" и "время приёма" должен записать нули.
NTP-сообщение «Kiss-o'-Death».
Для слоя 0, который считается неопределённым или недопустимым, поле "Идентификатор источника" может использоваться для доставки сообщений, которые выполняют роль данных о состоянии системы и управления доступом. Такие сообщения называются «Kiss-o'-Death» (KoD), а доставляемые ими ASCII-данные называются «kiss codes» (коды «помощи»). Перечень принятых в настоящее время кодов «помощи» представлен в таблице ниже.
Получатели KoD-сообщений обязаны их проверить и выполнить следующие действия:
Часовые слои.
NTP использует иерархическую сеть, где каждый уровень имеет свой номер, называемый слой. Слой 1 — первичные серверы, непосредственно синхронизирующиеся с национальными службами времени через спутник, радио или телефонный модем. Слой 2 — вторичные серверы, синхронизируются с первичными серверами, и т.д. Как правило, клиенты и серверы NTP с относительно небольшим числом клиентов не синхронизируется с первичными серверами. Существует несколько сотен общественных вторичных серверов, работающих на более высоких слоях. Они являются предпочтительным выбором. 
Формат времени.
Время представляется в системе NTP 64-битным числом (8 байт), состоящим из 32-битного счётчика секунд и 32-битного счётчика долей секунды, позволяя передавать время в диапазоне 2 секунд, с теоретической точностью 2 секунды. Поскольку шкала времени в NTP повторяется каждые 2 секунды (136 лет), получатель должен хотя бы примерно знать текущее время (с точностью 50 лет). Также следует учитывать, что время отсчитывается с полуночи 1 января 1900 года, а не с 1970, поэтому из времени NTP нужно вычитать почти 70 лет (с учётом високосных лет), чтобы корректно совместить время с Windows или Unix-системами.

</doc>
<doc id="967" url="?curid=967" title="Napster">
Napster

Napster (New artist program) — файлообменная пиринговая сеть, созданная Шоном Фэннингом (при участии Шона Паркера и Джордана Риттера) и действовавшая в период с июня 1999 года. Фаннинг хотел найти более лёгкий способ обмениваться музыкой в формате MP3, чем посредством IRC или Lycos. После рассмотрения всех аспектов деятельности компании Джоном Фанингом, дядей Шона, последний получил 30 % акций компании. Остальное отошло к его дяде.
Napster являлась peer-to-peer сетью, хотя и использовала централизованное управление для получения списка подключенных компьютеров и их списка предоставляемых файлов, так как обмен файлами происходил непосредственно без участия центрального сервера. Такой принцип работы очень похож на протокол IRC. Хотя и существовали сети, облегчающие обмен файлами (напр., IRC, Hotline, USENET), Napster специализировалась исключительно на музыке в формате MP3 и предоставляла удобный интерфейс. Результатом стала система, чья популярность генерировала огромный выбор музыки для скачивания.
Хотя музыкальная индустрия провозгласила обмен музыкой посредством p2p-сетей воровством, многие пользователи Napster считали такие закачки оправданными по многим причинам. Многие считали, что к середине 90-х качество новых альбомов снизилось к уровню, когда типичный альбом содержал только одну-две хорошие песни и «музыкальный наполнитель» — песни-пустышки. Поэтому они были благодарны Napster за возможность скачать несколько песен без необходимости платить за весь альбом. Также Napster предоставлял прекрасную возможность меломанам обмениваться песнями, которые сложно найти — старыми записями и песнями с концертов, бутлегами. Также у пользователей появилась возможность скачать музыку, которую они приобрели до популяризации компакт-дисков (например, на виниловых пластинках, кассетах), в оцифрованном виде.
Закрытие.
Причиной закрытия Napster стало появление в 2000 г. демо-версии песни «I Disappear» группы Metallica за несколько дней до её официального выхода. Это не понравилось участникам группы, в особенности барабанщику Ларсу Ульриху, по чьей инициативе и был составлен иск против компании. Музыканты затеяли судебную тяжбу с Napster, заодно вчинив иск университетам Южной Калифорнии, Йеля и Индианы за то, что их руководство не воспрепятствовало бесплатному распространению. В итоге, в 2001 году Metallica и Napster пришли к некоторому соглашению.
После предложения о покупке за 2,43 млн долларов контрольного пакета акций, сделанного компанией развлечений для взрослых Private Media Group, бренд и логотипы были приобретены на аукционе банкротов компанией Roxio, Inc, которая использовала их для преобразования музыкального интернет-сервиса Pressplay в платный сервис Napster 2.0.
Napster сегодня.
В сентябре 2008 года музыкальный сервис Napster был выкуплен американской компанией Rhapsody. Сейчас по ссылке на официальный сайт, пользователя перебросит на платный музыкальный сервис Rhapsody.

</doc>
<doc id="969" url="?curid=969" title="OS/2">
OS/2

OS/2 — операционная система фирмы IBM, в определённый период времени разрабатывавшаяся с участием Microsoft.
История системы.
1 августа 1984 года IBM объявила о выпуске нового поколения персональных компьютеров — IBM PC/AT, и приступила к разработке новой операционной системы для этих машин. Новая ОС должна была преодолеть ограничение DOS на 640 Кб памяти для прикладных программ и реализовать поддержку режима многозадачности. Параллельно с разработкой Windows корпорация Microsoft вместе с IBM включилась в активную работу по созданию системы, получившей наименование OS/2. Однако в начале 1990-х годов пути двух гигантов IT-индустрии разошлись. Microsoft независимо от IBM начинает разработку Windows 3.0. IBM, независимо от Microsoft, разворачивает работу над облегчённой версией OS/2, которая требовала бы меньше ресурсов, чем OS/2 1.2.
Были полностью переписаны ядро и драйверы, добавлены стеки TCP/IP и USB.
Версии.
OS/2 v0.99 — бета-версия.
Предназначена для отладочных целей, поставлялась почти без драйверов. Цель создания — конкуренция на рынке многозадачных оболочек для DOS, основным конкурентом считалась DESQview. Включает поддержку кооперативной многозадачности. Текстовый интерфейс, переключение экранов.
OS/2 v1.0 (декабрь 1987 года) — первая официальная версия.
Первая ОС с режимом многозадачности, использующим аппаратные средства процессоров 80286 и 80386 (защищённый режим). По-прежнему текстовый интерфейс. Взаимодействие с пользователем осуществляется только одной из запущенных программ, остальные выполняются в фоновом режиме. Максимально поддерживаемый объём дисков — 32 Мб. Нет поддержки мыши. Все версии OS/2 1.х разработаны для процессора 80286, но могут функционировать и на системах с процессором 80386.
OS/2 v1.10SE (Standard Edition) (октябрь 1988 года)
Дебют Presentation Manager (PM), реализующего функции графического интерфейса пользователя. Поддерживаются диски с файловой системой FAT16 объёмом до двух гигабайт.
OS/2 v1.10EE (Extended Edition) (начало 1989 года)
По сравнению со стандартной версией, эта версия была дополнена программами Database Manager (администратор баз данных) и Communications Manager (администратор связи с мэйнфреймами IBM).
OS/2 v1.20 (ноябрь 1989 года)
Включает улучшенный Presentation Manager, а версия EE — также новую файловую систему HPFS (High Performance File System), более эффективную, быструю и надёжную, чем FAT. Также добавлен интерпретатор языка программирования REXX.
В 1989 году было начато создание сразу двух новых версий OS/2:
OS/2 v1.30 (1991 год)
Увеличена скорость работы и надёжность по сравнению с предшествующими версиями. В комплект входит много новых драйверов устройств (однако меньше, чем в Windows). Интерпретатор REXX появился и в версии SE, добавлено кеширование записи на HPFS, поддержка видеорежима 1024×768 и шрифтов Adobe Type I.
OS/2 v2.00 (весна 1992 года)
Эта версия 32-разрядная (за исключением видеоподсистемы), продвигалась IBM под слоганом «лучшая DOS, чем MS-DOS, и лучшая Windows, чем Windows». Использование виртуальных DOS-машин (VDM) позволяет запускать сразу несколько DOS- и Windows-задач. Для запуска программ Windows используется Win-OS/2, основанная на лицензированной IBM Windows 3.1. Использование виртуальных машин позволило изолировать Windows и DOS-задачи, в результате чего сбои в программах не препятствовали продолжению выполнения других программ. Реализованы также такие механизмы межпрограммного взаимодействия, как динамический обмен данных (Dynamic Data Exchange) и буфер обмена.
Минимально необходимым для работы этой версии системы является процессор 80386, ядром системы используется его защищённый режим. DOS-приложения используют режим виртуального 8086. Для работы требуется объём оперативной памяти 8 мегабайт.
Также в эту версию включена оболочка рабочего стола Workplace Shell, предоставляющая функции объектно-ориентированного графического интерфейса пользователя.
OS/2 v2.10 (май 1993 года)
Ускорена загрузка, добавлена поддержка шрифтов TrueType в Win-OS/2, а также функции поддержки мультимедиа (Multimedia Presentation Manager, MMPM/2). Графическая подсистема стала 32-битной. Поддерживаются системы PCMCIA и APM BIOS, необходимые для портативных компьютеров; однако качество реализации драйверов невысокое. В конце 1993 года была также выпущена более дешёвая версия OS/2 2.11, устанавливающаяся поверх Windows 3.1.
Warp 3 (октябрь 1994 года) и её бета-версия OS/2 v2.99 (начало 1994 года)
Первоначально эта версия вышла под названием «OS/2 Warp for Windows» и устанавливалась как и OS/2 2.11 поверх Windows 3.1. Позже была выпущена версия, включающая Win-OS/2. Минимальные требования включают процессор 80386 и 4 мегабайта оперативной памяти. В комплект поставки включены дополнительные драйверы устройств. Улучшена поддержка печати, мультимедиа и PCMCIA, Workplace Shell. Появился новый элемент интерфейса — LaunchPad (панель для быстрого запуска программ).
Также доступны сервисы Интернет и TCP/IP. Warp 3 включает комплект доступа в Интернет (Internet Access Kit, IAK), в состав которого входит, помимо системного ПО, браузер Web Explorer, хотя большинство пользователей использовали Netscape. Доступна также поддержка FTP и электронной почты (но предназначенная для этого программа Ultimail Lite неудобна и работает с малой скоростью).
В комплект поставки входил компакт-диск BonusPak, на котором представлен офисный пакет IBM Works, включающий электронные таблицы, текстовый процессор, СУБД, генератор отчётов и программу построения диаграмм. Также в Bonus Pak включена программа для приёма/отправки факсов и некоторое другое ПО.
В том же году в IBM принято стратегическое решение о концентрации усилий по разработке не на x86-совместимых компьютерах, а на PowerPC, в число разработчиков которого входила сама IBM. Была создана концепция «Workplace OS», а также версия OS/2 для PowerPC.
Warp Connect (1995 год)
Включает сетевой инструментарий Warp Connect Peer для взаимодействия с LAN Server 4.0, позволяющий разделять между компьютерами, входящими в сеть, файлы, принтеры и модемы. В начале 1996 года был выпущен Warp Server, объединивший OS/2 Warp, LAN Server 4.0 (с добавлениями и исправлениями) и SystemView for OS/2. Этот комплект предназначен для создания файл-серверов и серверов печати. Представлены также службы удалённого доступа и резервного копирования. Warp Server поддерживает симметричную мультипроцессорность (SMP).
Warp 4 (Мерлин) (сентябрь 1996 года)
Переработан интерфейс Workplace Shell, добавлена поддержка выполнения программ на языке программирования Java, функции голосовой навигации и голосового ввода информации VoiceType Navigation and Dictation. Сетевые средства Warp 4 позволяли ей работать с большим количеством сетей: LAN Server, Windows, Novell Netware, PCLAN, IPX-SPX, LANtastic и т. д. Поддерживались протоколы TCP/IP, SNA, NetBIOS.
Также в состав этой версии ОС включены служба удалённого доступа LAN Distance, служба управления системой TME10 Netfinity с поддержкой Desktop Management Interface, сервис для мобильных пользователей Mobile Office Services.
Недостатками OS/2 в этот период являются малое количество программ сторонних разработчиков, особенно ориентированных на домашнего пользователя, в том числе игр. Причиной этого была политика IBM, не предпринимавшей особых усилий для того, чтобы побудить разработчиков создавать программы для OS/2.
Аврора — полуофициальное название серверной ветви OS/2, выпущенной следом за Warp 4 (Мерлин). Первоначально имела название "OS/2 Warp Server for e-Business" и была выпущена в апреле 1999 года (версия Warp 4.5). Иногда её неправильно называют "Warp 5". Добавлена поддержка журналируемой файловой системы JFS, поддерживается до 64 процессоров, обновлены практически все компоненты системы. Были выпущены также два пакета обновлений Aurora Convenience Pack: ACP1 (версия Warp 4.51) и ACP2 (версия Warp 4.52). В 2003 году вышел последний третий сервис-пак — ACP3 4.53, но компания IBM более не выпускала дистрибутивы со встроенным данным сервис-паком.
eComStation
Соревнование с Windows.
После того, как IBM и Microsoft разошлись в разные стороны, Microsoft переделала свою версию OS/2 в Windows NT, а сама OS/2 продолжала разрабатываться в фирме IBM, которая всё же не уделяла этой операционной системе должного внимания.
21 мая 1990 года вышла Windows 3.0. За первый месяц её копий было продано больше, чем копий OS/2 за целых три года. Microsoft занимает доминирующее положение на рынке офисного ПО для Windows.
В 1991 году Microsoft прекратила участие в разработке OS/2, разрабатываемая аппаратно-независимая ОС переименована из «OS/2, Version 3» в «Windows NT».
Версию OS/2 Warp 3 всерьёз рассматривали как достойного конкурента Windows, но версия 4 уже не претендовала на это из-за рекламной деятельности Microsoft. 26 октября 1996 года вышла следующая версия — OS/2 Warp 4.0 (Мерлин). В 1999 году появляется OS/2 Warp Server for e-business (кодовое название «Аврора», версия системы — 4.5).
Интересен также тот факт, что в процессе совместной работы специалисты Microsoft создавали для Windows существенно более удобный конечному пользователю код, относительно такового для OS/2 v1.10SE и OS/2 v1.20. Таков, в частности, весь код ядра и интерфейсов, относящийся к драйверам устройств.
Пример процедуры установки принтера в ранних версиях OS/2:
Microsoft, официально отказавшись от поддержки OS/2, продолжала внимательно следить за развитием этой операционной системы. Многие детали интерфейса OS/2 IBM и Microsoft перешли в новую ОС Microsoft — Windows 95.
Прекращение поддержки.
OS/2 приобрела некоторую популярность в среде корпоративных клиентов и сетевиков. И сегодня многие крупнейшие корпорации в Европе доверяют OS/2 управление своими компьютерными сетями, однако в России OS/2 не получила широкого распространения.
Особой популярностью в качестве домашней операционной системы OS/2 никогда не пользовалась, оставаясь в тени Windows, и, позднее, Windows NT. Тем не менее усилия как самой IBM, так и множества корпоративных и независимых разработчиков программного обеспечения не прошли даром — OS/2 являлась стабильной системой с предсказуемым поведением и хорошим набором системных и прикладных программ. При этом OS/2 представляла собой самостоятельную линию развития операционных систем, в своё время отличаясь от Windows NT существенно меньшими требованиями к аппаратным средствам, а от Linux — лучшей поддержкой программ для DOS и Win16.
Поддержка пользователей осуществлялась до 31 декабря 2006 года. После этого срока поддержка осуществляется только для тех пользователей, которые заключили дополнительный договор на обслуживание.
На постсоветском пространстве основные области использования OS/2 сводятся к следующему:
Некоторые особенности системы.
Файловая система.
В OS/2 реализован механизм подключаемых файловых систем (Installable File System, IFS). Это означает, что для работы с той или иной файловой системой нужно просто загрузить соответствующий драйвер. Штатная «высокопроизводительная файловая система» (HPFS — High Performance File System) поддерживает разделы диска до 64 гигабайт (это ограничение драйвера, сама файловая система поддерживает до двух терабайт) и позволяет использовать имена файлов длиной до 255 символов. HPFS экономно расходует дисковое пространство (размер кластера составляет 512 байт), крайне мало подвержена фрагментации и отличается стабильностью. В последних версиях OS/2 имеется менеджер логических томов (LVM), позволяющий объединять несколько физических разделов (в том числе находящихся на разных дисках) в единый том, и включена поддержка более быстрой журналируемой файловой системы JFS, поддерживающей тома больших объёмов (до двух терабайт).
Помимо входящих в поставку IFS для FAT, HPFS, JFS, ISO9660 (CDFS) и UDF существуют также монтируемые файловые системы сторонных производителей для VFAT, FAT32, EXT2, NTFS, HFS, AEFS и др.
Графический интерфейс пользователя.
В OS/2 в качестве штатного интерфейса используется Workplace Shell (WPS).
В отличие от Microsoft Windows, где графические и текстовые программы используют две разные кодировки («кодировка DOS» и «кодировка Windows»), в OS/2 везде используется кодировка DOS (для русской локализации — CP866). Исключение составляют приложения Windows, запускаемые под OS/2.
Поддержка Юникода, однако, в «родных» приложениях OS/2 практически отсутствует — в частности, в именах файлов, хотя файловая система JFS хранит их в Unicode (ср.: FAT32 в Windows).
Командная строка.
В отличие от Microsoft Windows, GUI в OS/2 можно не загружать, получая при этом работоспособную систему в режиме командной строки. Штатная оболочка может быть заменена на более продвинутый аналог (4os2 или портированные из юниксов sh, bash и т. п.). Это позволяет получить работоспособную систему на одной-двух дискетах.
REXX.
REXX — язык для написания скриптов. Это язык с весьма несложным синтаксисом, разработанный в IBM. Версия REXX для OS/2 позволяет писать как консольные, так и графические приложения, выполнять команды OS/2, а также обращаться к API OS/2. Помимо этого, многие программы имеют REXX-API, позволяющее создавать скрипты для управления работой этих программ (ср.: Visual Basic for Applications в Windows и Bash и т. п. в Linux).
TCP/IP.
OS/2 имеет юниксоподобный стек TCP/IP (последние версии являются полностью BSD4.4-совместимыми), с привычными для пользователей юниксов утилитами и демонами типа arp, ifconfig, netstat, ppp, telnetd, sendmail и т. д. Стек TCP/IP в OS/2 содержит клиента SOCKS и портированный из AIX файрвол.
Приложения DOS, Win16 и Win32.
OS/2 способна выполнять приложения DOS и Win16. К примеру, OS/2 позволяет загружать с дискеты или её образа на диске произвольную версию DOS или передавать в использование программе 736 Кб основной памяти. Для особо «капризных» программ существует различные параметры настройки, контролирующие практически все аспекты работы сессии DOS.
Приложения Windows могут быть запущены как в полноэкранной сессии Win-OS/2 (ничем не отличается от Windows 3.1), так и поверх рабочего стола OS/2. В Win-OS/2 можно работать с программами, требующими для работы Win32s extender (Photoshop 3.0x, MS Internet Explorer/Win16).
Некоторое время развивался проект Odin, позволяющий запускать приложения современных версий Windows либо конвертировать их в родные OS/2-приложения. Последний выпуск Odin был сделан 17 февраля 2013 года.
Java.
По тестам VolanoMark 2.1.2, IBM JDK 1.1.7 for OS/2 в своё время являлась наиболее продуктивной Java-машиной на платформе x86. Java-машина для OS/2 бесплатна и поставляется вместе с системой.
Программы UNIX.
Для облегчения портирования Unix/Linux-программ, а также разработки родных приложений в Unix-подобном стиле, используется набор библиотек emx, распространяемый в соответствии с лицензией GNU GPL. Если Unix-программа не завязана на конкретные особенности реализации ядра (часто бывает с приложениями для Linux), то в большинстве случаев её можно скомпилировать под OS/2. Однако, если программа рассчитана на POSIX-совместимость, её компиляция под OS/2 может оказаться проблематичной.
Существуют также несколько реализаций X Window System для OS/2, наиболее распространённой из которых является XFree86-OS/2.
Работа в сети.
В комплект поставки OS/2 Warp Connect и OS/2 Warp 4 (Merlin) входят клиенты сетей Novell NetWare, Microsoft Network и NFS.
OpenGL.
В OS/2 Warp 4.0 и выше внедрена программная реализация OpenGL. Универсальный видеодрайвер Scitechsoft SNAP реализует «software optimized» поддержку OpenGL.
Драйверы.
Драйверы к различной аппаратуре предоставлялись на официальном сайте IBM, но в связи с прекращением поддержки ныне удалены.
Отсутствие исходных кодов.
1 ноября 2005 года сообщество энтузиастов OS/2 направило в IBM петицию с просьбой открыть исходные коды этой операционной системы. Несмотря на то, что петицию подписали 11 613 человек, IBM её проигнорировала. В ноябре 2007 года сообщество направило повторную петицию, которую подписали 3744 человека. IBM ответила отказом 16 января 2008, мотивируя своё решение техническими, юридическими и бизнес-причинами.
IBM до сих пор получает отчисления с продаж OS/2, распространяемой как eComStation.
Помощь по OS/2.
Помощь по OS/2 можно получить в эхоконференциях сети FIDO: в иерархии SU.OS2.*, а также на форуме RU/2, на сайте RU/2, или на IRC-канале #OS2Russian сети EFnet.
Будущее OS/2.
В рамках проекта Core/2 существуют два действующих направления по развитию OS/2:

</doc>
<doc id="971" url="?curid=971" title="Vorbis">
Vorbis

Vorbis — свободный формат сжатия звука с потерями, официально появившийся летом 2002 года. По функциональности и качеству аналогичен таким кодекам, как AAC, AC3 и VQF, превосходящим MP3. Психоакустическая модель, используемая в Vorbis, по принципам действия близка к MP3 и подобным, однако математическая обработка и практическая реализация этой модели существенно отличаются, что позволило авторам объявить свой формат совершенно независимым от всех предшественников.
Контейнер.
Для хранения аудиоданных в формате Vorbis чаще всего применяется медиаконтейнер Ogg, такой файл обычно имеет расширение .ogg и называется двойным именем «Ogg/Vorbis» или «Ogg Vorbis». Однако «Ogg Vorbis» называют и сам кодек без контейнера, так как он является частью проекта Ogg.
Применение.
На 2013 год распространён существенно меньше, чем MP3. Используется в компьютерных играх, для подкастов.
Vorbis идеален для применения в качестве звуковых дорожек фильмов, так как не изменяет их длину при переменном битрейте, что позволяет сохранять синхронность с видеодорожкой и применим для многоканального звука (например, 6-канальный звук).
Используется для звуковой дорожки файлов в формате WebM вместе с видеокодеком VP8 (с VP9 в формат добавили поддержку нового свободного кодека Opus).
Метаданные.
Формат изначально разрабатывался с возможностью потокового вещания. Это даёт формату достаточно полезный побочный эффект — в одном файле можно хранить несколько композиций с собственными тегами. При загрузке такого файла в плеер должны отобразиться все композиции, будто их загрузили из нескольких различных файлов.
Формат имеет гибкую систему тегов. Заголовок тегов легко расширяется и позволяет включать тексты любой длины и сложности (например, текст песни), перемежающиеся изображениями (например, фотографиями обложек альбомов). Текстовые теги хранятся в UTF-8, что позволяет писать на нескольких языках одновременно и исключает возможные проблемы с кодировками.
Битрейт.
Ogg Vorbis по умолчанию использует переменный битрейт, при этом значения последнего не ограничены какими-то жёсткими значениями, и он может варьироваться даже на 1 kbps. При этом стоит заметить, что форматом жёстко не ограничен максимальный битрейт, и при максимальных настройках кодирования он может варьировать от 500 до 1000 кбит/с. Такой же гибкостью обладает частота дискретизации — пользователям предоставляется любой выбор в пределах от 2 до 192 кГц.
Цель разработки.
Vorbis был разработан сообществом «Xiph.Org» для того, чтобы заменить все платные запатентованные аудиоформаты. Несмотря на то, что это самый молодой формат из всех конкурентов MP3, Ogg Vorbis имеет полную поддержку на всех популярных платформах (Microsoft Windows, Linux, Apple Mac OS, Android, PocketPC, Palm, Symbian, DOS, FreeBSD, BeOS и др.), а также большое количество аппаратных реализаций.
Проект Ogg.
Vorbis является частью мультимедиапроекта Ogg, в который также входят свободные кодировщики: Speex — для сжатия голоса; FLAC — для сжатия звука без потерь; Theora — для сжатия видео.
Для хранения звука в Vorbis используется формат‐контейнер Ogg.
Реализации.
Благодаря открытой модели разработки и распространения существуют несколько вариантов программных кодеров и декодеров Vorbis.
Официальные программы и библиотеки.
Официальная реализация от разработчиков стандартов Ogg и Vorbis, фонда Xiph.Org, распространяется под лицензиями типа BSD и GNU LGPL.
Официальной программой-кодировщиком является свободная oggdropXPd, существующая в разных вариантах исполнения: используются библиотеки libVorbis или aoTuVb, и оптимизация под разные процессоры.
aoTuV.
Версия от японского разработчика Aoyumi. Благодаря улучшенной психоакустической модели достигается значительно более высокое качество звука, при этом aoTuV не нарушает совместимость с официальным стандартом. Хотя Aoyumi не является официальным разработчиком кодека Vorbis, его заслуги оказались настолько высоки, что в официальные библиотеки версии 1.1.0 от 22 сентября 2004 года был добавлен разработанный им код (beta 2). Последняя версия — Beta 6.03 от 25 апреля 2011 года.
Общепринятой практикой является использование последних версий утилит и библиотек от Aoyumi (особенно при работе с битрейтом ниже 64 кбит/с), а не Xiph.Org.
Lancer.
Японский разработчик Nyaochi работает над увеличением скорости кодирования в формат Vorbis. Его версия, называемая Lancer, основывается на актуальных версиях aoTuV. Благодаря оптимизациям кода под современные процессоры достигается существенное увеличение скорости кодирования и декодирования (на десятки процентов, в некоторых условиях в несколько раз). Качество при этом страдает весьма незначительно. Его последняя разработка датирована 10 ноября 2006 года.
Tremor.
Реализация декодера Ogg Vorbis с использованием чисел с фиксированной запятой, созданная для платформ, которые не поддерживают числа с плавающей запятой.

</doc>
<doc id="973" url="?curid=973" title="PHP">
PHP

PHP ( — «PHP: препроцессор гипертекста»; первоначально  — «Инструменты для создания персональных веб-страниц»; произносится "пи-эйч-пи") — скриптовый язык общего назначения, интенсивно применяемый для разработки веб-приложений. В настоящее время поддерживается подавляющим большинством хостинг-провайдеров и является одним из лидеров среди языков, применяющихся для создания динамических веб-сайтов.
Язык и его интерпретатор разрабатываются группой энтузиастов в рамках проекта с открытым кодом. Проект распространяется под собственной лицензией, несовместимой с GNU GPL.
Область применения.
В области веб-программирования, в частности серверной части, PHP — один из популярных сценарных языков (наряду с JSP, Perl и языками, используемыми в ASP.NET).
Популярность в области построения веб-сайтов определяется наличием большого набора встроенных средств для разработки веб-приложений. Основные из них:
В настоящее время PHP используется сотнями тысяч разработчиков. Согласно рейтингу корпорации TIOBE, базирующемся на данных поисковых систем, в сентябре 2015 года PHP находился на 6 месте среди языков программирования. К крупнейшим сайтам, использующим PHP, относятся Facebook, Wikipedia и др.
Входит в LAMP — распространённый набор программного обеспечения для создания и хостинга веб-сайтов (Linux, Apache, MySQL, PHP).
Создание GUI-приложений.
Хотя PHP и не слишком распространён в данной области, его можно использовать и для создания GUI-приложений.
Для создания кроссплатформенных приложений служат пакеты PHP-GTK и PHP-Qt, представляющие собой обёртки для соответствующих популярных библиотек виджетов.
Для создания графических приложений для Windows существуют свободный пакет WinBinder (написан на Си, фактически — обёртка для WinAPI).
Также существует реализация PHP для .NET/Mono — Phalanger и для JVM — JPHP, результатом компиляции PHP-кода в Phalanger может быть любое .NET-приложение, в то же время JPHP поддерживает расширение Swing, почти полностью портированное из среды Java.
История.
В 1994 году датский программист Расмус Лердорф создал набор скриптов на Perl/CGI для вывода и учёта посетителей его онлайн-резюме, обрабатывающий шаблоны HTML-документов. Лердорф назвал набор "Personal Home Page" ("Личная Домашняя Страница"). Вскоре функциональности и быстроты Perl — интерпретатора скриптов — перестало хватать, и Лердорф разработал с использованием языка C новый интерпретатор шаблонов "PHP/FI" ( — «персональная домашняя страница / интерпретатор форм»).
8 июня 1995 года, вышел PHP/FI 2.0 — первый публичный релиз.
В 1997 году после длительного бета-тестирования вышла вторая версия обработчика, написанного на C — PHP/FI 2.0. Её использовали около 1 % (приблизительно 50 тысяч) всех интернет-доменов мира.
Версия PHP 3.0 подверглась значительной переработке, определившей современный облик и стиль языка программирования. В 1997 году два израильских программиста, Энди Гутманс и Зеев Сураски, полностью переписали код интерпретатора. PHP 3.0 был официально выпущен в июне 1998 года.
Одной из сильнейших сторон PHP 3.0 была возможность расширения ядра дополнительными модулями. Впоследствии интерфейс написания расширений привлёк к PHP множество сторонних разработчиков, работающих над своими модулями, что дало PHP возможность работать с огромным количеством баз данных, протоколов, поддерживать большое число API. Большое количество разработчиков привело к быстрому развитию языка и стремительному росту его популярности. С этой версии акроним php расшифровывается как «PHP: hypertext Preprocessor», вместо устаревшего «Personal Home Page».
К зиме 1998 года, практически сразу после официального выхода PHP 3.0, Энди Гутманс и Зеев Сураски начали переработку ядра PHP. В задачи входило увеличение производительности сложных приложений и улучшение модульности базиса кода PHP. Новый движок, названный Zend Engine, успешно справлялся с поставленными задачами и впервые был представлен в середине 1999 года. PHP 4.0, основанный на этом движке и принёсший с собой набор дополнительных функций, официально вышел в мае 2000 года. В дополнение к улучшению производительности, PHP 4.0 имел ещё несколько ключевых нововведений, таких как поддержка сессий, буферизация вывода, более безопасные способы обработки вводимой пользователем информации и несколько новых языковых конструкций.
Пятая версия PHP была выпущена разработчиками 13 июля 2004 года. Изменения включают обновление ядра Zend (Zend Engine 2), что существенно увеличило эффективность интерпретатора. Введена поддержка языка разметки XML. Полностью переработаны функции ООП, которые стали во многом схожи с моделью, используемой в Java. В частности, введён деструктор, открытые, закрытые и защищённые члены и методы, окончательные члены и методы, интерфейсы и клонирование объектов. В последующих версиях также были введены пространства имён, замыкания и целый ряд достаточно серьёзных изменений, количественно и качественно сравнимых с теми, которые появились при переходе на PHP 5.0.
Шестая версия PHP разрабатывалась с октября 2006 года. Было сделано множество нововведений, как, например, исключение из ядра регулярных выражений POSIX и «длинных» суперглобальных массивов, удаление директив "safe_mode", "magic_quotes_gpc" и "register_globals" из конфигурационного файла php.ini. Одним из основных новшеств должна была стать поддержка Юникода.. Однако в марте 2010 года разработка PHP6 была признана бесперспективной из-за сложностей с поддержкой Юникода. Исходный код PHP6 перемещён на ветвь, а основной линией разработки стала версия 5.4.
PHP 7.
В 2014 году было проведено голосование, по результатам которого следующая версия получила название PHP 7. Выход новой версии планировался в середине октября 2015 года. В марте 2015 года Zend представили инфографику в которой описаны основные нововведения PHP 7. 
3 декабря 2015 года было объявлено о выходе PHP версии 7.0.0. 
Новая версия основывается на экспериментальной ветке PHP, которая изначально называлась "phpng" ("Следующее поколение PHP"), и разрабатывалась с упором на увеличение производительности и уменьшение потребления памяти. В новой версии будет добавлена возможность указывать тип возвращаемых из функции данных, а также добавлен контроль передаваемых типов для скалярных данных.
Синтаксис.
Синтаксис PHP подобен синтаксису языка Си. Некоторые элементы, такие как ассоциативные массивы и цикл codice_1, заимствованы из Perl.
Для работы программы не требуется описывать какие-либо переменные, используемые модули и т. п. Любая программа может начинаться непосредственно с оператора PHP.
Простейшая программа Hello world на PHP выглядит следующим образом:
Также возможен более короткий вариант вывода строки:
Открывающий тег вида codice_2 используется для сокращённой записи конструкций используемых для вывода строки.
PHP исполняет код, находящийся внутри ограничителей, таких как codice_3. Всё, что находится вне ограничителей, выводится без изменений. В основном это используется для вставки PHP-кода в HTML-документ, например, так:
Помимо ограничителей codice_3, допускается использование дополнительных вариантов, таких как codice_5 и codice_6. Кроме того, до версии 6.0 допускается использование ограничителей языка программирования ASP codice_7 (конструкции codice_5 и codice_7 могут быть выключены в конфигурационном файле php.ini).
Имена переменных начинаются с символа codice_10, тип переменной объявлять не нужно. Имена переменных и констант чувствительны к регистру символов. Имена классов, методов классов и функций к регистру символов не чувствительны. Переменные обрабатываются в строках, заключённых в двойные кавычки, и heredoc-строках (строках, созданных при помощи оператора «&lt;). Переменные в строках, заключённых в одинарные кавычки, не обрабатываются.
PHP рассматривает переход на новую строку как пробел, так же как HTML и другие языки со свободным форматом. Инструкции разделяются с помощью "точки с запятой" (codice_11), за исключением некоторых случаев, после объявления конструкции if/else и циклов.
Переменные в функцию можно передавать как по значению, так и по ссылке (используется знак codice_12).
PHP поддерживает три типа комментариев: в стиле языка Си (ограниченные codice_13), C++ (начинающиеся с codice_14 и идущие до конца строки) и оболочки UNIX (с codice_15 до конца строки).
Типы данных.
PHP является языком программирования с динамической типизацией, не требующим указания типа при объявлении переменных, равно как и самого объявления переменных. Преобразования между скалярными типами зачастую осуществляются неявно без дополнительных усилий (впрочем, PHP предоставляет широкие возможности и для явного преобразования типов).
К скалярным типам данных относятся:
К нескалярным типам относятся:
К псевдотипам относятся:
Диапазон целых чисел (integer) в PHP зависит от платформы (обычно, это диапазон 32-битных знаковых целых чисел, то есть, от −2 147 483 648 до 2 147 483 647). Числа можно задавать в десятичной, восьмеричной и шестнадцатеричной системах счисления. Диапазон вещественных чисел (double) также зависит от платформы (для 32-битной архитектуры диапазон позволяет оперировать числами от ±1.7×10 до ±1.7×10).
PHP предоставляет разработчикам логический тип (boolean), способный принимать только два значения codice_16 («истина») и codice_17 («ложь»). При преобразовании в логический тип число 0, пустая строка, ноль в строке «0», codice_18 и пустой массив считаются равными codice_17. Все остальные значения автоматически преобразуются в codice_16.
Специальный тип NULL предназначен для переменных без определённого значения. Единственным значением данного типа является константа codice_18. Тип NULL принимают неинициализированные переменные, переменные инициализированные константой codice_18, а также переменные, удалённые при помощи конструкции codice_23.
Ссылки на внешние ресурсы имеют тип «ресурс» (resource). Переменные данного типа, как правило, представляют собой дескриптор, позволяющий управлять внешними объектами, такими как файлы, динамические изображения, результирующие таблицы базы данных и т. п.
Массивы (array) поддерживают числовые и строковые ключи и являются гетерогенными. Массивы могут содержать значения любых типов, включая другие массивы. Порядок элементов и их ключей сохраняется. Не совсем корректно называть php-массивы массивами, на самом деле это, скорее всего, упорядоченный хеш. Возможно неожиданное поведение при использовании цикла codice_24 со счетчиком вместо codice_1. Так, например, при сортировке массива с численными индексами функциями из стандартной библиотеки, сортируются и ключи тоже.
Указатель на функцию в PHP может быть представлен замыканием или псевдотипом callback. Замыкание доступно с версии 5.3 и в коде выглядит как простое определение функции, в которую явно можно утянуть значения из контекста, например:
callback тип может быть представлен:
Для проверки является ли значение вызываемым следует использовать codice_26
Обращение к переменным и функциям.
Обращение к переменным осуществляется с помощью символа codice_10, за которым следует имя переменной. Данная конструкция может быть применена также для создания динамических переменных и функций. Например:
В PHP codice_28 и codice_29 не являются функциями (хотя codice_29 имеет возвращаемое значение), а являются синтаксическими единицами. При их использовании можно опустить скобки.
Суперглобальные массивы.
Суперглобальными массивами () в PHP называются предопределённые массивы, имеющие глобальную область видимости без использования директивы codice_31. Большая часть этих массивов содержит входные данные запроса пользователя (параметры GET-запроса, поля форм при посылке методом POST, куки и т. п.).
Все суперглобальные массивы, кроме codice_32 и codice_33, имеют устаревшие аналоги с длинными именами, которые доступны вплоть до версии 5.3. х (начиная с 5.4.0 были удалены). Таким образом, обращения codice_34 и codice_35 идентичны (за исключением области видимости: массивы с «длинными» именами не являются суперглобальными).
Объектно-ориентированное программирование.
Ключевое слово codice_65 было зарезервировано ещё в третьей версии языка.
В четвёртой версии стало возможно создавать классы и объекты на их основе. Однако, принципы ООП поддерживались лишь частично, так например, все члены (переменные и методы) были открыты. К тому же создание объектов было дорогой операцией и работали они медленно.
Начиная с пятой версии PHP обладает полной поддержкой ООП. Работа с классами была оптимизирована и теперь такой код работает достаточно быстро.
Класс в PHP объявляется с помощью ключевого слова codice_65. Методы и поля класса могут быть общедоступными (codice_67, по умолчанию), защищёнными (codice_68) и скрытыми (codice_69). PHP поддерживает все три основных механизма ООП — инкапсуляцию, полиморфизм подтипов и наследование (родительский класс указывается с помощью ключевого слова codice_70 после имени класса). Поддерживаются интерфейсы (ставятся в соответствие с помощью codice_71). Разрешается объявление финальных, абстрактных методов и классов. Множественное наследование классов не поддерживается, однако класс может реализовывать несколько интерфейсов. Для обращения к методам родительского класса используется ключевое слово codice_72.
Начиная с версии 5.4.0 множественное наследование может быть реализовано с помощью механизма "особенностей" (). Особенности похожи на примеси (), за исключением того что для них нельзя напрямую создать экземпляр. Повторное использование кода заключено в использовании кода особенности в нескольких классах. Допускается использовать в одном классе несколько особенностей. Механизм особенностей имеет средства разрешения конфликтов имён. При запуске программы код особенности будет «вкомпилирован» в код содержащего его класса.
Классы в PHP имеют ряд специальных методов (), начинающихся с двух символов подчёркивания. Особо стоит отметить конструктор (codice_73, в версиях до 5.0 конструктором служил метод, одноимённый с классом) и деструктор (codice_74), а также методы чтения (codice_75) и записи (codice_76), свёртывания (codice_77) и развёртывания (codice_78), клонирования (codice_79) и др. Эти методы являются достаточно гибким инструментом: переопределяя их, можно добиться существенного изменения поведения объекта.
Все функции-члены реализованы виртуальными и потому все они являются методами.
Экземпляры класса создаются с помощью ключевого слова codice_80, обращение к полям и методам объекта производится с использованием оператора codice_81. Для доступа к членам класса из его методов используется переменная codice_82.
Начиная с пятой версии PHP, объекты передаются по ссылке:
«Paamayim Nekudotayim» (иврит: פעמיים נקודתיים) или просто «двойное двоеточие». Используя эту лексему, программист может обращаться к константам, статическим или перегруженным свойствам или методам класса.
При обращении к этим элементам извне класса, программист должен использовать имя этого класса.
«Paamayim Nekudotayim» на первый взгляд может показаться странным словосочетанием для обозначения двойного двоеточия. Однако, во время создания Zend Engine версии 0.5 (который входил в PHP3), Andi и Zeev выбрали именно это обозначение. «Paamayim Nekudotayim» действительно значит «двойное двоеточие» (дословно: «два раза двоеточие») на иврите. Это обозначение не менялось ни разу в течение всего времени разработки PHP.
Фреймворки и системы управления содержимым.
Самые современные и наиболее популярные:
Особенности интерпретатора.
PHP-скрипты обычно обрабатываются интерпретатором в порядке, обеспечивающем кроссплатформенность разработанного приложения:
Для увеличения быстродействия приложений возможно использование специального программного обеспечения, так называемых акселераторов. Принцип их работы заключается в кэшировании однажды сгенерированного байт-кода в памяти и/или на диске, таким образом, из процесса работы приложения исключаются этапы 1—3, что в общем случае ведёт к значительному ускорению работы.
Важной особенностью является то, что разработчику нет необходимости заботиться о распределении и освобождении памяти. Ядро PHP реализует средства для автоматического управления памятью; вся выделенная память возвращается системе после завершения работы скрипта.
Расширения.
Интерпретатор состоит из ядра и подключаемых модулей, "«расширений»", представляющих собой динамические библиотеки. Расширения позволяют дополнить базовые возможности языка, предоставляя возможности для работы с базами данных, сокетами, динамической графикой, криптографическими библиотеками, документами формата PDF и тому подобным. Любой желающий может разработать своё собственное расширение и подключить его. Существует огромное количество расширений, как стандартных, так и созданных сторонними компаниями и энтузиастами, однако в стандартную поставку входит лишь несколько десятков хорошо зарекомендовавших себя. Множество расширений доступно в репозитории PECL.
Параметры настройки.
Интерпретатор PHP имеет специальный конфигурационный файл — codice_83, содержащий множество настроек, изменение которых влияет на поведение интерпретатора. Имеется возможность отключить использование ряда функций, изменить ограничения на используемую скриптом оперативную память, время выполнения, объём загружаемых файлов, настроить журналирование ошибок, работу с сессиями и почтовыми сервисами, подключить дополнительные расширения, а также многое другое. Возможно дробление большого конфигурационного файла на части. Например, широко распространена практика вынесения настроек расширений в отдельные файлы. Параметры интерпретатора могут быть переопределены в файлах конфигурации HTTP-сервера (например, codice_84 в Apache) или в самом скрипте во время выполнения при помощи команды codice_85.
Режимы запуска интерпретатора (SAPI).
SAPI — это внешний уровень абстракции, предназначенный для встраивания интерпретатора в другие приложения и отвечает за его работу (запуск, остановка, передача скриптов на исполнение, доступ к внешним данным). Существует несколько основных SAPI определяющих способы запуска и использования PHP:
Начиная с версии PHP 5.4.0 в CLI SAPI появилась возможность запуска PHP как отдельного HTTP сервера. Однако, этот режим предназначен исключительно для разработки, так как запускает только один процесс интерпретатора и выполняет все запросы исключительно последовательно.
Пасхальные яйца.
PHP имеет несколько пасхальных яиц (шуток). Передача специальных GET-параметров любому php-скрипту приводит к выводу различных изображений.
Например:
введя это значение в адресную строку браузера можно увидеть различные изображения, в зависимости от версии интерпретатора:
Следующие два значения позволят увидеть стандартный логотип PHP и ZEND, соответственно:
Эти значения можно получить и непосредственно в PHP-скрипте с помощью функций codice_88 и codice_89 для логотипа Zend.
Также имеется специальное значение для отображения списка всех авторов PHP (4,5):
Альтернативные реализации.
В силу популярности языка PHP и желания увеличить быстродействие основанных на нём веб-приложений, создано несколько альтернативных компиляторов, близких к PHP языку. Так в феврале 2010 года компания Facebook открыла свой компилятор PHP — HipHop (HPHP, Hyper-PHP) генерирующий код на C++, с последующей компиляцией в машинный код с помощью gcc. В июле 2013 года российская компания ВКонтакте анонсировала похожий продукт — KPHP.
В таблице представлен список существующих на сегодняшний момент альтернативных реализаций.
На сайте доступен сравнительный анализ некоторых компиляторов: PHP compiler performance.
Приложения PHP.
Популярные веб-приложения.
С использованием PHP разработано множество приложений, которые широко используются на различных сайтах, форумах и блогах.
Вспомогательные каркасы.
Для быстрой разработки приложений на PHP было создано множество фреймворков, наиболее популярными из которых являются Zend Framework, CakePHP, Symfony, CodeIgniter, Kohana и Yii. Основные преимущества такой разработки — это предоставление возможности строить проект при помощи паттерна MVC.
Критика.
Несогласованный синтаксис функций и неортогональность.
PHP предоставляет разработчикам большое количество самых разнообразных функций, которые попали в язык из расширений, создаваемых разными группами программистов. В результате синтаксис языка не согласован, например, часть функций для работы с массивами начинается с префикса codice_90, другая часть этим префиксом не обладает. Названия части строковых функций начинается с префикса codice_91 или codice_92, другие функции таким префиксом не обладают. В тех же строковых функциях обрабатываемая строка может передаваться как в качестве первого, так и в качестве последнего аргумента, что вызывает путаницу у программистов, и, следовательно, требует постоянного обращения к документации.
Некоторые задачи, например, разбиение строки на массив или подстроки, решаются несколькими функциями.
Другая причина отсутствия ортогональности в PHP заключается в особенностях появления этого языка на свет. В отличие от подавляющего большинства остальных языков программирования, PHP не был изначально задуман как полноценный язык программирования, а постепенно вырос из шаблонизатора для Perl. Это привело как к появлению в первоначальном варианте языка некоторых спорных решений, так и к отсутствию контроля со стороны создателя языка, который бы следил за стройностью его архитектуры.
Отсутствие обратной совместимости между версиями языка.
Код, созданный для более ранних версий языка, зачастую не работает или работает некорректно с более поздними версиями языка. В более поздних версиях исключаются конструкции, методики, функции, применявшиеся ранее. В результате, приложения, созданные несколько лет назад, практически теряют работоспособность для современных версий языка и требуют значительной модификации. Такие изменения обусловлены двумя факторами: устранением несогласованного синтаксиса и устранением конструкций, поощряющих создание небезопасного кода.
В версиях линейки 5.3.x большое количество функций было признано устаревшими, их поддержка не планируется в новых версиях языка, что вызывает несовместимость со скриптами, которые используют устаревшие функции.
Надо отметить, что противоречие между обратной совместимостью и процессом развития — одна из ключевых проблем в разработке программного и аппаратного обеспечения. При работе над скриптовыми языками время от времени происходит резкая смена его архитектуры (а порой и парадигмы), обычно сопровождающаяся сменой первой цифры в номере версии. Так, в настоящее время идёт постепенный переход на новую ветвь языка Python — 3.x, в стадии тестирования находится Perl 6, являющийся, по сути, новым perl-подобным языком. При этом принято выпускать переходные версии, в которых постепенно вводятся новые конструкции, а использование устаревших вызывает вывод предупреждений. К таким переходным версиям относится и PHP 5.3.
7 марта 2013 года Zend Technologies объявили, что в версию PHP 5.5, когда она будет выпущена, решено интегрировать Zend Optimizer+, который включает в себя кэш опкодов и оптимизатор кода.
Отсутствие поддержки многобайтовых кодировок в ядре языка.
Поддержка строк с многобайтовыми кодировками, такими как UTF-8 реализуется через отдельные расширения codice_93 и codice_94, на уровне ядра поддержка отсутствует, однако с версии PHP 4.2.0 есть возможность переопределять стандартные функции работы со строками, подменяя их на аналоги из mbstring.
Поддержка многобайтовых кодировок во всех строковых функциях стала доступна с версии 5.4.0 (март 2012 года).
Отсутствие поддержки многопоточности.
В языке не предусмотрена возможность создания многопоточных приложений и отсутствует поддержка синхронизированного доступа к ресурсам, однако реализуема при помощи расширения PCNTL. Однако, следует отметить, что использование PCNTL или ProcessControl не подходит для решения специфических задач.
Хотя есть возможность установить расширение pthreads для «честных» потоков, но для этого интерпретатор должен быть скомпилирован с флагом thread safety.
Востребованность на рынке.
Согласно исследованиям одного из крупных российских порталов трудоустройства:

</doc>
<doc id="975" url="?curid=975" title="POP3">
POP3

POP3 ( — протокол почтового отделения, версия 3) — стандартный интернет-протокол прикладного уровня, используемый клиентами электронной почты для получения почты с удаленного сервера по TCP/IP-соединению.
POP и IMAP (Internet Message Access Protocol) — наиболее распространённые интернет-протоколы для извлечения почты. Практически все современные клиенты и серверы электронной почты поддерживают оба стандарта. Протокол POP был разработан в нескольких версиях, нынешним стандартом является третья версия (POP3). Большинство поставщиков услуг электронной почты (такие как Hotmail, Gmail и Yahoo! Mail) также поддерживают IMAP и POP3. Предыдущие версии протокола (POP, POP2) устарели.
Альтернативным протоколом для сбора сообщений с почтового сервера является IMAP.
Общие сведения.
POP поддерживает простые требования «загрузи-и-удали» для доступа к удаленным почтовым ящикам. Хотя большая часть POP-клиентов предоставляет возможность оставить почту на сервере после загрузки, использующие POP клиенты обычно соединяются, извлекают все письма, сохраняют их на пользовательском компьютере как новые сообщения, удаляют их с сервера, после чего разъединяются.
Другие протоколы, в частности IMAP, предоставляют более полный и комплексный удаленный доступ к типичным операциям с почтовым ящиком. Многие клиенты электронной почты поддерживают как POP, так и IMAP; однако, гораздо меньше интернет-провайдеров поддерживают IMAP.
POP3-сервер прослушивает общеизвестный порт 110. Шифрование связи для POP3 запрашивается после запуска протокола, с помощью либо команды STLS (если она поддерживается), либо POP3S, которая соединяется с сервером используя TLS или SSL по TCP-порту 995.
Доступные сообщения клиента фиксируются при открытии почтового ящика POP-сессией и определяются количеством сообщений для сессии, или, по желанию, с помощью уникального идентификатора, присваиваемого сообщению POP-сервером. Этот уникальный идентификатор является постоянным и уникальным для почтового ящика и позволяет клиенту получить доступ к одному и тому же сообщению в разных POP-сессиях. Почта извлекается и помечается для удаления с помощью номера сообщения. При выходе клиента из сессии помеченные сообщения удаляются из почтового ящика.
История.
POP (POP1) определен в RFC 918 (1984), POP2 в RFC 937 (1985). Первоначальная спецификация POP3 была представлена в RFC 1081 (1988). Нынешняя же описана в RFC 1939, обновлена механизмом расширения (RFC 2449) и механизмом аутентификации (RFC 1734).
Версии POP2 был назначен порт 109.
Изначальная спецификация POP3 поддерживала только незашифрованный механизм входа в систему USER/PASS или управление доступом .rhosts. На данный момент, POP3 поддерживает различные методы аутентификации для предоставления разных уровней защиты от незаконного доступа к пользовательской почте. Большинство из них предоставлены механизмами расширения POP3. Клиенты POP3 поддерживают методы SASL через расширение AUTH. В рамках проекта Массачусетского технологического института «Афина» также был введен метод на основе Кербероса.
RFC 1460 ввел APOP в основной протокол. APOP — протокол вида «запрос/ответ», использующий функцию хэширования MD5. Среди клиентов, реализующих APOP, можно выделить Mozilla Thunderbird, Opera Mail, Eudora, Windows Live Mail, PowerMail, Apple Mail, и т. д.
Было высказано неофициальное предложение для спецификации «POP4», с рабочей реализацией сервера. Это предложение добавило основные функции управления папками, поддержку составных сообщений, а также управление флагами сообщений. Однако, никакого прогресса «POP4» не наблюдается с 2003 г.
Расширения.
Механизм расширений был предложен в RFC 2449 для размещения новых расширений, а также организованного объявления о поддержке опциональных команд, таких как TOP и UIDL. RFC не намеревались поощрять расширения и подтвердили, что роль POP3 заключается в предоставлении простой поддержки в основном для требования «загрузи-и-удали».
Расширения выводятся списком командой CAPA. За исключением APOP, все опциональные команды были включены в изначальный набор возможностей. (Вслед за ESMTP (RFC 5321), возможности, начинающиеся с "X. - ?)
STARTTLS.
Расширение STARTTLS позволяет использовать TLS (Transport Layer Security) или SSL (Secure Sockets Layer) для связи с помощью команды STLS, по стандартному POP3-порту. Некоторые клиенты и сервера используют метод альтернативного порта, работающий с TCP-портом 995 (POP3S).
SDPS.
Британский провайдер Demon Internet ввел расширение POP3, позволяющее иметь несколько учётных записей для каждого домена и ставшее известным как SDPS (Standard Dial-up POP3 Service). Для доступа к каждой учётной записи имя пользователя включает в себя имя хоста, например, john@hostname или john+hostname.
Google Apps используют тот же метод.
Сравнение с IMAP.
Клиенты, которые оставляют почту на серверах, обыкновенно используют команду UIDL для получения текущего соответствия между количеством сообщений и сообщением, определяемым его уникальным идентификатором. Идентификатор произволен и может повторяться, если на ящике есть идентичные сообщения. Напротив, IMAP использует 32-битный уникальный идентификатор (UID), присваиваемый сообщениям по возрастанию (но не обязательно подряд) по мере их получения. При извлечении новых сообщений IMAP-клиенты запрашивают UID больший, чем наивысшее значение UID среди всех ранее извлеченных сообщений, в то время как POP-клиент должен выбирать из всей карты UIDL. Для больших почтовых ящиков это может потребовать значительной обработки.
MIME служит в качестве стандарта для вложений и не-ASCII текста в электронных сообщениях. Хотя ни POP3, ни SMTP не требуют MIME-отформатированного сообщения, по существу, все не-ASCII сообщения идут в формате MIME, поэтому POP-клиенты должны также «понимать» и использовать MIME. IMAP, по определению, принимает MIME-форматированные сообщения.
Состояния сеанса.
В протоколе POP3 предусмотрено 3 состояния сеанса:
Команды протокола.
APOP.
Команда служит для передачи серверу имени пользователя и зашифрованного пароля (digest).
м — строка, указывающая имя почтового ящика.iges — хеш-сумма временной метки, конкатенированной с паролем пользователя, вычисленная по алгоритму MD5. В случае поддержки этой команды временная метка получается при соединении с сервером.
USER.
Передаёт серверу имя пользователя.
м — строка, указывающая имя почтового ящика.
PASS.
Передаёт серверу пароль почтового ящика.
арол — пароль для почтового ящика.
DELE.
Сервер помечает указанное сообщение для удаления. Сообщения, помеченные на удаление, реально удаляются только после закрытия транзакции (закрытие транзакций происходит обычно после посыла команды QUIT, кроме этого, например, на серверах закрытие транзакций может происходить по истечении определённого времени, установленного сервером).
ообщени — номер сообщения.
LIST.
Если был передан аргумент, то сервер выдаёт информацию об указанном сообщении. Если аргумент не был передан, то сервер выдаёт информацию обо всех сообщениях, находящихся в почтовом ящике. Сообщения, помеченные для удаления, не перечисляются.
ообщени — номер сообщения (необязательный аргумент).
NOOP.
Сервер ничего не делает, всегда отвечает положительно.
RETR сообщение.
Сервер передаёт сообщение с указанным номером.
ообщени — номер сообщения.
RSET.
Этой командой производится откат транзакций внутри сессии. Например, если пользователь случайно пометил на удаление какие-либо сообщения, он может убрать эти пометки, отправив эту команду.
STAT.
Сервер возвращает количество сообщений в почтовом ящике и размер почтового ящика в октетах. Сообщения, помеченные как удаленные, при этом не учитываются.
TOP.
Сервер возвращает заголовки указанного сообщения, пустую строку и указанное количество первых строк тела сообщения.
ообщени — номер сообщения.оличество стро — сколько строк нужно вывести.
Пример сессии.
Это пример сессии с поддержкой зашифрованных паролей (APOP, RFC 1939):
Вариант начала сессии, при котором пароль передается открытым текстом:

</doc>
<doc id="977" url="?curid=977" title="SCO">
SCO

The SCO Group — американская компания, разрабатывающая системное и прикладное программное обеспечение. Ранее была известна как Caldera Systems и занималась разработкой и внедрением своего дистрибутива GNU/Linux.
В 2000 компания купила у права на операционные системы UnixWare и OpenServer. Новое название компания получила в 2002 и на данный момент, несмотря на совпадающие аббревиатуры, не имеет никакого отношения к Santa Cruz Operation.
Компания стала известной из‑за нескольких исков против корпораций, поддерживающих свободную операционную систему GNU/Linux, в незаконном использовании кода системы UNIX. Наиболее громким из них был процесс против IBM в 2003. SCO обвинила IBM в том, что она незаконно внесла в ядро Linux часть кода, принадлежащего SCO. 2007-08-11 стало известно, по постановлению суда Novell обладает правами (copyright) на UNIX и UnixWare, и претензии со стороны SCO безосновательны.
Сайт представляет собой своеобразный центр противостояния SCO. Хотя ресурс существует уже давно, только в феврале 2007 года компания SCO попыталась вызвать его создателя в суд.
1 сентября 2007 было объявлено, что Сбербанк России выбрал продукцию этой компании в качестве обновления для своих серверов.
Судебные иски против Linux.
Серия правовых и общественных споров между компанией-производителем программного обеспечения SCO Group (SCO), и пользователями и корпорациями, поддерживающих свободную операционную систему GNU/Linux. SCO Group утверждает, что лицензионное соглашение с IBM означает, что исходный код, который был написан IBM и включен в состав Linux, нарушает право SCO, установленное этим договором. Участники сообщества Linux не согласны с притязаниями SCO, а компании IBM, Novell и Red Hat подали встречные иски.
В 2003 году SCO заключила выгодные сделки с Microsoft — основным конкурентом разработчиков GNU/Linux.
10 августа 2007 года федеральный окружной судья в противостоянии "SCO против Novell" вынес определение, что компания Novell, а не SCO Group, является полноправным владельцем прав (copyright), относящихся к операционной системе Unix. Суд также постановил, что «SCO, по требованию Novell, обязана отказаться от претензий к IBM и Sequent». После вынесения вердикта компания Novell объявила, что не заинтересована в судебных тяжбах на почве Unix, и подчеркнула «Мы не считаем, что внутри Linux есть Unix» (We don’t believe there is Unix in Linux).
Предпосылки.
В начале 2003 года, компания SCO заявила, что имело место «ошибочное включение кода её системы UNIX System V в Linux». Однако, компания отказалась указать конкретные участки кода, заявив, что доказательства будут представлены только суду. Было сказано, что такой код может быть найден в модулях SMP, RCU и некоторых других частях ядра Linux.
Позднее компания объявила о подаче иска к компании IBM на 1 млрд долларов, утверждая, что компания IBM включила элементы, составляющие коммерческую тайну SCO, в Linux. Затем сумма претензий увеличилась до 3 млрд долларов, а затем и до 5 миллиардов.
Эксперты замечают, что дело "USL v. BSDi" показало, что право (copyright) на Unix размытое, и не может служить основанием для возбуждения иска. На июль 2007 торговая марка UNIX не принадлежала SCO. Таким образом, претензии сводились только к нарушению коммерческой тайны, а после некоторого противостояния, такое дело тяжело было развить дальше установления факта нарушения контракта компанией IBM, и, следовательно, в ответчиках оставалась только компания IBM. Компания SCO разыскивала более весомый повод для претензий к сообществу Linux, и явным образом исключила все претензии по поводу коммерческой тайны из иска.
Банкротство по Chapter 11.
15 сентября 2007 года SCO объявили себя временным банкротом в целях защиты от кредиторов.
14 февраля 2008 года SCO подала заявление на финансирование в размере 100 миллионов долларов США от Stephen Norris Capital Partners, чтобы выйти из банкротства и стать частной компанией. SNCP разработала для SCO новый бизнес‐план, предполагающий выпуск новых продуктов, и затрагивающий её судебное разбирательство. По вступлении в силу плана реорганизации должен был уволиться CEO Дарл МакБрайд.
Активы SCO были выставлены на аукцион, который состоялся 25 октября 2010 года.

</doc>
<doc id="979" url="?curid=979" title="SMS">
SMS

SMS (СМС — кириллицей) ( , сокр. от  — «служба коротких сообщений») — технология, позволяющая осуществлять приём и передачу коротких текстовых сообщений с помощью сотового телефона. Входит в стандарты сотовой связи.
Технология SMS поддерживается основными сотовыми сетями (GSM, NMT, D-AMPS, CDMA, UMTS).
О технологии.
Также SMS на телефоны можно отправлять из Интернета и из других сетей (пейджинговых, Фидонет, x.25 и др.) используя специальные программы, универсальные SMS-формы, а также непосредственно SMS-шлюзы мобильных операторов.
История.
SMS была создана как составная часть стандарта GSM Phase 1. Впервые идея осуществления сервиса возникла в 1984 г. и была затем реализована группой инженеров, среди которых были: Фридхельм Хиллебранд (Deutsche Telekom), Бернар Жильбер (PTT), Финн Тросбю (Telenor), Кевин Холли (Cellnet), Иэн Харрис (Vodafone) к 1989 году. Впервые система рассылки коротких сообщений была опробована в декабре 1992 года в Великобритании для передачи текста с персонального компьютера на мобильный телефон в сети GSM компании Vodafone, спустя год после появления стандарта GSM на европейском рынке. И содержание первого SMS-сообщения было «Счастливого Рождества!»
По отчёту Cellular Telecommunications Industry Association (CTIA), около 40 % пользователей мобильных телефонов пользуются SMS.
В России.
Вплоть до 2002 года обмен SMS-сообщениями между двумя разными московскими операторами был невозможен.В других регионах SMS-сообщениями обменивались с 2000 года.
Длина сообщения.
Текст может состоять из алфавитно-цифровых символов. Максимальный размер сообщения в стандарте GSM — 140 байт (1120 бит). Таким образом, при использовании 7-битной кодировки (латинский алфавит и цифры) можно отправлять сообщения длиной до 160 символов. При использовании 8-битной кодировки (немецкий, французский язык) можно отправлять сообщения длиной до 140 символов. Для поддержки других национальных алфавитов (китайского, арабского, русского и др.) используется 2-байтовая (16-битная) кодировка UCS-2. Таким образом, SMS, написанное кириллицей, не может превышать 70 знаков. Существуют и поддерживаются частью телефонов и восьмибитные кодировки кириллицы — так называемая локальная российская кодировка KOI8-R и Windows-1251. Но при использовании таких кодировок возникают проблемы с совместимостью: как телефон отправителя, так и телефон получателя сообщения должны быть заранее настроены на «сокращённый набор символов», при такой настройке невозможна отправка сообщений с использованием других алфавитов, кроме кириллицы и латиницы. К тому же поддержка кодировки телефонами несовершенна: в случае переключения телефона на UCS-2 (Юникод) сообщения, сохранённые в восьмибитной кодировке, могут быть испорчены так, что не восстанавливаются даже при обратном переключении. Поэтому даже телефоны, поддерживающие восьмибитную кириллическую кодировку, по умолчанию (то есть без изменения настройки) используют UCS-2.
В стандарте также предусмотрена возможность отправлять сегментированные сообщения. В таких сообщениях в заголовке пользовательских данных (UDH) помещается информация о номере сегмента сообщения и общем количестве сегментов. Максимальная длина сегмента при этом уменьшается за счет этого заголовка. Как правило, каждый сегмент тарифицируется как отдельное сообщение. Сегментирование поддерживают почти все современные телефоны, но часто в телефонах вводится ограничение на количество сегментов в сообщении. Телефон, который не поддерживает сегментирование, отображает каждый сегмент как отдельное сообщение.
Некоторые абоненты сотовых сетей предпочитают писать SMS на родном языке, используя латинские буквы (см.: транслит). Первоначально это было обусловлено отсутствием поддержки кириллицы и других национальных алфавитов телефонными аппаратами; а с широким распространением русифицированных телефонов — привычкой, а также тем, что на латинице можно писать более длинные SMS (160 вместо 70 символов на кириллице) за те же деньги. Например: "Ura! Ya napisal pro SMS v Wikipediju". При этом фактическая экономия меньше, чем 160/70, так как те буквы кириллицы, у которых отсутствуют аналоги в латинице, приходится заменять буквосочетаниями не менее чем из двух букв.
В англоязычных странах для экономии символов в SMS часто используют аббревиатуры, пропуски гласных, а также обозначают слова и слоги схожими по звучанию цифрами и буквами. Например, "«C u l8r»" вместо "«See you later»".
Тарификация.
В России.
В России, как правило, оплачивается отправка SMS (на начало 2010 года у московских операторов стоимость в большинстве тарифов составляет 0,5—2,0 рубля), входящие SMS бесплатны. Стоимость отправки и получения SMS в роуминге зависит от роумингового соглашения и может меняться в зависимости от сети пребывания абонента. В последние годы почти все российские операторы мобильной связи ввели разную стоимость отправки SMS: внутри домашнего региона и на все внутрисетевые страны, за пределы домашнего региона внутри страны, за рубеж.
Отправка сообщений через официальные сайты сотовых операторов, как правило, бесплатна.
Бесплатная отправка SMS через Интернет.
В настоящее время возможно относительно анонимно и бесплатно отправлять сообщения через официальные сайты операторов сотовой связи. Под анонимностью в данном случае понимается то, что информация об отправителе неизвестна получателю. Веб-сайт, с помощью которого отправлено сообщение, может записать IP-адрес и многие другие данные о компьютере отправителя. Есть также множество сайтов-сервисов, на которых пользователю нужно ввести лишь номер мобильного телефона, а программа сама перенаправит посетителя на сайт нужного сотового оператора.
SMS и мобильные телефоны.
Большинство современных мобильных телефонов всех стандартов позволяют использовать SMS в полном объёме.
Для того чтобы телефон мог отправлять SMS, необходимо указать номер SMS-центра (SMSC) оператора мобильной связи. В подавляющем большинстве случаев этот номер уже записан на SIM-карте и настраивать его вручную не нужно.
Входящие SMS сохраняются в списке входящих сообщений, где они могут быть просмотрены. Некоторые модели телефонов хранят этот список на SIM-карте, и потому имеют ограничения на количество хранящихся сообщений (несколько десятков). Современные модели хранят список сообщений в памяти телефона, и количество сообщений ограничено только размером памяти телефона. Отправленные сообщения сохраняются в списке отправленных сообщений, также существуют отдельные списки для неотправленных сообщений и для черновиков.
В смартфонах и коммуникаторах SMS иногда хранятся в общем почтовом ящике, там же, где сообщения электронной почты и MMS.
Для набора SMS на мобильном телефоне, как правило, используется цифровая клавиатура телефона. Набор осуществляется либо путём последовательных нажатий для выбора нужной буквы, либо при помощи какой-либо системы предиктивного набора, типа T9 или iTAP. Некоторые модели телефонов имеют алфавитно-цифровую клавиатуру, что существенно облегчает набор. В смартфонах и коммуникаторах также может использоваться экранная клавиатура.
SMS и служебные приложения SIM-карт.
SMS также используются в приложениях STK, например, в SIM-меню. Такие сообщения принимаются и отправляются незаметно для пользователя и не попадают в общий список принятых и отправленных сообщений.
SMS и городские телефоны.
Некоторые операторы связи предоставляют абонентам услугу sms для обычных городских телефонов. Данная услуга позволяет c телефона отправлять/принимать SMS на фиксированные телефоны и мобильные телефоны.
Для отправки / приёма SMS необходим телефонный аппарат, поддерживающий функцию SMS.
В Московском регионе услугу SMS для городских телефонов предоставляет МГТС.
Применение.
Смишинг.
За счёт SMS-рассылки многие мошенники выманивают у пользователей сотовой связи деньги или важную конфиденциальную информацию. Данная область мошенничества называется смишинг ( — от «SMS» и «фишинг»).
Мобильный маркетинг.
В настоящий момент особую популярность получает мобильный маркетинг, представленный на рынке компаниями, осуществляющими рассылки SMS по предварительному согласию с получателями. Например, фирма хочет проинформировать своих клиентов о новинках, акциях или скидках, которые она предоставляет. Идеальным каналом для такого взаимодействия становится SMS.
Рассылка таких сообщений без предварительного согласия получателя запрещена во многих странах, например, на территории России, — согласно ст. 18 Федерального Закона о рекламе, Украины, — согласно Статье 363—1 (Раздел XVI, Уголовного Кодекса Украины). По этой причине маркетинговые компании предлагают бесплатные услуги взамен на согласие получать рекламу посредством SMS.
Также отдельным направлением мобильного маркетинга является работа с короткими номерами. Цель использования коротких номеров — прибыль от входящих SMS, при этом большую часть стоимости забирает себе оператор сотовой связи, предоставляющий этот номер, а около 45 % получает организатор акции.
Применяются также и федеральные номера для получения SMS. Этот вид сервиса обычно организовывается при отсутствии финансовой заинтересованности (получение мнения о товаре, «жалобная книга», подписка на новости и т. д.).
Компании-посредники для удобства корпоративных клиентов разрабатывают специальные порталы, через которые удобно организовывать SMS-информирование и работу с короткими/федеральными номерами.
Данные порталы позволяют:
В России.
Правомерность массовой рассылки SMS-сообщений операторами связи без подписки абонента в конце мая 2009 года подтвердил Высший арбитражный суд России.
Premium-SMS.
Существует отдельно тарифицируемый тип SMS, используемый для получения каких-либо платных услуг. Сообщение при этом отправляется на один из специальных коротких номеров, и, как правило, содержит в себе данные, необходимые для получения услуги (код услуги, дополнительную информацию). Сообщение оплачивается по специальному тарифу при отправлении (обычно существенно дороже стоимости стандартного SMS, так как в стоимость включена стоимость самой услуги). После отправки и списания средств с лицевого счёта абонент, как правило, получает доступ к услуге, например, в виде SMS со ссылкой на WAP-страницу с мелодией, картинкой или игрой.
Premium-SMS используются в различных сервисах мобильной коммерции, например, при продаже мобильного контента. Иногда Premium-SMS используются и для сервисов, не имеющих прямого отношения к мобильной связи, например, для оплаты в Интернет-ресурсах, для различных голосований. Из-за простоты перевода денег путём платных SMS данный путь используется и различными мошенниками.

</doc>
<doc id="981" url="?curid=981" title="SMTP">
SMTP

SMTP ( — простой протокол передачи почты) — это широко используемый сетевой протокол, предназначенный для передачи электронной почты в сетях TCP/IP.
SMTP впервые был описан в RFC 821 (1982 год); последнее обновление в RFC 5321 (2008) включает масштабируемое расширение — ESMTP (). В настоящее время под «протоколом SMTP», как правило, подразумевают и его расширения. Протокол SMTP предназначен для передачи исходящей почты с использованием порта TCP 25.
В то время, как электронные почтовые серверы и другие агенты пересылки сообщений используют SMTP для отправки и получения почтовых сообщений, работающие на пользовательском уровне клиентские почтовые приложения обычно используют SMTP только для отправки сообщений на почтовый сервер для ретрансляции. Для получения сообщений клиентские приложения обычно используют либо POP ( — протокол почтового отделения), либо IMAP (), либо патентованные системы (такие как Microsoft Exchange и Lotus Notes/Domino) для доступа к учётной записи своего почтового ящика на сервере.
История.
В 1960-х годах использовались различные виды электронной связи. Люди связывались друг с другом с помощью систем, разработанных для определённых мейнфреймов. Когда всё больше компьютеров становились связанными, особенно в сети Правительства США, ARPANET, были разработаны стандарты для того, чтобы пользователи на различных системах могли писать электронные сообщения друг другу. Эти стандарты, разработанные в 1970-х годах, стали основой для SMTP.
Корни SMTP можно проследить в двух описанных в 1971 г. реализациях — Mail Box Protocol и SNDMSG, который был «изобретён» Рэем Томлинсоном из BBN Technologies для TOPS-20/TENEX-компьютеров, посылающих сообщения по ARPANET (в то время к ней были подсоединены менее 50 хостов).
Дальнейшие реализации включают в себя FTP Mail и Mail Protocol, разработанные в 1973 г. Разработка продолжалась на протяжении 1970-х, пока ARPANET не преобразовалась в современный Интернет около 1980 г. В том же году Джон Постел предложил Mail Transport Protocol (протокол передачи почты), благодаря которому FTP перестал быть основой для передачи почты. SMTP опубликован в RFC 821 (также написанном Постелом) в августе 1982 г.
Стандарт SMTP был разработан примерно в то же время, что и Usenet, сеть передачи данных, имеющая некоторые сходства с SMTP. SMTP стал широко использоваться в ранние 1980-е. В то время он был дополнением для работающей под Unix почтовой программы Unix Copy Program (UUCP), которая больше подходила для обработки передачи электронных сообщений между периодически связанными устройствами. С другой стороны, SMTP прекрасно работает, когда как отправляющее, так и принимающее устройства связаны в сети постоянно. Оба устройства используют механизм хранения и пересылки и являются примером push-технологии (технологии «проталкивания»). Хотя новостные группы Usenet все ещё распространяются между серверами с помощью UUCP, почта UUCP фактически исчезла вместе с маршрутом «bang path» (последовательность хост-машин в сети, по которой сообщение должно дойти до адресата), которые использовались как заголовки маршрутизации. В статье о перезаписи отправителя содержится техническая справочная информация об истории раннего SMTP и маршрутизации от источника до RFC 1123.
Sendmail был одним из первых (если не первым) агентом пересылки сообщений, в котором был реализован SMTP. В число других популярных серверных программ, поддерживающих SMTP, входят Postfix, qmail, Novell GroupWise, Exim, Novell NetMail, Microsoft Exchange Server, Sun Java System Messaging Server.
Предоставление сообщений (RFC 2476) и SMTP-AUTH (RFC 2554) были введены в 1998 и 1999 гг. и описывали новые тенденции в передаче электронных сообщений. Изначально, SMTP-сервера были обычно внутренними для организации, получая сообщения от организаций извне и ретранслируя сообщения организации во внешнюю среду. Но с течением времени, SMTP-сервера (агенты пересылки сообщений), на деле, расширяли свои функции и в конце концов стали агентами предоставления сообщений для пользовательских почтовых приложений, некоторые из которых теперь ретранслировали почту извне организации (например, руководитель компании, будучи в поездке, хочет отправить электронное сообщение с помощью корпоративного SMTP-сервера).
Данный вопрос, являясь следствием быстрого развития и популярности Всемирной паутины, означает, что SMTP должен был включать в себя особые правила и методы для ретрансляции сообщений и авторизации пользователей для предотвращения таких злоупотреблений, как ретрансляция нежелательной почты (спам).
Поскольку этот протокол сначала был с текстовым (ASCII) интерфейсом, то он плохо работал с бинарными файлами и символами многих неанглийских языков. Такие стандарты, как Multipurpose Internet Mail Extensions (MIME), были разработаны для кодирования двоичных файлов для передачи через SMTP. Разработанные после Sendmail агенты пересылки, как правило, также осуществляли опцию чистых 8 бит, так что альтернативная стратегия «просто посылай восемь» может быть использована для передачи произвольных текстовых данных (в любой восьмибитной ASCII-подобной кодировке символов) через SMTP. Однако все ещё оставалась проблема , вызванная разным отображением наборов символов у производителей, хотя сами почтовые адреса все ещё позволяли использовать исключительно ASCII. Сегодня агенты пересылки, работающие с чистыми 8 битами, как правило, поддерживают расширение 8BITMIME, позволяющее передавать бинарные файлы почти так же легко, как обычный текст. Недавно было создано расширение SMTPUTF8 для поддержки текста в кодировке UTF-8, благодаря чему стало возможным включать международное содержимое и адреса с использованием таких алфавитов, как кириллица или китайский.
Многие выдающиеся люди внесли свой вклад в спецификацию основного SMTP, среди них Джон Постел, Эрик Оллман, Дэйв Крокер, Нед Фрид, Рэндалл Джелленс, Джон Кленсин и Кейт Мур.
Модель обработки почты.
Электронная почта представлена почтовым клиентом (MUA, mail user agent — пользовательский почтовый агент) для почтового сервера (MSA, mail submission agent — агент отправки электронной почты) с помощью SMTP по TCP-порту 587. Оттуда MSA доставляет почту своим агентам передачи сообщений (MTA, mail transfer agent). Часто эти два агента являются просто различными образцами одного и того же программного обеспечения, запущенного с разными параметрами на одном устройстве. Локальная обработка может быть проведена как на отдельной машине, так и разделена между различными устройствами; в первом случае вовлеченные процессы имеют общий доступ к файлам, во втором случае SMTP используется для пересылки сообщения внутренне, причём каждый хост настроен на использование следующего устройства в качестве промежуточного хоста. Каждый процесс — сам по себе MTA, т. е. — SMTP-сервер.
Граничный MTA должен найти целевой хост. Он использует систему доменных имен (DNS) для поиска записей почтового обменника (mail exchanger — MX) домена получателя (часть адреса, находящаяся справа от символа @). Возвращаемая запись почтового MX содержит имя целевого хоста. Затем MTA подключается к серверу обмена в качестве SMTP-клиента. 
Как только цель MX принимает входящее сообщение, она передает его агенту доставки почты (mail delivery agent — MDA) для локальной доставки сообщения. MDA предусматривает возможность сохранять сообщения в соответствующем формате почтового ящика. Приём почты, опять же, может быть проведен как несколькими, так и одним компьютером — изображение показывает два ближайших ящика для каждого случая. MDA может доставлять сообщения прямо на хранение или передавать их по сети с помощью SMTP или любых других средств, в том числе протокола локальной пересылки почты (Local Mail Transfer Protocol — LMTP) — производного от SMTP, предназначенного для этой цели.
После доставки на локальный почтовый сервер сообщение хранится для пакетного поиска по аутентифицированным почтовым клиентам (MUA). Сообщение извлекается приложениями конечного пользователя (почтовыми клиентами) с использованием протокола IMAP (Internet Message Access Protocol), который облегчает доступ к сообщениям и управляет хранящейся почтой, или с помощью протокола POP (Post Office Protocol), который обычно использует традиционный mbox-формат файлов, или фирменными системами вроде Microsoft Exchange/Outlook или Lotus Notes/Domino. Клиенты сетевой почты могут использовать любой метод, но протокол поиска часто не соответствует официальным стандартам.
SMTP определяет передачу сообщения, а не его содержание. Таким образом, он задает оболочку сообщения и её параметры (такие, как отправитель оболочки), но не заголовок либо тело самого сообщения. STD 10 и RFC 5321 определяют SMTP (оболочку), в то время как STD 11 и RFC 5322 — сообщение (заголовок и тело), официально называемый форматом почтового сообщения (Internet Message Format).
Обзор протокола.
SMTP — требующий соединения текстовый протокол, по которому отправитель сообщения связывается с получателем посредством выдачи командных строк и получения необходимых данных через надёжный канал, в роли которого обычно выступает TCP-соединение (Transmission Control Protocol — протокол управления передачей). SMTP-сессия состоит из команд, посылаемых SMTP-клиентом, и соответствующих ответов SMTP-сервера. Когда сессия открыта, сервер и клиент обмениваются её параметрами. Сессия может включать ноль и более SMTP-операций (транзакций). 
SMTP-операция состоит из трёх последовательностей команда/ответ (см. пример ниже). Описание последовательностей:
Помимо промежуточных ответов для DATA-команды, каждый ответ сервера может быть положительным (код ответа 2хх) или отрицательным. Последний, в свою очередь, может быть постоянным (код 5хх) либо временным (код 4хх). Отказ SMTP-сервера в передаче сообщения — постоянная ошибка; в этом случае клиент должен отправить возвращённое письмо. После сброса — положительного ответа, сообщение скорее всего будет отвержено. Также сервер может сообщить о том, что ожидаются дополнительные данные от клиента (код 3xx).
Изначальным хостом (SMTP-клиентом) может быть как почтовый клиент конечного пользователя (функционально определяемый как почтовый агент — MUA), так и агент пересылки сообщений (MTA) на сервере, т. е. сервер действует как клиент в соответствующей сессии для ретрансляции сообщения. Полностью функциональные сервера поддерживают очереди сообщений для повторной передачи сообщения в случае ошибок.
MUA знает SMTP-сервер для исходящей почты из своих настроек. SMTP-сервер, действующий как клиент, т. е. пересылающий сообщения, определяет, к какому серверу подключиться, просмотром ресурса записей MX (Mail eXchange) DNS для домена каждого получателя. В случае, если запись MX не найдена, совместимые MTA (не все) возвращаются к простой А-записи. Пересылающие сервера также могут быть настроены на использование Smart host.
SMTP-сервер, действующий как клиент, устанавливает TCP-соединение с сервером по разработанному для SMTP порту 25. MUA должен использовать порт 587 для подключения к агенту предоставления сообщений (MSA). Основное различие между MTA и MSA заключается в том, что SMTP-аутентификация обязательна только для последнего.
SMTP и извлечение сообщений.
SMTP — всего лишь протокол доставки. Он не может по требованию взять сообщения с удаленного сервера. Для извлечения почты и управления почтовым ящиком разработаны другие протоколы, такие как POP и IMAP. Тем не менее, SMTP предоставляет возможность начать на удаленном сервере обработку очереди сообщений, при которой запрашивающая система может получать все направленные ей сообщения (см. Remote Message Queue Starting ниже). POP и IMAP предпочтительны, когда компьютер пользователя включен не постоянно, или же временно подключен к Интернету.
Remote Message Queue Starting.
Remote Message Queue Starting (запуск удаленной очереди сообщений) — особенность SMTP, позволяющая удаленному хосту начать обработку очереди сообщений на сервере так, что он может получать предназначенные ему сообщения с помощью команды TURN. Однако эта особенность считалась небезопасной и была расширена в RFC 1985 командой ETRN, которая работает надёжнее благодаря основанному на информации DNS методу аутентификации.
On-Demand Mail Relay.
ODMR (On-Demand Mail Relay — ретрансляция почты по требованию) — стандартизированное в RFC 2645 SMTP-расширение, позволяющее проводить ретрансляцию сообщения аутентифицированному пользователю. 
Интернационализация.
Многие пользователи, чей набор символов отличается от латиницы, сталкиваются с требованием адреса электронной почты на латинице. 
Для решения этой проблемы был создан RFC 6531, предоставляющий возможности для интернационализации для SMTP — расширение SMTPUTF8. RFC 6531 предоставляет поддержку многобайтных и не-ASCII символов в почтовом адресе, например: δοκιμή@παράδειγμα.δοκιμή или 测试@测试.测试. Текущая поддержка ограничена, но есть большой интерес в широком распространении RFC 6531 и связанных с ним RFC в странах с обширной базой пользователей, для которых латиница не является родным алфавитом.
SMTP-сервер исходящей почты.
Почтовый клиент должен знать IP-адрес SMTP-сервера, который задается как часть конфигурации (обыкновенно в виде DNS-имени). Сервер будет доставлять исходящие сообщения от лица пользователя. 
Ограничения доступа к серверу исходящей почты.
Администраторам сервера необходимо контролировать то, какие клиенты могут использовать сервер. Это позволяет им бороться с такими злоупотреблениями, как спам. Обычно используются два решения:
Ограничение доступа по местоположению.
В этом случае SMTP-сервер интернет-провайдера не разрешит допуск пользователям «за пределами» сети провайдера. Точнее, сервер может допустить лишь тех пользователей, чей IP-адрес предоставлен данным провайдером, что эквивалентно требованию соединения с Интернетом с помощью этого провайдера. Мобильный пользователь часто может оказаться в сети, отличной от сети своего провайдера, и потому сообщения не будут отправляться.
У данной системы есть несколько разновидностей. Например, SMTP-сервер организации может предоставлять доступ только пользователям той же сети, блокируя остальных пользователей. Также сервер может проводить ряд проверок клиентского IP-адреса. Эти методы обычно использовались организациями и учреждениями, например университетами, для внутреннего пользования сервером. Однако, большая их часть теперь использует описанные ниже методы аутентификации.
Благодаря ограничению доступа определенным адресам, администраторы сервера могут легко определить адрес любого злоумышленника. 
Если пользователь может использовать различные провайдеры для соединения с Интернетом, этот вид ограничения становится нецелесообразным, а изменение настроенного адреса SMTP-сервера исходящей почты непрактично. Крайне желательно иметь возможность использовать такую информацию о настройках клиента, которая не нуждается в изменении.
Аутентификация клиента.
Вместо описанного ранее ограничения по местоположению, современные SMTP-сервера обычно требуют аутентификацию пользователей перед получением доступа. Эта система, будучи более гибкой, поддерживает мобильных пользователей и предоставляет им фиксированный выбор настроенного сервера исходящей почты.
Открытый релей.
Сервер, доступный для широкой сети и не предоставляющий эти виды ограничения доступа, называют открытым релеем. Сейчас такие сервера считаются дурным тоном.
Порты.
Администраторы сервера выбирают, какой порт будут использовать клиенты для ретрансляции исходящей почты - 25 или 587. Спецификации и многие сервера поддерживают и тот, и другой порты. Хотя некоторые сервера поддерживают порт 465 для безопасного SMTP, но предпочтительнее использовать стандартные порты и ESMTP-команды, если необходима защищённая сессия между клиентом и сервером.
Некоторые сервера настроены на отклонение всех ретрансляций по порту 25, но пользователям, прошедшим аутентификацию по порту 587, позволено перенаправлять сообщения на любой действительный адрес. 
Некоторые провайдеры перехватывают порт 25, перенаправляя трафик на свой собственный SMTP-сервер вне зависимости от адреса назначения. Таким образом, их пользователи не могут получить доступ к серверу за пределами провайдерской сети по порту 25.
Некоторые сервера поддерживают аутентифицированный доступ по дополнительному, отличному от 25, порту, позволяя пользователям соединяться с ними, даже если порт 25 заблокирован.
Пример простейшей SMTP-сессии.
C: — клиент, S: — сервер
В результате такой сессии письмо будет доставлено адресату user1@company.tld, но не будет доставлено адресату user2@company.tld, потому что такого адреса не существует.
Дополнительные расширения.
Многие клиенты запрашивают расширения SMTP, поддерживаемые сервером, с помощью команды codice_1 из спецификации расширенного SMTP (RFC 1870). codice_2 используется только в том случае, если сервер не ответил на codice_1. Современные клиенты могут использовать ключ SIZE расширения ESMTP для запроса максимального размера сообщения, которое будет принято. Более старые клиенты и сервера могут попытаться передать чрезмерно большие сообщения, которые будут отклонены после потребления сетевых ресурсов, включая время соединения.
Пользователи могут вручную заранее определить максимальный размер, принимаемый ESMTP-серверами. Клиент заменяет команду codice_2 на codice_1.
smtp2.example.com объявляет, что он примет сообщение размером не больше чем 14,680,064 октетов (8-битных байтов). В зависимости от фактического использования сервера, он может на данный момент не принять сообщение такой величины. В простейшем случае, ESMTP-сервер объявит максимальный SIZE только при взаимодействии с пользователем через codice_1.
Безопасность SMTP и спам.
Изначальная спецификация SMTP не включала средств для аутентификации отправителей. Впоследствии, в RFC 2554 было введено расширение. Расширение SMTP (ESMTP) предоставляет почтовым клиентам механизм задания механизма обеспечения безопасности для сервера, аутентификации и профиля безопасности SASL (Simple Authentication and Security Layer) для последующих передач сообщений. 
Продукты Microsoft реализуют собственный протокол - SPA (Secure Password Authentication) с помощью расширения SMTP-AUTH.
Однако, непрактичность широкого распространения реализации и управления SMTP-AUTH означает, что проблема спама не может быть решена с его помощью. 
Обширное изменение SMTP, так же как и полная его замена, считаются непрактичными из-за огромной инсталлированной базы SMTP. Internet Mail 2000 был одним из претендентов для такой замены.
Спам функционирует благодаря различным факторам, в том числе не соответствующие стандартам реализации MTA, уязвимости в защите операционных систем (усугубляемые постоянным широкополосным подключением), что позволяет спамерам удаленно контролировать компьютер конечного пользователя и посылать с него спам.
Существует несколько предложений для побочных протоколов, помогающих работе SMTP. Исследовательская группа Anti-Spam (The Anti-Spam Research Group - ASRG) - подразделение Исследовательской группы Интернет-технологий работает над почтовой аутентификацией и другими предложениями для предоставления простой аутентификации, которая будет гибкой, легковесной и масштабируемой. Недавняя деятельность Инженерного совета Интернета (IETF) включает в себя MARID (2004), приведший к двум утвержденным IETF-экспериментам в 2005, и DomainKeys Identified Mail в 2006.
Расширения ESMTP.
STARTTLS в RFC 1869 предписывает начинать сессию не командой codice_2, а командой codice_1. В случае, если сервер не поддерживает расширений, то он ответит на codice_1 ошибкой, в этом случае клиент должен послать команду codice_2 и не использовать расширения протокола.
Если же сервер поддерживает ESMTP, то кроме приветствия он сообщит список поддерживаемых расширений протокола SMTP, например:

</doc>
<doc id="983" url="?curid=983" title="SSH">
SSH

SSH ( — «безопасная оболочка») — сетевой протокол прикладного уровня, позволяющий производить удалённое управление операционной системой и туннелирование TCP-соединений (например, для передачи файлов). Схож по функциональности с протоколами Telnet и rlogin, но, в отличие от них, шифрует весь трафик, включая и передаваемые пароли. SSH допускает выбор различных алгоритмов шифрования. SSH-клиенты и SSH-серверы доступны для большинства сетевых операционных систем.
SSH позволяет безопасно передавать в незащищённой среде практически любой другой сетевой протокол. Таким образом, можно не только удалённо работать на компьютере через командную оболочку, но и передавать по шифрованному каналу звуковой поток или видео (например, с веб-камеры). Также SSH может использовать сжатие передаваемых данных для последующего их шифрования, что удобно, например, для удалённого запуска клиентов X Window System.
Большинство хостинг-провайдеров за определённую плату предоставляют клиентам доступ к их домашнему каталогу по SSH. Это может быть удобно как для работы в командной строке, так и для удалённого запуска программ (в том числе графических приложений).
Стандарты и программные реализации.
Первая версия протокола, SSH-1, была разработана в 1995 году исследователем Тату Улёненом из Технологического университета Хельсинки (Финляндия). SSH-1 был написан для обеспечения большей конфиденциальности, чем протоколы rlogin, telnet и rsh. В 1996 году была разработана более безопасная версия протокола, SSH-2, несовместимая с SSH-1. Протокол приобрел ещё большую популярность, и к 2000 году у него было около двух миллионов пользователей. В настоящее время под термином «SSH» обычно подразумевается именно SSH-2, т.к. первая версия протокола ввиду существенных недостатков сейчас практически не применяется.
В 2006 году протокол был утвержден рабочей группой IETF в качестве Интернет‐стандарта.
Однако в некоторых странах (Франция, Россия, Ирак и Пакистан) требуется специальное разрешение в соответствующих структурах для использования определённых методов шифрования, включая SSH.
Распространены две реализации SSH: частная коммерческая и бесплатная свободная. Свободная реализация называется OpenSSH. К 2006 году 80 % компьютеров сети Интернет использовало именно OpenSSH. Частная реализация разрабатывается организацией SSH Communications Security, которая является стопроцентным подразделением корпорации Tectia, она бесплатна для некоммерческого использования. Эти реализации содержат практически одинаковый набор команд.
Протокол SSH-1, в отличие от протокола telnet, устойчив к атакам прослушивания трафика («снифинг»), но неустойчив к атакам «человек посередине». Протокол SSH-2 также устойчив к атакам путем присоединения посередине (), так как невозможно включиться в уже установленную сессию или перехватить её.
Для предотвращения атак «человек посередине» при подключении к хосту, ключ которого ещё не известен клиенту, клиентское ПО показывает пользователю «слепок ключа» (). Рекомендуется тщательно сверять показываемый клиентским ПО «слепок ключа» со слепком ключа сервера, желательно полученным по надёжным каналам связи или лично. 
Поддержка SSH реализована во всех UNIX‑подобных системах, и на большинстве из них в числе стандартных утилит присутствуют клиент и сервер ssh. Существует множество реализаций SSH-клиентов и для не-UNIX ОС. Большую популярность протокол получил после широкого развития анализаторов трафика и способов нарушения работы локальных сетей, как альтернативное небезопасному протоколу Telnet решение для управления важными узлами.
Для работы по SSH нужен SSH-сервер и SSH-клиент. Сервер прослушивает соединения от клиентских машин и при установлении связи производит аутентификацию, после чего начинает обслуживание клиента. Клиент используется для входа на удалённую машину и выполнения команд.
Для соединения сервер и клиент должны создать пары ключей — открытых и закрытых — и обменяться открытыми ключами.
Обычно используется также и пароль.
Примеры использования SSH.
Команда подключения к локальному SSH-серверу из командной строки GNU/Linux или FreeBSD для пользователя pacify (сервер прослушивает нестандартный порт 30000):
Генерация пары ключей (в UNIX-подобных ОС) осуществляется командой 
Генерация пары SSH-2 RSA-ключей длиной 4096 бита программой puttygen под UNIX‐подобными ОС:
Некоторые клиенты, например, PuTTY, имеют и графический интерфейс пользователя.
Для использования SSH в Python существуют такие модули, как python-paramiko и python-twisted-conch.
SSH-туннелирование.
SSH-туннель — это туннель, создаваемый посредством SSH-соединения и используемый для шифрования туннелированных данных. Используется для того, чтобы обезопасить передачу данных в Интернете (аналогичное назначение имеет IPsec). При пересылке через SSH-туннель незашифрованный трафик любого протокола шифруется на одном конце SSH-соединения и расшифровывается на другом.
Практическая реализация может выполняться несколькими способами:
В данном случае Jabber-клиент настраивается на подключение к порту 4430 сервера localhost (если ssh-клиент запущен на той же машине что и Jabber-клиент).
Для создания ssh-туннеля необходима машина с запущенным ssh-сервером и доступом к jabber.example.com. Такая конфигурация может использоваться в случае, если с локальной машины доступ к jabber.example.com закрыт файерволом, но есть доступ к некоторому ssh-серверу, у которого ограничения доступа в Интернет отсутствуют.
Техническая информация о протоколе.
SSH — это протокол прикладного уровня. SSH-сервер обычно прослушивает соединения на TCP-порту 22. Спецификация протокола SSH-2 содержится в RFC 4251. Для аутентификации сервера в SSH используется протокол аутентификации сторон на основе алгоритмов электронно-цифровой подписи RSA или DSA, но допускается также аутентификация при помощи пароля (режим обратной совместимости с Telnet) и даже ip-адреса хоста (режим обратной совместимости с rlogin). Аутентификация по паролю наиболее распространена; она безопасна, так как пароль передаётся по зашифрованному виртуальному каналу. Аутентификация по ip-адресу небезопасна, эту возможность чаще всего отключают. Для создания общего секрета (сеансового ключа) используется алгоритм Диффи — Хеллмана (DH). Для шифрования передаваемых данных используется симметричное шифрование, алгоритмы AES, Blowfish или 3DES. Целостность передачи данных проверяется с помощью CRC32 в SSH1 или HMAC-SHA1/HMAC-MD5 в SSH2.
Для сжатия шифруемых данных может использоваться алгоритм LempelZiv (LZ77), который обеспечивает такой же уровень сжатия, что и архиватор ZIP. Сжатие SSH включается лишь по запросу клиента, и на практике используется редко.

</doc>
<doc id="986" url="?curid=986" title="TCP/IP">
TCP/IP

Стек протоколов TCP/IP — набор сетевых протоколов передачи данных, используемых в сетях, включая сеть Интернет. Название TCP/IP происходит из двух наиважнейших протоколов семейства — Transmission Control Protocol (TCP) и Internet Protocol (IP), которые были разработаны и описаны первыми в данном стандарте. Также изредка упоминается как модель DOD в связи с историческим происхождением от сети ARPANET из 1970 годов (под управлением DARPA, Министерства обороны США).
В июле 1977 Винт Серф и Боб Кан впервые продемонстрировали передачу данных с использованием TCP по трем различным сетям. Пакет прошел по следующему маршруту: Сан-Франциско — Лондон — Университет Южной Калифорнии. В конце своего путешествия пакет проделал 150 тысяч км, не потеряв ни одного бита. В 1978 году Серф, Постел и Дэни Кохэн решили выделить в TCP две отдельные функции: TCP и протокол Интернета (Internet Protocol, IP). TCP был ответственен за разбивку сообщения на дейтаграммы и соединение их в конечном пункте отправки. IP отвечал за передачу (с контролем получения) отдельных дейтаграмм. Вот так родился современный протокол Интернета. А 1 января 1983 года ARPANET перешла на новый протокол. Этот день принято считать официальной датой рождения Интернета.
Протоколы работают друг с другом в стеке (, стопка) — это означает, что протокол, располагающийся на уровне выше, работает «поверх» нижнего, используя механизмы инкапсуляции. Например, протокол TCP работает поверх протокола IP.
Стек протоколов TCP/IP включает в себя четыре уровня:
Протоколы этих уровней полностью реализуют функциональные возможности модели OSI.
На стеке протоколов TCP/IP построено всё взаимодействие пользователей в IP-сетях. Стек является независимым от физической среды передачи данных.
Уровни стека TCP/IP.
Прикладной уровень.
На прикладном уровне (Application layer) работает большинство сетевых приложений.
Эти программы имеют свои собственные протоколы обмена информацией, например, HTTP для WWW, FTP (передача файлов), SMTP (электронная почта), SSH (безопасное соединение с удалённой машиной), DNS (преобразование символьных имён в IP-адреса) и многие другие.
В массе своей эти протоколы работают поверх TCP или UDP и привязаны к определённому порту, например:
Эти порты определены Агентством по выделению имен и уникальных параметров протоколов (IANA).
К этому уровню относятся: DHCP, Echo, Finger, Gopher, HTTP, HTTPS, IMAP, IMAPS, IRC, NNTP, NTP, POP3, POPS, QOTD, RTSP, SNMP, SSH, Telnet, XDMCP.
Транспортный уровень.
Протоколы транспортного уровня (Transport layer) могут решать проблему негарантированной доставки сообщений («дошло ли сообщение до адресата?»), а также гарантировать правильную последовательность прихода данных. В стеке TCP/IP транспортные протоколы определяют, для какого именно приложения предназначены эти данные.
Протоколы автоматической маршрутизации, логически представленные на этом уровне (поскольку работают поверх IP), на самом деле являются частью протоколов сетевого уровня; например OSPF (IP идентификатор 89).
TCP (IP идентификатор 6) — «гарантированный» транспортный механизм с предварительным установлением соединения, предоставляющий приложению надёжный поток данных, дающий уверенность в безошибочности получаемых данных, перезапрашивающий данные в случае потери и устраняющий дублирование данных. TCP позволяет регулировать нагрузку на сеть, а также уменьшать время ожидания данных при передаче на большие расстояния. Более того, TCP гарантирует, что полученные данные были отправлены точно в такой же последовательности. В этом его главное отличие от UDP.
UDP (IP идентификатор 17) протокол передачи датаграмм без установления соединения. Также его называют протоколом «ненадёжной» передачи, в смысле невозможности удостовериться в доставке сообщения адресату, а также возможного перемешивания пакетов.
В приложениях, требующих гарантированной передачи данных, используется протокол TCP.
UDP обычно используется в таких приложениях, как потоковое видео и компьютерные игры, где допускается потеря пакетов, а повторный запрос затруднён или не оправдан, либо в приложениях вида запрос-ответ (например, запросы к DNS), где создание соединения занимает больше ресурсов, чем повторная отправка.
И TCP, и UDP используют для определения протокола верхнего уровня число, называемое портом.
Сетевой уровень.
Сетевой уровень (Internet layer) изначально разработан для передачи данных из одной (под)сети в другую. Примерами такого протокола является X.25 и IPC в сети ARPANET.
С развитием концепции глобальной сети в уровень были внесены дополнительные возможности по передаче из любой сети в любую сеть, независимо от протоколов нижнего уровня, а также возможность запрашивать данные от удалённой стороны, например в протоколе ICMP (используется для передачи диагностической информации IP-соединения) и IGMP (используется для управления multicast-потоками).
ICMP и IGMP расположены над IP и должны попасть на следующий — транспортный — уровень, но функционально являются протоколами сетевого уровня, и поэтому их невозможно вписать в модель OSI.
Пакеты сетевого протокола IP могут содержать код, указывающий, какой именно протокол следующего уровня нужно использовать, чтобы извлечь данные из пакета. Это число — уникальный "IP-номер протокола". ICMP и IGMP имеют номера, соответственно, 1 и 2.
К этому уровню относятся: DVMRP, ICMP, IGMP, MARS, PIM, RIP, RIP2, RSVP
Канальный уровень.
Канальный уровень (Link layer) описывает, каким образом передаются пакеты данных через физический уровень, включая "кодирование" (то есть специальные последовательности бит, определяющих начало и конец пакета данных). Ethernet, например, в полях заголовка пакета содержит указание того, какой машине или машинам в сети предназначен этот пакет.
Примеры протоколов канального уровня — Ethernet, IEEE 802.11 Wireless Ethernet, SLIP, Token Ring, ATM и MPLS.
PPP не совсем вписывается в такое определение, поэтому обычно описывается в виде пары протоколов HDLC/SDLC.
MPLS занимает промежуточное положение между канальным и сетевым уровнем и, строго говоря, его нельзя отнести ни к одному из них.
Канальный уровень иногда разделяют на 2 подуровня — LLC и MAC.
Кроме того, канальный уровень описывает среду передачи данных (будь то коаксиальный кабель, витая пара, оптическое волокно или радиоканал), физические характеристики такой среды и принцип передачи данных (разделение каналов, модуляцию, амплитуду сигналов, частоту сигналов, способ синхронизации передачи, время ожидания ответа и максимальное расстояние).
Сравнение с моделью OSI.
Существуют разногласия в том, как вписать модель TCP/IP в модель OSI, поскольку уровни в этих моделях не совпадают.
К тому же, модель OSI не использует дополнительный уровень — «Internetworking» — между канальным и сетевым уровнями. Примером спорного протокола может быть ARP или STP.
Вот как традиционно протоколы TCP/IP вписываются в модель OSI:
Обычно в стеке TCP/IP верхние 3 уровня модели OSI (прикладной, представительский и сеансовый) объединяют в один — прикладной. Поскольку в таком стеке не предусматривается унифицированный протокол передачи данных, функции по определению типа данных передаются приложению.
Описание модели TCP/IP в технической литературе.
В модели TCP/IP (в отличие от модели OSI) — физический уровень никак не описывается. Тем не менее, в некоторых учебниках, для лучшего понимания, описывается "гибридная модель TCP/IP - OSI" из 5 уровней, содержащая дополнительный — физический уровень.
Следующая таблица показывает различные вариации в описании модели TCP/IP. Количество уровней варьируется от трёх до семи.
Некоторые из моделей в приведённой таблицы взяты из учебников, которые являются вторичными источниками и могут расходиться с RFC 1122 и другими IETF первоисточниками.

</doc>
<doc id="989" url="?curid=989" title="WackoWiki">
WackoWiki

WackoWiki (произносится как "Ва́ккоВики", в документации часто используется просторечное название "Ва́ка") — вики-движок на PHP 5.4. В настоящий момент выпущена версия R5.4.
Основные особенности.
Основное предполагаемое применение, на которое рассчитан движок, — совместная работа группы над некоторым проектом, представляющим собой набор совместно редактируемых документов. В связи с этим в движке реализован достаточно мощный механизм разграничения прав, позволяющий ограничивать возможности пользователей по воздействию на документы (создатель страницы и администратор системы имеют возможность для операций чтения, изменения и комментирования её содержимого назначить список групп и конкретных пользователей, которым данная операция доступна). Также движок поддерживает автоматическое уведомление пользователей об изменениях в наблюдаемых страницах.
Выбранный в движке способ ввода и редактирования текстов типичен для вики-движков: оформление текста делается с помощью несложной системы вики-разметки. Синтаксис разметки минимизирует переключение раскладок клавиатуры. Особенностью данной реализации является автоматический корректор типографики — некоторые действия по оформлению текста при выводе производятся автоматически, без преобразования исходного текста страницы (например, знак «минус», помещённый в тексте между словами и отделённый от них пробелами, автоматически преобразуется в типографское длинное тире, обычные парные кавычки — в кавычки-"ёлочки"). WikiEdit — javascript-расширение обычного поля ввода, позволяет вводить вики-разметку при помощи «горячих клавиш». Реализована довольно широкая номенклатура «форматтеров» — средств для структурированного вывода текстов в различных формализованных видах, таких, как логи IM, исходные тексты программ на языках PHP и SQL и т. п.
Для упрощения оформления ссылок на вики-страницы в движке поддерживается соглашение, по которому выражение, записанное в стиле CamelCase (например, «ВотТакоеСлово»), считается именем страницы и автоматически преобразуется при выводе в ссылку на страницу с соответствующим именем. Это упрощает оформление (чтобы поставить ссылку на страницу с подобным именем, не нужно никакой разметки), что провоцирует соответствующее именование страниц на вики-сайтах, поддерживаемых данным движком.
Для структуризации набора страниц используется механизм «кластеров». Страницы организуются в структуру, подобную древовидной файловой системе; присваиванием новой странице соответствующего имени она может быть помещена в нужное место этой структуры. Поддерживается два вида синтаксиса для описания страниц в кластере: url-like и twiki-like.
Механизм «действий» (по сути — макросов, помещаемых в текст и при выводе автоматически заменяемых на определяемую действием информацию) позволяет автоматически выводить на страницы служебную информацию, например, формировать оглавления страниц, списки содержимого кластеров, перекрёстные ссылки и многое другое.
Система многоязычна — на данный момент доступны 14 языков (en, ru, da, de, el, pl, nl, fr, it, bg, et, es, mo и pt).
История.
Движок WackoWiki был создан на основании более раннего проекта WakkaWiki (разработчики Carlos Zottman и Hendrik Mans), предназначенного для совместной разработки в рамках небольших intranet-проектов. Разработка исходного движка была остановлена на стадии версии 0.1.2, в 2003 году. На его основе было запущено несколько (не менее шести) fork-проектов, одним из которых и стал WackoWiki.

</doc>
<doc id="995" url="?curid=995" title="Telnet">
Telnet

TELNET (сокр. от ) — сетевой протокол для реализации текстового интерфейса по сети (в современной форме — при помощи транспорта TCP). Название «telnet» имеют также некоторые утилиты, реализующие клиентскую часть протокола. Современный стандарт протокола описан в RFC 854.
Выполняет функции протокола прикладного уровня модели OSI.
Введение.
Назначение протокола TELNET в предоставлении достаточно общего, двунаправленного, восьмибитного байт-ориентированного средства связи. Его основная задача заключается в том, чтобы позволить терминальным устройствам и терминальным процессам взаимодействовать друг с другом. Предполагается, что этот протокол может быть использован для связи вида терминал-терминал («связывание») или для связи процесс-процесс («распределенные вычисления»).
Устройство.
Хотя в сессии Telnet выделяют клиентскую и серверную стороны, протокол на самом деле полностью симметричен. После установления транспортного соединения (как правило, TCP) оба его конца играют роль «сетевых виртуальных терминалов» (, NVT), обменивающихся двумя типами данных:
Хотя Telnet-сессии, выполняющейся по TCP, свойственен полный дуплекс, NVT должен рассматриваться как полудуплексное устройство, работающее по умолчанию в буферизированном строковом режиме.
Прикладные данные проходят через протокол без изменений, то есть на выходе второго виртуального терминала мы видим именно то, что было введено на вход первого. С точки зрения протокола данные представляют просто последовательность байтов (октетов), по умолчанию принадлежащих набору ASCII, но при включенной опции "Binary" — любых.
Хотя были предложены расширения для идентификации набора символов , но на практике ими не пользуются.
Все значения октетов прикладных данных кроме \377 (десятичное: 255) передаются по транспорту как есть. Октет \377 передаётся последовательностью \377\377 из двух октетов. Это связано с тем, что октет \377 используется на транспортном уровне для кодирования опций.
Опции.
Протокол предоставляет по умолчанию минимальную функциональность и набор расширяющих её опций. Принцип оговоренных опций требует проводить переговоры при включении каждой из опций. Одна сторона инициирует запрос, а другая сторона может либо принять, либо отвергнуть предложение. Если запрос принимается, то опция немедленно вступает в силу. Опции описаны отдельно от протокола как такового, и их поддержка программным обеспечением произвольна. Клиенту протокола (сетевому терминалу) предписывается отвергать запросы на включение неподдерживаемых и неизвестных опций.
Принтер и клавиатура NVT.
Принтер NVT имеет неопределённую ширину каретки и длину страницы и должен иметь представление всех 95 печатных символов US-ASCII (коды с 32 по 126). Управляющие символы имеют следующие значения:
Поддержка действия символов, помеченных как *, обязательна. Прочие могут производить заданное действие или не производить никакого; одна сторона не обязана предполагать ничего определённого о поддержке конкретных необязательных управляющих символов другой стороной.
Последовательность «CR LF» должна обрабатываться как единый символ перевода строки и использоваться всякий раз, когда требуется их объединённое действие; последовательность «CR NUL» должна использоваться, где требуется только возврат каретки; и использования символа CR следует избегать в других контекстах.
Структура команд Telnet.
Каждая команда TELNET является многобайтовой последовательностью, начинающейся с кода \377 (десятичное: 255) «Interpret as Command» (IAC) и кода команды. Команды, отвечающие за договоренности по опции, являются трехбайтовыми последовательностями, где третий байт является кодом опции. Нижеперечисленные коды и кодовые последовательности имеют соответственный смысл только когда следуют сразу за IAC.
Применения.
Исторически Telnet служил для удалённого доступа к интерфейсу командной строки операционных систем. Впоследствии его стали использовать для прочих текстовых интерфейсов, вплоть до игр MUD и анимированного ASCII-art. Теоретически, даже обе стороны протокола могут являться не только людьми, но и программами.
Иногда клиенты telnet используются для доступа к другим протоколам на основе транспорта TCP, см. Telnet и другие протоколы.
Протокол telnet используется в управляющем соединении FTP, то есть заходить на сервер командой codice_1 для выполнения отладки и экспериментов не только возможно, но и правильно (в отличие от применения клиентов telnet для доступа к HTTP, IRC и большинству других протоколов).
Безопасность.
В протоколе не предусмотрено использование ни шифрования, ни проверки подлинности данных. Поэтому он уязвим для любого вида атак, к которым уязвим его транспорт, то есть протокол TCP. Для функциональности удалённого доступа к системе в настоящее время применяется сетевой протокол SSH (особенно его версия 2), при создании которого упор делался именно на вопросы безопасности. Так что следует иметь в виду, что сессия Telnet весьма беззащитна, если только не осуществляется в полностью контролируемой сети или с применением защиты на сетевом уровне (различные реализации виртуальных частных сетей). По причине ненадёжности от Telnet как средства управления операционными системами давно отказались.
Telnet и другие протоколы.
В среде специалистов по технологиям internet распространено мнение, что клиент Telnet пригоден для осуществления ручного доступа (например, в целях отладки) к таким протоколам прикладного уровня как HTTP, IRC, SMTP, POP3 и прочим текст-ориентированным протоколам на основе транспорта TCP.
Однако, использование клиента telnet в качестве клиента TCP вызывает следующие нежелательные эффекты:
Такие программы, как netcat, действительно обеспечивают чистый доступ к TCP, однако требуются специальные ухищрения (как-то codice_2 на UNIX-системе) для передачи перевода строки как CR LF (что требуется многими протоколами). Обычно клиент Telnet по умолчанию передаёт любой перевод строки как CR LF, независимо от его кодирования в системе клиента.
Также для отладочного доступа к прикладным протоколам (кроме FTP и, собственно, Telnet) можно использовать клиент PuTTY в режиме «Raw» (чистый доступ к TCP) — PuTTY преобразует переводы строки отдельно от поддержки протокола Telnet.

</doc>
<doc id="996" url="?curid=996" title="Вики">
Вики

Ви́ки () — веб-сайт, структуру и содержимое которого пользователи могут самостоятельно изменять с помощью инструментов, предоставляемых самим сайтом. Форматирование текста и вставка различных объектов в текст производится с использованием вики-разметки. На базе этой технологии построена Википедия и другие проекты Фонда Викимедиа.
История.
Впервые термин «вики» для описания веб-сайта был использован в 1995 году Уордом Каннингемом, разработчиком первой вики-системы WikiWikiWeb, «Портлендского хранилища образцов» программного кода, созданной 25 марта 1995 года, который заимствовал слово гавайского языка, означающее «быстрый». Каннингем первоначально описал вики как «простейшую онлайн-базу данных, которая может функционировать». Позже этому слову был придуман английский бэкроним («то, что я знаю, это…»).
Сущность концепции вики.
Уорд Каннингем и его соавтор Бо Леуф в их книге описали сущность концепции вики следующим образом:
Определяющие свойства.
Вики характеризуется такими признаками:
Техническая основа.
Для создания вики-среды необходимо особое ПО — "движок вики". Это частный вид систем управления сайтом, довольно простой в своём устройстве и функциональности, поскольку почти все действия по структурированию и обработке содержимого делаются пользователями вручную.
Работа Википедии и других сайтов Фонда Викимедиа основана на движке MediaWiki.
Фирма Kaltura совместно с фондом Викимедиа разрабатывает расширение, которое позволит пользователям править медиафайлы так же легко, как сейчас правят тексты. Используемую технологию называют «видеовики».
Особенности.
Язык вики поддерживает гиперссылки для создания ссылок между вики-страницами и является более наглядным, чем HTML, и более безопасным, поскольку использование JavaScript и каскадных таблиц стилей ограничено.
Вандализм.
Некоторые вики позволяют изменять их содержимое всем желающим, а не только зарегистрированным пользователям. Подобно тому, как стены зданий и заборы исписывают непристойными надписями и украшают рисунками граффити, в таких вики иногда портят содержимое или добавляют что-то неуместное. Но, в отличие от стен и заборов, в вики легко вернуть содержимое к ранней версии: исправлять легче, чем портить. Если же кто-либо настойчиво и намеренно стремится навредить пользователям вики-сайта, можно закрыть ему возможность вносить правки.

</doc>
<doc id="997" url="?curid=997" title="Википедия">
Википедия

«Википе́дия» (, ) — общедоступная мультиязычная универсальная интернет-энциклопедия со свободным контентом, реализованная на принципах вики. Расположена по адресу www.wikipedia.org.
Владелец сайта — американская некоммерческая организация «Фонд Викимедиа», имеющая 39 региональных представительств. Название энциклопедии образовано от английских слов («вики», технология, лежащая в основе функционирования сайта; в свою очередь заимствовано из гавайского языка, в котором оно имеет значение «быстро») и («энциклопедия»).
Главной особенностью Википедии (благодаря технологии вики, лежащей в основе функционирования сайта) является то, что создавать и редактировать статьи в ней может любой соблюдающий её правила пользователь сети интернет, причём в абсолютном большинстве случаев даже без регистрации на сайте. Все вносимые такими добровольцами в какую-либо статью этой энциклопедии изменения незамедлительно становятся видными всем посетителям сайта. В декабре 2013 года в заявлении ЮНЕСКО по случаю награждения Джимми Уэйлса, основателя Википедии, Золотой медалью Нильса Бора про Википедию было сказано, что она является «символом эпохи взаимодействия, в которую мы живём, и это не просто инструмент, это воплощение мечты, столь же древней, как человеческий интеллект и собрания Александрийской библиотеки».
Википедия создаётся добровольцами со всего мира мировых языках, а также на . Она содержит более 30 миллионов статей. Интернет-сайт Википедии является пятым по посещаемости сайтом в мире — в марте 2013 года его посетили более 517 миллионов человек. Запущенная в январе 2001 года Джимми Уэйлсом и Ларри Сэнгером Википедия сейчас является самым крупным и наиболее популярным справочником в Интернете. По объёму сведений и тематическому охвату Википедия считается самой полной энциклопедией из когда-либо создававшихся за всю историю человечества. Одним из основных достоинств Википедии как универсальной энциклопедии является возможность представления информации на родном языке пользователя, сохраняя, таким образом, ценность этой информации в аспекте культурной принадлежности.
Надёжность и точность Википедии вызывают вопросы. Другая критика указывает на подверженность Википедии , а также добавлению ложной или непроверенной информации. Как следствие, практика использования Википедии судебными инстанциями и иными ведомствами для языкового толкования права подвергается критике. Однако научные исследования свидетельствуют о том, что в Википедии следы актов вандализма обычно оперативно устраняются.
Помимо выполнения функции энциклопедического справочника, Википедия стала главным объектом внимания СМИ как сетевой источник последних новостей по причине того, что информация в статьях постоянно обновляется. Когда популярный американский еженедельник "" признал некоего абстрактного представителя миллионов вкладчиков пользовательского контента в различные сайты, носящего обобщённое имя , «Человеком года» 2006, тем самым отмечая ускоряющийся успех онлайн-сотрудничества и взаимодействия миллионов интернет-пользователей по всему миру, Википедия была наиболее часто упоминающимся проектом Веб 2.0, за которым следовали проекты и .
Русская Википедия (то есть раздел Википедии на русском языке) занимает 7-е место по количеству статей среди всех языковых разделов Википедии (после английской, шведской, немецкой, нидерландской, себуанской и французской Википедий), имея на сегодняшний день в своём составе .
Сущность.
Википедия — свободная общедоступная мультиязычная универсальная интернет-энциклопедия. Может быть полезной самому широкому кругу читателей. Пишется и редактируется добровольцами — всеми желающими пользователями всемирной сети интернет на 276 мировых языках, причём без какой бы то ни было премодерации. Соответственно, состоит из 276 языковых разделов.
Краткие формулировки общепринятых правил русской Википедии можно найти на .
Более подробные перечни правил и руководств — на страницах и .
Модель функционирования.
В отличие от традиционных энциклопедий, таких, как "Encyclopædia Britannica", ни одна статья в Википедии не проходит формального процесса экспертной оценки. Любая статья Википедии может редактироваться как с учётной записи , так даже и без регистрации на проекте (за исключением некоторых страниц, подверженных частому вандализму, которые доступны для изменения только определённым категориям участников или, в крайних случаях, только администраторам Википедии), и при этом все внесённые в статью изменения незамедлительно становятся видными для всех. Поэтому Википедия «не гарантирует истинность» своего содержимого, ведь в любом случае между моментом, когда в статью будет внесена какая-то недостоверная информация и моментом, когда эта информация будет удалена из статьи другим участником Википедии (более компетентным в данной области знания), пройдёт определённое время. (Естественно, для того, чтобы обнаружить и удалить из статьи явный вандализм, нужно намного меньше времени, чем для того, чтобы освободить статью от недостоверной информации, когда подобная недостоверность не является особо очевидной.)
Содержимое Википедии подпадает под действие законов (в частности, авторского права) штата Флориды в США, где находятся серверы Википедии, и нескольких редакционных политик и руководств, которые призваны укрепить идею о том, что Википедия является энциклопедией.
Каждый вклад в Википедию должен быть по теме, являющейся энциклопедической. Тема считается энциклопедической, если она является «» на жаргоне Википедии, то есть, если она получила значительное освещение во вторичных (например, в центральных СМИ или серьёзных научных журналах), которые являются независимыми от предмета темы.
В Википедии должна отражаться информация, которая уже установлена и признана. Иными словами, статья не должна быть «площадкой» для размещения чьих бы то ни было собственных идей, теорий, исследований, изобретений, личных мнений, оценок чего бы то ни было, искусствоведческой критики и т. п. Информация в статьях, которая, скорее всего, будет поставлена под сомнение, требует . Сообщество Википедии сформулировало это как «», выражая тем самым ту мысль, что читателям предоставляется возможность самим проверить истинность той информации, которая представлена в статьях, и сделать свои собственные выводы.
. В рамках статьи Википедии все мнения и точки зрения должны иметь соответствующую долю освещения по данному вопросу, если они имеют свои подтверждения во внешних источниках.
Все участники, они на проекте или нет, могут пользоваться функциями программного обеспечения, на котором работает Википедия. Так на странице «История», прилагающейся к каждой статье Википедии, доступны записи каждой предыдущей редакции статьи (версии с угрозами криминального характера, могут быть удалены). Эта функция позволяет легко сравнить нынешнюю и более старые версии статьи, отменить изменения («откатить статью»), которые участник посчитает неверными, или восстановить потерянное содержимое. Страница «», прилагающаяся к каждой статье Википедии, используется в целях координации работы над текстом этой статьи между разными участниками проекта. Постоянные участники нередко используют «», в который заносят интересные для себя статьи, и, таким образом, могут легко отслеживать все недавние . Компьютерные программы, называемые , в Википедии широко используются для удаления , как только он был произведён, а также чтобы исправить общие ошибки и стилистические проблемы или начать такие статьи, как статьи о географических объектах в стандартном формате из статистических данных.
Критика.
Как и любой глобальный проект, Википедия .
Прежде всего необходимо отметить, что информация, тексты Википедии объективно подвержены .
Основными объектами являются:
Критики Википедии указывают на то, что участники Википедии совместно пишут и пересматривают её правила, политики и руководства, а затем, зачастую чисто формально и очень негибко их придерживаясь, удаляют, аннотируя тегами комментариев, или изменяют материалы , формально не отвечающие этим правилам, политикам и руководствам. (См. также и .)
Сообщество Википедии было также описано как «подобное культу», хотя и не всегда с исключительно негативной коннотацией и было раскритиковано за провал привлечения неопытных пользователей.
Также обращают внимание на системную предвзятость, несбалансированность в освещении тем, а также критикуют её политику предпочтения консенсуса между участниками профессионализму отдельных участников в редакционном процессе.
Открытый характер модели является центральным для большой части . Например, исходя из этого, можно упрекать Википедию в том, что читатель статьи не может быть уверен без ознакомления со страницей её «истории», была ли эта статья? Критики утверждают, что редактирование статей неэкспертами подрывает качество представленного в статье материала. Поскольку участники обычно, как правило, переписывают или редактируют отдельные небольшие части , а не всю её целиком, высоко- и низкокачественные материалы могут идти вперемешку в пределах одной статьи. Историк Рой Розенцвейг отметил: «В целом, написание является „ахиллесовой пятой“ Википедии. Комитеты редко пишут хорошо, и статьи Википедии часто имеют изменчивое качество, что является результатом связывания вместе предложений или абзацев, написанных разными людьми». Всё это привело к вопросу о надёжности Википедии в качестве источника .
Модель Википедии позволяет редактировать её статьи всем желающим и полагается на большую группу благонамеренных редакторов в преодолении проблем, вызванных сомнительными редакторами. Она полагается на то, что подавляющее большинство участников Википедии предполагает добрые намерения. Модели редактирования Википедии свойственна возможность добавления низкокачественной информации. Возможность анонимного редактирования может быть не только большим благом для проекта, но и источником некоторого вреда.
Википедия может подвергаться воздействию вандалов.  — явно вредительское добавление, удаление или изменение содержания, совершённое умышленно в целях скомпрометировать достоверность и авторитетность энциклопедии. В основном вандализм проявляется в замене содержимого статей Википедии на ругательства, граффити, заведомо ложные данные или другое содержимое, абсолютно не имеющее отношения к теме статьи. В случаях множественного вандализма к некоторым страницам Википедии может быть применена .
Являясь общедоступным интернет-справочником, Википедия также содержит материалы, которые другие участники Википедии могут признать нежелательными, оскорбительными или порнографическими. Например, в 2008 году Википедия отклонила массовое онлайн-обращение против включения изображения Мухаммеда в её английский раздел, сославшись на свою редакционную политику. Наличие в Википедии материалов, «неудобных» с политической точки зрения, также побудило КНР заблокировать доступ к части Википедии для китайских пользователей. (См. также Блокирование Википедии британской организацией Internet Watch Foundation.)
Однако в свободной энциклопедии Википедия (свободной как с точки зрения редактирования её статей, так и с точки зрения возможности внесения предложений по редактированию её нынешних правил) существуют некие механизмы саморегуляции, которые, опираясь на глобальный консенсус большинства участников Википедии, обеспечивают постоянное поддержание достаточно низкого уровня отдельных отрицательных аспектов, всегда присутствующих в Википедии.
См. также и .
История.
Википедия началась как дополнительный проект для «Нупедии» (), бесплатного англоязычного энциклопедического онлайн-проекта, чьи статьи были написаны специалистами и рецензированы в рамках формального процесса. «Нупедия» была основана 9 марта 2000 года как собственность Bomis, Inc., компании, владеющей одноимённым веб-порталом. Ключевыми фигурами были Джимми Уэйлс, Bomis и Ларри Сэнгер, главный редактор «Нупедии», а затем Википедии. «Нупедия», первоначально лицензированная в соответствии со своей лицензией , перешла на перед основанием Википедии по настоянию Ричарда Столлмана.
Основатели Википедии — Ларри Сэнгер и Джимми Уэйлс
. В то время как Уэйлсу приписывается определение цели создания публично редактируемой энциклопедии, Сэнгеру обычно приписывают контр-интуитивную стратегию использования вики для достижения этой цели. 10 января 2001 года Ларри Сэнгер в списке рассылки «Нупедии» предложил применить концепцию «вики» в отношении «Нупедии», чтобы ускорить её развитие. Это привело к созданию веб-сайта Википедии, которая изначально задумывалась для предварительной разработки материалов, которые потом были бы размещены в «Нупедии». Википедия была официально открыта 15 января 2001 года как одиночный англоязычный раздел на www.wikipedia.com и была анонсирована Сэнгером в списке рассылки «Нупедии». Политика «нейтральной точки зрения» в Википедии была введена в первые месяцы и была аналогична ранней политике «непредубеждения» в «Нупедии». В других отношениях, первоначально существовало относительно немного правил, и Википедия управлялась независимо от «Нупедии».
Википедия получила ранних участников из «Нупедии», сообщений на и за счёт индексации поисковыми машинами. Она выросла до примерно статей и 18 языковых разделов к концу 2001 года. К концу 2002 года она достигла 26 языковых разделов, 46 к концу 2003 года и 161 к последним дням 2004 года. «Нупедия» и Википедия сосуществовали, пока серверы первой не были навсегда отключены в 2003 году (текст «Нупедии» был включён в Википедию). Английская Википедия прошла отметку в 2 млн статей 9 сентября 2007 года, что делает её крупнейшей энциклопедией, собравшей всё и затмившей даже энциклопедию Юнлэ (1407 год), которая держала рекорд ровно 600 лет.
Ссылаясь на опасения по поводу коммерческой рекламы и отсутствие контроля в осознанном англоцентризме Википедии, пользователи испанской Википедии выделились из Википедии для создания "" в феврале 2002 года. Позднее в том же году Уэйлс объявил о том, что Википедия не будет отображать рекламу, и её веб-сайт был перемещён на wikipedia.org. Некоторые другие проекты выделились из Википедии по редакционным причинам. не требует нейтральной точки зрения и разрешает оригинальные исследования. Новые проекты, вдохновлённые Википедией, — такие, как , , и , — были начаты в ответ на осознание ограничений Википедии, таких, как политика в области рецензирования, оригинальных исследований и коммерческой рекламы.
Фонд Викимедиа () был создан из Википедии и «Нупедии» 20 июня 2003 года. Он использовался в для регистрации товарного знака «» 17 сентября 2004 года. Знаку был предоставлен зарегистрированный статус 10 января 2006 года. 16 декабря 2004 года товарный знак получил защиту со стороны Японии, 20 января 2005 года — в Европейском союзе. Есть планы лицензировать использование торговой марки Википедии для некоторых продуктов, таких, как книги и DVD. В ноябре 2015 года получила Премию Эразма.
Сообщество.
Пользователи Википедии — это:
Участники Википедии образуют . Структура этого сообщества — , то есть, это своего рода некая структура власти.
Участники Википедии с хорошей репутацией в сообществе могут баллотироваться на один из многих уровней добровольного руководства; это начинается с «администратора», самой большой группы привилегированных пользователей (), которые имеют возможность удаления страниц, блокировки статей от изменений в случае вандализма или редакторских споров и блокировки участников. Несмотря на название, администраторы не имеют никаких особенных привилегий в процессе принятия решений, и им запрещено использовать свои полномочия для урегулирования споров. Роли администраторов часто описываются как «уборка» и в основном ограничиваются внесением правок, имеющих эффект в масштабах всего проекта (и поэтому запрещённых для обычных редакторов, чтобы минимизировать нарушения), а также блокировкой пользователей для предотвращения разрушительных правок, таких как вандализм. 
Поскольку Википедия развивается на основе нетрадиционной модели составления энциклопедии, вопрос «Кто пишет „Википедию“?» стал одним из наиболее часто задаваемых вопросов по проекту, часто со ссылкой на другие проекты Веб 2.0, такие как Digg или, например, News2 и Хабрахабр. Джимми Уэйлс однажды утверждал, что только «сообщество… преданная группа нескольких сотен добровольцев» делает основной вклад в Википедию и что этот проект является поэтому «очень похожим на любую традиционную организацию». Это было позже оспорено Аароном Шварцем, который отметил, что ряд просмотренных им статей имели крупные части содержания, внесёнными участниками с малым количеством правок.
Исследование учёных из Дартмутского колледжа, проведённое в 2007 году, установило, что анонимы и те пользователи, которые редко делают вклад в Википедию, являются таким же надёжным источником знаний, как и те, которые зарегистрированы на сайте. Хотя некоторые участники сильны в своей области, Википедия требует, чтобы даже их вклады были подкреплены опубликованными и поддающимися проверке источниками. Это предпочтение консенсуса наличию образования было отмечено как «анти-элитарность».
В августе 2007 года сайт, разработанный аспирантом по компьютерным наукам Вирджилом Гриффитом и названный , начал публичное функционирование. прослеживает источники миллионов изменений, произведённых в Википедии анонимными редакторами, и показывает, что многие из этих правок делаются из корпораций или правительственных учреждений в статьях, связанных с ними, их персоналом или их работой, из которых они пытаются удалить критику. 
В 2003 году в исследовании о Википедии как о сообществе студент Andrea Ciffolilli утверждал, что низкие операционные затраты участия в вики создают катализатор для совместного развития и что подход «творческого развития» поощряет участие. В своей книге «Будущее Интернета и как его остановить» 2008 года Jonathan Zittrain из Оксфордского института Интернета и Гарвардской школы права ссылается на Википедию как социологическое исследование в том, как открытое сотрудничество способствовало инноваторству в Сети. В 2007 году исследователь Одед Нов опубликовал работу о мотивации, которой руководствуются википедисты. Нов считает, что участники редактируют Википедию, исходя из следующих видов мотивации: защитной («когда я правлю „Википедию“, я чувствую себя не так одиноко»), желание внести вклад в общее дело («мне кажется, важно помогать другим»), мотивации карьеры («я могу получить новые контакты, которые могут помочь в моем бизнесе или карьере»), социальной, познавательной («написание „Википедии“ позволяет мне взглянуть на вещи по-новому»), желание быть кому-то нужным («когда я правлю „Википедию“, я чувствую себя востребованным»), потребность в положительных эмоциях («писать/править „Википедию“ — это весело»), идеологической.
Управление.
Фонд Викимедиа и отделения «Викимедиа».
Википедией владеет и финансирует «Фонд Викимедиа», некоммерческая организация, которая также управляет и другими вики-проектами. Отделения «Викимедиа», местные ассоциации википедистов, также участвуют в продвижении, развитии и финансировании проекта.
Программное и аппаратное обеспечение.
Функционирование Википедии зависит от  — программного механизма для веб-сайтов, работающих по технологии «вики». написан на PHP и для хранения данных использует реляционную базу данных (можно использовать MySQL, PostgreSQL, SQLite); поддерживает использование программ memcached и Squid. предоставляет интерфейс работы с базой страниц, разграничение прав доступа к администрированию системы, возможность обработки текста как в собственном формате, так и в форматах HTML и TeX (для формул), возможность загрузки изображений и других файлов, а также другие возможности. Гибкая система расширений позволяет пользователям добавлять собственные новые возможности и программные интерфейсы. лицензирован под и используется всеми проектами Викимедиа, а также многими другими вики-проектами. Первоначально Википедия работала на , написанном на Perl Клиффордом Адамсом («Фаза I»), который первоначально требовал для указания ссылок на статьи; используемый сейчас стиль двойных скобок был включен позже. Начиная с января 2002 года («Фаза II»), Википедия начала работать на движке PHP wiki с базой данных MySQL; это ПО было сделано на заказ для Википедии Магнусом Манске. ПО «Фазы II» было неоднократно модифицировано с учётом экспоненциально растущего спроса. В июле 2002 года («Фаза III») Википедия перешла на третье поколение программного обеспечения, движок , первоначально написанный Даниэлем Ли Крокером.
Википедия в настоящее время работает на выделенных кластерах серверов Linux (в основном Ubuntu), с несколькими машинами OpenSolaris для ZFS. Вики-проекты Фонда Викимедиа, самым крупным из которых является Википедия, по состоянию на март 2013 года поддерживались работой нескольких кластеров состоящих из 974 серверов.
Википедия работала на одном сервере до 2004 года, когда настройка сервера была расширена в распределённую многоуровневую архитектуру. В январе 2005 года проект работал на 39 выделенных серверах, расположенных в штате Флорида. Эта конфигурация включала в себя один главный сервер баз данных с запущенным MySQL, несколько подчинённых серверов баз данных, 21 веб-сервер с запущенным и 7 серверов кэша Squid.
Википедия получает от до запросов страниц в секунду, в зависимости от времени суток. Запрос страницы сначала передаётся внешнему уровню кэширующих серверов Squid. Запросы, которые не могут быть обслужены кэшем Squid, направляются на балансирующие нагрузку сервера с запущенным ПО , который, в свою очередь, передаёт запрос на один из веб-серверов Apache для рендеринга (перевода в HTML) страниц из базы данных. Веб-сервера доставляют страницы по запросу, выполняя рендеринг страницы для всех языковых разделов Википедии. Для увеличения скорости в дальнейшем, переведённые в HTML страницы некоторое время хранятся в распределённом кэше в памяти. Это позволяет пропустить процесс рендеринга страницы для наиболее часто запрашиваемых статей.
Языковые разделы.
На 30 июня 2015 года существует 290 , из них 51 раздел содержит более статей, а 237 — более 1000 статей. Посещаемость разделов изменяется со временем. К октябрю 2009 года русская Википедия вышла на 5-ю позицию в списке посещаемости. По состоянию на август 2013 года русская Википедия находилась на 4-м месте. Первые 5 разделов в это время имели следующий процент посещений, от общего числа: английская ; испанская ; немецкая ; русская ; японская .
Википедия является сетевой энциклопедией, поэтому участники одного и того же языкового раздела могут использовать различные диалекты и могут быть из разных стран (как в случае с английским разделом). Эти различия могут привести к некоторым конфликтам по различным написаниям слов (например, ' vs. ') или по точкам зрения. Несмотря на то, что различные языковые разделы придерживаются глобальной политики, такой как нейтральная точка зрения, они расходятся по некоторым вопросам политики и практики, особенно по вопросу, могут ли изображения, которые не лицензируются по свободной лицензии, использоваться согласно требованиям добросовестного использования.
Джимми Уэйлс описал Википедию как «усилия по созданию и распространению свободной энциклопедии самого высокого качества для каждого человека на планете на его собственном языке». Несмотря на то, что функционирование каждого языкового раздела более или менее самостоятельно, предприняты некоторые усилия для контроля всех разделов. Они координируются частично Мета-вики, вики Фонда Викимедиа, посвящённой поддержанию всех его проектов (Википедия и др.). Например, Мета-вики предоставляет всех языковых разделов Википедии и поддерживает . Список касается основного содержания предметов: биография, история, география, общество, культура, наука, технология, продовольствие и математика. Что касается остального, то нередко для статей, тесно связанных с конкретным языком, нет копии в другом разделе. Например, статьи о малых городах США могут быть доступны только на английском.
Переводные статьи представляют лишь небольшую долю статей в большинстве разделов, в частности потому, что автоматизированный перевод статей не разрешён. Статьи, доступные более чем на одном языке, могут иметь «интервики»-ссылки, которые связывают статьи с их копиями в других разделах.
Лицензия текстов и медиафайлов к статьям.
Большая часть текстового содержания Википедии доступна в соответствии с лицензиями () и () — копилефт-лицензиями, разрешающими дальнейшее распространение, создание производных работ, а также коммерческое использование содержания, в то время как авторы сохраняют своё авторское право на свои работы. Часть текстов доступна только под лицензией , о чём должна иметься пометка в самой статье, на её странице обсуждения или в истории правок. Положение о том, что Википедия — это просто услуга размещения этих текстов, было успешно использовано в качестве защиты в суде.
Изначально использовалась только лицензия , однако позднее был осуществлён переход на лицензию , так как , первоначально предназначенная для руководств к программному обеспечению, сложно использовать для онлайн-справочников. 3 ноября 2008 года в ответ на просьбу Фонда Викимедиа () выпустила новую версию , разработанную специально для того, чтобы позволить Википедии перелицензировать её материалы под до 1 августа 2009 года. Википедия и её братские проекты провели широкий референдум в сообществе относительно того, стоит ли перейти на другую лицензию. В результате переход был осуществлён.
Обработка мультимедийных файлов (например, файлов изображений) различна в разных языковых версиях. Некоторые языковые разделы (например, английская Википедия) включают несвободные файлы в соответствии с доктриной добросовестного использования, в то время как другие предпочли не делать этого. Это происходит отчасти из-за разницы в законах об авторском праве в разных странах, например, понятие добросовестного использования не существует в японском авторском праве. Медиафайлы, доступные в соответствии с лицензиями свободного содержания (например, от ), распределяются между языковыми версиями Викисклада () — общего централизованного хранилища мультимедийных файлов, включаемых в страницы проектов Фонда Викимедиа.
Издания.
На CD и DVD.
Несколько языковых версий опубликовали подборку статей Википедии в версии на оптических дисках. Английская версия, , содержала около 2000 статей. Ещё одна английская версия, разработанная Linterweb, содержит «1988+ статей». Польская версия содержит около статей. Существует также несколько немецких версий.
Первое издание немецкой Википедии было выпущено на CD в декабре 2004 года и стоило 3 €. Было разослано около дисков. Второе издание вышло в апреле 2005 года как на CD, так и на DVD. Диск содержал статей и изображений, находящихся в общественном достоянии. Directmedia продала дисков по каждый. В декабре того же года появилось третье издание. В него вошли DVD ( статей и изображений) и книга объёмом 139 страниц, в которой рассказывалось, что такое Википедия, а также излагались её история и основные правила. Диск и книга были изданы компанией Zenodot Verlagsgesellschaft mbH и продавались по той же цене, что и предыдущее издание. Диск можно было бесплатно скачать в Интернете. В январе 2006 года Zenodot анонсировала выпуск печатного издания Википедии в 100 томах, по 800 страниц каждый. Последний том планировалось выпустить в 2010 году. Позже было объявлено, что проект заморожен. В декабре 2006 года был создан обновлённый образ диска. DVD не издавался, но доступен для скачивания с сайта dvd.wikimedia.org.
DVD-диск с английской Википедией, содержащий статьи по основным темам, был выпущен в сотрудничестве с компанией Linterweb в январе 2007 года и обозначен как версия 0.5. В качестве оболочки использовалась среда Kiwix, программное обеспечение с открытым исходным кодом, специально написанное для данного издания. В данный момент ведётся подготовка версий 0.7 и 1.0.
Последним на данный момент был издан DVD польского раздела. Его выпустило издательство Helion в конце июля 2007 года. Работа над изданием велась более года, на основе дампа от 4 июня 2006 года. База статей, имевшихся на тот момент, была скопирована на отдельный сервер, и их дорабатывали 13 оплачиваемых редакторов и около 20 добровольцев. В итоге на диск вошло около статей и изображений. Стоимость диска на момент выпуска составляла 39 злотых.
На бумаге.
В 2009 году художник Роб Мэттьюс () распечатал Википедии на страниц и сшил их в книгу с твёрдым переплётом. Как он написал в пояснении к этому своему проекту:
В 2010 году английский писатель Джеймс Брайдл () выпустил в единственном экземпляре 12-томное издание размером 7000 страниц, озаглавленное «Иракская война: Историография изменений в Википедии», в котором отображена каждая правка в англоязычной статье про Иракскую войну с декабря 2004 года по ноябрь 2009 года.
Значение Википедии в современном мире.
В дополнение к логистическому росту количества статей, Википедия неуклонно приобретала статус общего справочного сайта с момента её создания в 2001 году. На январь 2015 года, согласно Alexa, Википедия занимала 6-е место среди самых посещаемых сайтов в мире, в Рунете — 11-е место. В первой десятке Википедия является единственным некоммерческим сайтом. Рост Википедии был вызван её доминирующей позицией в результатах поиска . Около 50 % трафика с поисковых систем в Википедию пришло с , большая часть этого трафика связана с научными исследованиями. В апреле 2007 года проектом было установлено, что треть американских интернет-пользователей консультируются с Википедией. В октябре 2006 года сайт по оценкам имел гипотетическую рыночную стоимость в долларов, если бы он запустил рекламу.
Содержание Википедии также используется в научных исследованиях, книгах, конференциях и судебных делах. Сайт Парламента Канады ссылался на статью Википедии об однополых браках в разделе «Ссылки по теме» в списке «читать далее» к . Утверждения энциклопедии всё чаще используется в качестве источника организациями, такими как Федеральный суд США и Всемирная организация интеллектуальной собственности — хотя в основном в качестве "поддерживающей информации", а не информации, имеющей решающее значение для дела. Содержание Википедии было цитировано в качестве источника и ссылки в некоторых докладах Разведывательного ведомства США. В 2013 году венгерские учёные показали, что с помощью Википедии можно предсказывать популярность и кассовые сборы фильмов, ещё не вышедших в прокат.
Википедия была также использована в качестве источника в журналистике, иногда без указания авторства, а также несколько журналистов были уволены за плагиат из Википедии.
В июле 2007 года Википедии был посвящён 30-минутный документальный фильм на . Он утверждал, что количество ссылок на Википедию в популярной культуре таково, что этот термин является одним из группы избранных существительных XXI века, которые так узнаваемы (, , ), что они больше не нуждаются в объяснениях и находятся на одном уровне с такими терминами XX века, как или . Существует много пародий на открытость Википедии с персонажами, вандализирующими или изменяющими статьи онлайн-энциклопедии. Примечательно, что комик Стивен Колберт пародировал Википедию или ссылался на Википедию в многочисленных эпизодах его шоу "" и придумал соответствующий термин «».
Википедия также создала формы воздействия на средства массовой информации (СМИ). Некоторые СМИ высмеивают восприимчивость Википедии к вставкам неточностей — например, статья на первой странице в "" в июле 2006 года под названием «„Википедия“ празднует 750 лет американской независимости». Другие могут опираться на утверждение Википедии о том, что любой может править, — например, «», эпизод сериала «Офис», где персонаж Майкл Скотт заявил: «„Википедия“ — лучшая вещь на свете. Любой в мире может написать всё, что хочет, по любому предмету; таким образом вы знаете, что получаете лучшую возможную информацию». Пародируются также правила Википедии, например, в комиксе "xkcd" «».
Первый документальный фильм о Википедии, озаглавленный «», был выпущен в 2010 году. 
28 сентября 2007 года итальянский политик Франко Гриллини инициировал парламентский запрос с министром культурных ресурсов и деятельности о необходимости свободы панорамы. Он сказал, что отсутствие такой свободы заставило Википедию, «седьмой сайт, с которым больше всего консультируются», запретить все изображения современных итальянских зданий и искусства, и заявил, что этим был нанесён очень серьёзный ущерб туристической отрасли. 16 сентября 2007 года " сообщила о том, что Википедия стала координационным центром избирательной кампании в США в 2008 году, заявив: «Введите имя кандидата в , и среди первых результатов будет страница Википедии, что делает эти статьи, возможно, такими же важными, как любое объявление в определении кандидата. В настоящее время уже президентские статьи редактируются, расчленяются и обсуждаются бесчисленное множество раз каждый день». В октябре 2007 года статья Reuters, озаглавленная «Страница Википедии — последний символ статуса», сообщила о том, как наличие статьи в Википедии подтверждает статус знаменитости.
Википедия выиграла две крупные награды в мае 2004 года. Первой была Золотая Ника цифрового сообщества на ежегодном конкурсе Prix Ars Electronica; она была получена вместе с грантом (; ) и предоставлением приглашения присутствовать на PAE Cyberarts Festival в Австрии позднее в том же году. Второй была судейская награда в категории «сообщество». Википедия была также номинирована на «Лучшую практику» . 26 января 2007 года Википедия была также удостоена четвёртым высшим брендом в рейтинге читателей , получив 15 % голосов в ответ на вопрос: «Какая марка имела наибольшее влияние на нашу жизнь в 2006 году?».
В сентябре 2008 года Википедия получила награду «Квадрига» " от вместе с Борисом Тадичем, Eckart Höfling и Питером Габриэлем. Награда была вручена Джимми Уэйлсу Дэвидом Вайнбергером.
В ноябре 2010 года Википедия была удостоена награды Премии Рунета.
Хотя Википедия позиционирует себя как вторичный источник информации, 2008 год был отмечен использованием материалов из Википедии как с атрибутированием к источнику, так и без ссылки.
27 января 2013 года в «Циркуляре малых планет» была сделана запись, согласно которой «Астероид 274301», открытый украинскими астрономами 25 августа 2008 года, был назван «274301 Wikipedia». Открытие было сделано в «Андрушевской астрономической обсерватории» находящейся в Житомирской области.
22 октября 2014 года в польском городе Слубице был открыт первый в мире памятник Википедии.
Родственные проекты.
Фонд Викимедиа, компания-владелец и организатор Википедии, поддерживает и другие проекты по созданию свободных публикаций в Интернете:

</doc>
<doc id="1003" url="?curid=1003" title="Психология">
Психология

Психоло́гия (от  — «душа»;  — «учение») — наука, изучающая закономерности возникновения, развития и функционирования психики и психической деятельности человека и групп людей. Объединяет в себе гуманитарный и естественнонаучный подходы.
Включает в себя "фундамента́льную психологию", выявляющую факты, механизмы и законы психической деятельности, "прикладну́ю психологию", изучающую, с опорой на данные "фундаментальной" психологии, психические явления в естественных условиях, и "практи́ческую психологию", занимающуюся применением психологических знаний на практике.
Предмет психологии.
Предмет психологии понимается различно в течение истории и с позиции различных направлений психологии.
Объект психологии.
Объект психологии — это совокупность различных носителей психических явлений, основными из которых являются поведение, деятельность, взаимоотношения людей в больших и малых социальных группах.
Отрасли психологии.
Современная психология представляет собой многоотраслевую науку. Отрасли психологии являются относительно самостоятельными развивающимися направлениями. Их условно разделяют на фундаментальные (общие) и прикладные (специальные).
Фундаментальные отрасли психологии имеют общее значение в изучении психических явлений. Это базис, который объединяет все отрасли психологии, а также служит основой их развития. Фундаментальные отрасли, как правило, называют термином «общая психология». Основными понятиями, которые рассматривает общая психология, являются: познавательные процессы (ощущения, восприятия, внимание, представления, память, воображение, мышление, речь, эмоции, воля), психические свойства (способности, мотивация, темперамент, характер) и психические состояния. Возникновение общей психологии в качестве фундаментальной отрасли связывают с именем С. Л. Рубинштейна, создавшего в 1942 г. фундаментальный труд «Основы общей психологии».
Прикладными называют отрасли психологии, которые имеют практическое значение. В число таких отраслей входят, например, педагогическая психология, психология развития, дифференциальная психология, социальная психология, клиническая психология, юридическая психология, психология спорта и многие другие.
Место психологии в системе наук.
Положение психологии связано с двумя разноплановыми традициями. Первая представляет собой её стремление стать естественнонаучной дисциплиной, вторая — стремление занять место житейской психологии. Как указывают В. В. Петухов и В. В. Столин, обе цели принципиально недостижимы. В сравнении с житейской психологией научная представляет собой специальную дисциплину со своим понятийным и методологическим аппаратом для изучения психической жизни. Вместе с этим психология имеет особенности, связанные с тем фактом, что объект её изучения способен к внутреннему отражению своих состояний. Научная и житейская психология сохраняют принципиальные различия, но при этом взаимосвязаны друг с другом.
Психология имеет связь как с естественными, так и с гуманитарными науками. Связь психологии с естественными науками имеет в своей основе биологическую природу человека. Однако особенностью человека является то, что он является социальным существом, психические явления которого во многом социально обусловлены. По этой причине психологию принято относить к гуманитарным наукам. Отличительной особенностью психологии является слияние объекта и субъекта познания.
Взаимосвязь психологии и современных наук.
Вопросы психологии долгое время рассматривались в рамках философии. Только в середине XIX века психология стала самостоятельной наукой. Но отделившись от философии, она продолжает сохранять тесную связь с ней. В настоящее время существуют научные проблемы, которые изучаются как психологией, так и философией. К числу таких проблем относятся понятия личностного смысла, цели жизни, мировоззрение, политические взгляды, моральные ценности и другое. Психология использует экспериментальные методы для проверки гипотез. Однако есть вопросы, которые невозможно решить экспериментальным путём. В таких случаях психологи могут обращаться к философии. К числу философско-психологических проблем относятся проблемы сущности и происхождения человеческого сознания, природы высших форм человеческого мышления, влияние общества на личность и личность на общество.
А. Г. Маклаков указывает, что, хотя долгое время философия разделялась на материалистическую и идеалистическую, сейчас наметилось сближение этих течений философии, и можно говорить об одинаковой значимости для психологии обоих направлений. Материалистическая философия является основной при рассмотрении проблем деятельности и происхождения высших психических функций. Идеалистическая философия, по мнению Маклакова, ставит такие проблемы как ответственность, совесть, смысл жизни, духовность. Маклаков отмечает, что использование в психологии обоих направлений (материалистического и идеалистического) «наиболее полно отражает двойственную сущность человека, его биосоциальную природу».
По мнению А. Г. Маклакова, к числу проблем, которые можно решить только при сотрудничестве психологов и философов, относятся проблемы эпистемологии. Некоторые теории психологии имеют психолого-философский характер, как, например, теоретические работы неофрейдистов. К примеру, работы Эриха Фромма используются в психологии, социологии и философии.
Психология тесно связана с общественными науками. Она имеет много общего с социологией. Социология заимствует из социальной психологии методы изучения личности и человеческих взаимоотношений. Психология широко использует такие методы сбора научной информации как опрос и анкетирование, которые традиционно считаются социологическими. Существуют различные концепции, которые психология и социология перенимают друг у друга. Множество проблем, такие как национальная психология, психология политики, проблемы социализации и социальных установок психологи и социологи решают совместно.
Важны для психологии также такие общественные науки как педагогика и история. Примером синтеза истории и психологии является теория культурно-исторического развития высших психических форм Л. С. Выготского. Использование в психологии исторического метода заключается в изучении фило- и онтогенетического развития психических явлений от элементарных к сложным формам. В основе сближения истории и психологии лежит концепция о том, что современный человек является продуктом развития человечества.
Психология тесно связана с медицинскими и биологическими науками. Использование в психологии достижений этих наук основано на том, что большинство психических явлений и психических процессов физиологически обусловлены. Известны факты взаимного влияния психического и соматического друг на друга. Психическое состояние оказывает влияние на физиологическое. Особенности психики могут способствовать развитию определённых заболеваний. Обратная связь состоит в том, что хронические заболевания влияют на психическое состояние.
Психология активно взаимодействует с большим числом наук и отраслей научного знания. Это взаимодействие проявляется, прежде всего, в создании отраслей психологии, являющихся смежными, прикладными отраслями научного знания, исследующими закономерности объективной действительности с позиции предмета психологии. Например, связь психологии с антропологией устанавливается благодаря существованию такой фундаментальной отрасли психологии, как психологии личности; связь психологии с психиатрией выражается в существовании таких отраслей, как патопсихология, клиническая психология, психосоматика, психология аномального развития; связь с нейробиологией, анатомией и физиологией центральной нервной системы обнаруживается реализуется через нейропсихологию, психофизиологию; связь с генетикой выражается в создании психогенетики; с дефектологией — в существовании специальной психологии; лингвистика, взаимодействуя с психологией, рождает психолингвистику; с юриспруденцией связь отчётливо проявляется в таких отраслях психологии, как судебная психология, психология жертвы, криминальная психология, психология расследования преступлений.
Дискуссии по поводу научного статуса психологии.
Научный статус психологии на протяжении длительного времени является предметом обширных дискуссий. Как отметил в 2005 году член-корреспондент РАН, заместитель директора Института психологии РАН А. В. Юревич, психология занимает промежуточное положение между наукой и паранаукой.
Большинство специалистов сходится во мнении, что в настоящее время психология представляет собой скопление различных фактов, теорий, предположений, методологий и целей. Среди психологов нет консенсуса ни относительно того, насколько научна современная психология, ни относительно того, может ли она быть научной в принципе. Даже среди тех, кто считает возможным приведение психологии к научным стандартам, нет согласия по поводу того, к какому типу наук её следует отнести.
Американский психолог Б. Р. Хегенхан в 2009 году указал, что учёные дают целый ряд ответов на вопрос, является ли психология наукой, и содержание этих ответов зависит от того, кто их даёт и какой аспект психологии при этом подразумевает:
Научный статус психологии служит предметом полемики в современной дискуссии между модернизмом и постмодернизмом.
Многие психологические теории не соответствуют критерию Поппера, поскольку они не могут быть опровергнуты из-за размытости формулировок, а также из-за того, что на их основе невозможно делать научные прогнозы. Хотя таким теориям не хватает научной строгости, они часто оказываются полезными. Примерами могут служить теории Зигмунда Фрейда и Альфреда Адлера. Сам Поппер полагал, что доказательство ненаучности и метафизичности теории совсем необязательно делает такую теорию бесполезной и бессмысленной.
Т. В. Корнилова и С. Д. Смирнов отметили, что из-за параллельного существования в психологии множества парадигм и постоянного появления новых мини-парадигм создаётся эффект перманентного кризиса и перманентной революции в данной науке. Этот факт используется рядом исследователей как основание для заявлений, что психология не является развитой наукой или же вовсе не является наукой. В психологии до настоящего времени не произошло сколько-нибудь полного и чёткого размежевания между научным, околонаучным и псевдонаучным знанием. В отличие от астрономии и химии, которые полностью отмежевались от астрологии и алхимии, психология проявляет гораздо бо́льшую терпимость к парапсихологии и зачастую ассимилирует опыт житейской психологии.
История.
Отечественный психолог С. Л. Рубинштейн на момент 1940 года охарактеризовал психологию с исторической точки зрения следующим образом:
«Психология и очень старая, и совсем ещё молодая наука, — она имеет за собой 1000-летнее прошлое, и, тем не менее, она вся ещё в будущем. Её существование как самостоятельной научной дисциплины исчисляется лишь десятилетиями, но её основная проблематика занимает её философскую мысль с тех пор, пока существует философия. Годам экспериментального исследования предшествовали столетия философских размышлений, с одной стороны, и тысячелетия практического познания людей — с другой».
Античность.
Ранние античные авторы нередко уделяли в своём творчестве внимание проблемам природы человека, его души и разума. До настоящего времени из всего спектра взглядов древних авторов дошла лишь классификация темпераментов Гиппократа, хотя многие идеи Платона оказали влияние на развитие философских основ представлений о психике, в частности, представление о человеке, как существе, раздираемом внутренним конфликтом мотивов, нашло своё отражение в психоаналитических представлениях о структуре личности. Как и у большинства других наук, «дедушкой» психологии справедливо можно назвать Аристотеля, в своём трактате «О душе» давшего развёрнутый анализ предмета психологического исследования.
Средние века.
Средневековые работы о психологии в Европе были в целом сконцентрированы на вопросах веры и разума, в заметной степени христианскими философами, начиная с Фомы Аквинского, были заимствованы идеи Аристотеля. Из восточных учёных внимание психологическим вопросам уделял Ибн Сина (Авиценна).
Новое время.
В 1590 году Рудольф Гоклениус впервые использует термин «психология» для обозначения науки о душе. Его современник Оттон Касман считается первым, кто употребил термин «психология» в современном научном смысле.
XVIII век.
3 августа 1795 года британский королевский астроном Невил Маскелайн впервые обнаружил ошибки, допущенные его ассистентом Дэвидом Киннбруком в расчётах. Киннбрук был уволен, но анализ ошибок, проведенный другим астрономом — Фридрихом Беззелом, положил начало систематическому изучению времени реакции, индивидуальных различий и «ментальной хронометрии» (mental chronometry), как критериев когнитивных процессов.
Представители нового времени (например, Рене Декарт) считали, что тело и душа имеют разную природу — это был новый взгляд на проблему психологии. «Душа и тело живут и действуют по разным законам и имеют разную природу», - писал Декарт.
XIX век.
Девятнадцатый век стал для психологии веком постепенного зарождения её как научной дисциплины, выделения соответствующих областей из философии, медицины, точных наук.
Эрнст Вебер исследует зависимость интенсивности ощущений от интенсивности вызывающих их стимулов.
Герман Гельмгольц исследует нервную систему как основу психики, формулирует представления об «автоматических умозаключениях», лежащих в основе восприятия пространства.
Однако главное имя в истории оформления психологии как науки — Вильгельм Вундт. Ученик и соратник Гельмгольца, Вундт в 1879 году открыл первую в мире психологическую лабораторию, в которой проходили исследования феноменов сознания методом интроспекции. Этот год считается годом рождения психологии как науки.
XX век.
Первые десятилетия.
Самое начало двадцатого века отмечено бурным ростом нескольких направлений. С одной стороны, активно развивается психоанализ — школа психотерапии, первоначально основанная на работах Зигмунда Фрейда, в которых человек описывался как система из нескольких независимых структур личности, борющихся друг с другом — Оно (Ид), Я (Эго), Сверх-Я (Суперэго). В этом конфликте Оно представляет собой биологические потребности человека, из которых основное внимание психоаналитики уделяли сексуальной потребности, а Сверх-Я представляет собой требования социума, культуры. Развитие этой школы оказало сильное влияние не только на практику, но и на науку, заставив учёных обратить внимание на феномены, находящиеся за пределами сознания, на неосознаваемые детерминанты психической деятельности. Идеи первой психоаналитической школы Зигмунда Фрейда развивали также Альфред Адлер и Карл Густав Юнг.
В США активно развивается бихевиоризм — основанная Дж. Уотсоном школа психологии, базирующаяся на работах И. П. Павлова и Э. Торндайка о научении. Бихевиористы следовали позитивистскому требованию об исключении из рассмотрения науки всех явлений, кроме непосредственно наблюдаемых. Человек рассматривался как «чёрный ящик», в который входят стимулы, а выходят — реакции на эти стимулы.
В Германии развивается гештальтпсихология (М. Вертгеймер, К. Коффка, В. Кёлер), являющаяся дальнейшим развитием на пути изучения феноменов сознания. В отличие от предшественников, гештальтисты не пытались выделить «кирпичики», из которых построено сознание, напротив, они полагали основным своим законом, что «целое всегда больше суммы составляющих его частей». В рамках этой школы было открыто много феноменов восприятия и мышления.
Первая мировая война стимулировала развитие прикладных аспектов психологии, в первую очередь — психодиагностики, так как армии требовалось средство оценки возможностей солдат. Разрабатываются тесты интеллекта (А. Бине, Р. Йеркс).
1930—1940-е годы.
В Германии приходят к власти нацисты, вследствие чего многие психологи (среди которых было немало евреев) вынуждены эмигрировать в США. Гештальтпсихология практически прекращает своё существование, однако К. Левин и последователи гештальтистов становятся основными фигурами американской социальной психологии.
Тем не менее такие мыслители как Карл Густав Юнг и Мартин Хайдегер остаются работать в нацистской Германии. Юнг продолжает развивать своё учение о коллективном бессознательном, в 1934 году он выпускает одну из своих фундаментальных работ «"Архетипы и коллективное бессознательное"».
Среди бихевиористов, с одной стороны, начинаются попытки, сохраняя естественно-научный фундамент, внести в объяснение поведения внутрипсихические переменные (Э. Толмен, К. Халл), с другой стороны Б. Ф. Скиннер развивает «радикальный бихевиоризм», развивая теорию оперантного научения.
Ж. Пиаже публикует результаты исследований мышления, в которых были обнаружены сходные типы ошибок у детей одного возраста, которых уже практически не встречается у более старших детей.
Активно развивается психологическая и психотерапевтическая практика. Психоанализ делится на множество ветвей, на его основе формируются альтернативные формы психотерапии (гештальттерапия и др.).
Л. С. Выготский формулирует основные принципы культурно-исторической психологии, основанные на марксизме. В рамках этого направления постулировалась необходимость изучать личность непосредственно в процессе развития, протекающем под влиянием истории и культуры. На базе этого направления в дальнейшем была построена теория деятельности.
Постановление «» (1936), ликвидировавшее педологию, на несколько десятилетий практически замораживает развитие психологической науки в СССР.
Вторая мировая война вызывает новый всплеск активности психологов в области прикладных технологий. Особое внимание уделяется социальной психологии и эргономике.
1950—1960-е годы.
Эти десятилетия являются эпохой расцвета психологической науки, активного роста во множестве направлений. В современных учебниках большая часть материала посвящена экспериментам и исследованиям, проведённым именно в этот период.
Теория бихевиоризма не могла дать ответы на многие вопросы, которые ставила перед наукой развивающаяся промышленность и военные технологии. Разработка максимально эффективных форм представления информации на пультах управления сложными устройствами и другие задачи требовали активного изучения не только простых реакций на стимулы, но сложных механизмов, лежащих в основе восприятия. Вследствие подобного запроса начинает развиваться область, которая позднее получит название «когнитивная психология» — ведёт свои исследования механизмов внимания Д. Бродбент, публикует знаменитую статью про «Магическое число семь плюс-минус два» Дж. Миллер.
Активно развиваются техники модификации поведения на основе теории бихевиоризма. Дж. Вольпе разрабатывает технику систематической десенсибилизации, которая оказывается весьма эффективной в лечении различных видов фобий.
На фоне этого появляются гуманистическая психология и психотерапия как попытка преодолеть сведение человека к автомату или животному (теории бихевиоризма и психоанализа). Гуманистические психологи предлагают рассматривать человека как существо более высокого уровня, наделённое свободой воли и стремлением к самоактуализации.
Происходит бурное развитие социальной психологии в США. Проводят свои знаменитые исследования Соломон Аш, Музафер Шериф, Стэнли Милгрэм, Леон Фестингер и другие известные психологи.
В конце 60-х годов вместе с ростом популярности Нью-Эйдж-культуры психология испытывает сильное влияние со стороны мистики; на волне успеха исследований психоделических веществ и новых областей сознания возникает трансперсональная психология, а также развивается ряд школ тренингов личностного роста, из которых некоторые со временем превращаются в религиозные культы: (саентология, лайфспринг).
В 1966 году создаются факультеты психологии в МГУ и ЛГУ, а также кафедра психиатрии и медицинской психологии в РУДН, что демонстрирует прекращение 30-летних гонений на психологов. В заметной степени это было связано с появлением спроса на психологов на производстве и в армии. В СССР активно развивается инженерная психология. Однако в силу объективных причин отечественной психологии приходится оставаться крайне идеологизированной в соответствии с марксистско-ленинскими построениями, — данное обстоятельство придаст её дальнейшему развитию определённую специфику. И по сей день марксистско-ленинские теории (см. теорию отражения) так или иначе сохраняют влияние на программу подготовки специалистов-психологов в некоторых вузах России.
1970—1980-е годы.
Происходит бурный рост когнитивной психологии, которая шла по пути постепенного опровержения своих исходных постулатов о сущности человеческой психики как системы переработки информации с ограниченной пропускной способностью. В этот период психология устанавливает активные связи с лингвистикой, что стало неизбежным после «хомскианской революции»; возникает психолингвистика.
В остальных областях психологии происходит стабильный рост и накопление знаний, вместе с тем вновь обостряется ощущение «вечного кризиса» психологической мысли, так как ни одно из действующих направлений не даёт надежды на скорое появление действительно полной и объясняющей поведение человека теории.
Психологи.
Психолог — человек с психологическим образованием, выполняющий профессиональную деятельность в области психологии как науки, психологической помощи или прикладных исследований.
Следует обратить внимание на то, что деятельность психологов в Российской Федерации не является лицензируемой, а наименование «психолог» — защищённым законодательством званием.
То или иное формальное право называть себя психологами имеют люди, получившие профильное психологическое образование следующих форм и ступеней:
Кроме того, формальное право называть себя психологами могут люди, имеющие степень кандидата или доктора психологических наук.

</doc>
<doc id="1004" url="?curid=1004" title="Марс (значения)">
Марс (значения)

Марс:

</doc>
<doc id="1006" url="?curid=1006" title="Венера (значения)">
Венера (значения)

Вене́ра:

</doc>
<doc id="1011" url="?curid=1011" title="Портал:Текущие события/Последние события">
Портал:Текущие события/Последние события

&lt;section begin=Апрель/&gt;"См. также: "
&lt;section end=Апрель/&gt;&lt;section begin=Март/&gt;
&lt;section end=Март/&gt;

</doc>
<doc id="1012" url="?curid=1012" title="Авария в энергосистеме в США и Канаде (2003)">
Авария в энергосистеме в США и Канаде (2003)

14 августа 2003 года между 15:45 и 16:15 по стандартному восточному времени (23:45 и 0:15 по московскому времени), наблюдатели в Кливленде, Толедо, городе Нью-Йорк, Олбани, Детройте и в части Нью-Джерси сообщили о перебоях в подаче электроэнергии. Позже последовали проблемы в изначально не затронутых регионах, включая все 5 районов города Нью-Йорк и в части Лонг-Айленда, округе Уэстчестер, штатах Нью-Джерси, Вермонта и Коннектикута и большей части юга провинции Онтарио, включая Торонто.
Около 10 млн человек в Канаде (примерно треть населения) и 40 млн — в США остались без электричества. Однако большинство жизненно важных служб продолжали работать.
Закрылись многие аэропорты, включая международный аэропорт Пирсона в Торонто и все аэропорты Нью-Йорка. Во многих местах, включая Торонто и Нью-Йорк, прекратило работу метро. Застрявших в метро пассажиров пришлось эвакуировать. В отдельных местах, в частности в Детройте, были перебои с водой. Мобильные телефоны работали очень плохо, с большими перебоями, но стационарная телефонная связь продолжала функционировать. В результате у телефонных автоматов на улицах выстроились огромные очереди. Провайдеры продолжали работать, но в условиях отсутствия электричества единственным способом входа в интернет во многих местах осталось соединение через ноутбуки, работающие от аккумуляторов. Поскольку транзисторных приёмников у многих жителей США и Канады не было, они остались без возможности узнать новости. Жара в Нью-Йорке достигла 33 °C в тени, но кондиционеры и вентиляторы не работали.
Однако, в отличие от сбоя электросети Нью-Йорка 1977 года, не было массовых разграблений. Более того, уровень преступности был даже ниже, чем в другие дни.
Денежный ущерб составил 6 миллиардов долларов.
Причины аварии, как выяснилось, следующие:
Подобная авария происходила в США 9 ноября 1965 года. Тогда 30 миллионов человек остались без электричества.

</doc>
<doc id="1013" url="?curid=1013" title="1965 год">
1965 год

Персоны года.
Человек года по версии журнала Time — Уильям Уэстморленд американский военачальник.
Родились.
"См. также: "
Скончались.
"См. также: "

</doc>
<doc id="1015" url="?curid=1015" title="Старая Ладога">
Старая Ладога

Ста́рая Ла́дога (до 1703 года Ла́дога) — село в Волховском муниципальном районе Ленинградской области, административный центр Староладожского сельского поселения.
До 1703 года Ладога была городом. В 2003 году отмечалось 1250-летие Старой Ладоги, в ходе которого село позиционировалось как «древняя столица Северной Руси».
Происхождение названия.
Скандинавское название Ладоги — Альдейгья, Альдейгьюборг (), первое письменное упоминание которого в исходной форме встречается в поэме «Bandadrapa» , сочинённой около 1010 г. в честь ярла Эйрика.
Название "Ладога" носит река, озеро и город. При этом до последнего времени не было вполне ясно, какое из названий является первичным. Название города выводили от наименования Ладожского озера (из «волнующийся» — от "aalto" «волна»), или от названия реки "Ладога" (ныне Ладожка, из , где "alode, aloe" — «низкая местность» и "jok(k)i" — «река»).
Как пишет Т. Н. Джаксон, «к настоящему времени можно считать почти доказанным, что сначала возникло название реки, затем города и лишь затем озера». Поэтому первичным она считает гидроним Ладога, от др.- «нижняя река». От названия реки произошло название города , и уже оно было заимствовано славянским населением и преобразовано при помощи метатезы "ald → lad" в . Скандинавское посредство между финским и древнерусским словом подтверждается, по мнению Т. Н. Джаксон, и археологическим материалом: скандинавы на Ладоге впервые появились в начале 750-х годов, то есть на пару десятилетий раньше славян.
Е. А. Хелимский, напротив, предлагает германскую этимологию. По его мнению, первичным является название озера — от «старый источник, подобный открытому морю». Данный гидроним связан с названием Невы (которая вытекает из Ладожского озера) в германских языках — «новая». Через промежуточную форму *"Aldaugja" это слово дало , а впоследствии "Ладога".
История.
Древнейшие известные постройки — производственные и судоремонтные мастерские на Земляном городище, по данным дендрохронологии, воздвигнуты из брёвен, срубленных до 753 года и построены, вероятно, выходцами из Северной Европы. Раскопки показывают, что первое поселение в Ладоге было основано и первоначально заселено предположительно скандинавами (по мнению Е. А. Рябинина — готландцами). В 2013 году археологи нашли в Старой Ладоге гребень эпохи Меровингов, предположительно VII века н. э.
Первое поселение состояло из нескольких построек столбовой конструкции, имеющей аналоги в Северной Европе и было поставлено в 2 км к югу от Любшанской крепости, основанной представителями оригинальной славянской культуры среднеевропейского происхождения. Именно тогда в регионе пересеклись интересы древних славян, древних германцев и местных финно-прибалтов. В слоях VIII века при раскопках обнаружен целый производственный комплекс. В этот период поселение уже торгует с местными племенами. В 760-е годы ладожское поселение было разрушено представителями раннеславянской культуры с Юго-Запада: Днепровского Левобережья или Поднестровья, Подунавья, верховьев Днепра, Западной Двины или Волги (аналогичной пражской, пеньковской или колочинской культурам) и застроено домами срубной конструкции. Отмечено отсутствие преемственности между первыми обитателями Ладоги и последующим населением, имевшим иные культурные традиции. Данное поселение просуществовало до конца 830-х годов и было захвачено варягами, возможно под предводительством конунга свеев Эйрика (умер около 871 г.).
С 780-х годов в Ладоге по арабской низкотемпературной технологии варились бусы. «Глазки», то есть глазчатые бусы, — первые русские деньги. За них ладожане скупали пушнину. А пушнину продавали арабским купцам за полновесные серебряные дирхемы. К 786 году относится первый клад арабских дирхемов, найденный в Ладоге. Арабский путешественник X века утверждает, что за один стеклянный «глазок» можно было купить раба или рабыню. В Ладоге, как и в других местах на северо-западе Руси (Изборске, Камно, Рыуге, Пскове) в VIII—IX веках получили распространение литейные формочки из известняка в результате возрождения моды на подобные украшения, выработанные в пражской культуре ранних славян на рубеже VI—VII веков.
Далее Ладога была торгово-ремесленным поселением, которое в очередной раз разрушили в 860-е годы в результате междоусобных войн, о которых упоминает ПВЛ. Примерно в 870-е годы в Старой Ладоге была построена первая крепость, по конструкции сходная с соседней Любшанской крепостью, запустевшей в те же годы. В слоях последней четверти IX века были обнаружены остатки бронзолитейной мастерской. В итоге Ладога из небольшого торгово-ремесленного поселения развивается в типичный древнерусский город площадью 12 га.
В одном из вариантов толкования «Повести временных лет» Ипатьевского списка древнерусской летописи, ладожане в 862 году в целях защиты своих земель от набегов пригласили на княжение варяга Рюрика:
Хотя в других вариантах прочтения говорится, что он сел княжить в Новгороде (Рюриково городище). Отсюда версия, что Ладога была первой столицей Руси (точнее, местом княжения Рюрика с 862 по 865 год). Археологические исследования, проводимые в Старой Ладоге (руководитель — А. Н. Кирпичников), доказывают тесные контакты ильменских словен, финно-угорских племён и норманнов (урман) в этом районе в IX−X веках.
Город был важным пунктом на торговом пути «из варяг в греки». При раскопках в Старой Ладоге в слоях X века был обнаружен берестяной свиток с изображением ладьи.
По Новгородской летописи в Ладоге находится могила Вещего Олега (по киевской версии, его могила находится в Киеве на горе Щековице).
В 997 году на Ладогу нападал варяг Эйрик, будущий норвежский правитель.
Первая ладожская крепость, существовавшая более 100 лет, была разрушена.
В сагах есть упоминание, что когда дочь шведского короля Олафа Шётконунга, принцесса Ингигерда в 1019 году выходила замуж за новгородского князя Ярослава Мудрого, то в приданое (вено) получила город Альдейгьюборг (Старая Ладога) с прилегающими землями, которые получили с тех пор название Ингерманландии (земли Ингегерды), а посадником (ярлом) Ладоги был назначен Рёгнвальд Ульвссон — ярл Вестергётланда (родственник Ингегерды по материнской линии) (Сага об Эймунде). Ульв (Улеб) и Эйлив — сыновья Регнвальда. По скандинавским источникам, Эйлив стал ярлом (посадником) в Ладоге после смерти отца, а Улеб упомянут в летописи под 1032 годом как новгородский воевода.
В 1116 году Ладожский посадник Павел заложил каменную крепость:
Древняя Староладожская крепость, ставшая «сердцем» сегодняшней Старой Ладоги, стоит на месте впадения реки Елена (Ладожки) в Волхов. Во времена Новгородской Руси была стратегически важным местом, потому что это была единственная возможная гавань, где могли остановиться морские суда, не способные плавать по порогам Волхова.
В 1142 году "«князь свейский и бискуп пришед в 60 шнеках»" — шведы нападают на Ладогу.
В 1499 году Ладога, согласно писцовой книге Водской пятины состояла из крепости и посада, который подобно Новгороду делился на концы: Никольский, Богородицкий, Семёновский, Климятский и Спасский.
После завершения русско-шведской войны 1590—1595, по Тявзинскому миру Ладога была признана принадлежащей России.
В 1610 году Ладога была взята шведами, но через год была освобождена воеводой И. М. Салтыковым.
По Столбовскому миру, завершившему русско-шведскую войну 1613—1617, Швеция отказалась от притязаний на Ладогу.
В 1704 году Пётр I основал в устье Волхова Новую Ладогу и переименовал Ладогу в «Старую Ладогу», лишив её статуса города и права иметь собственный герб, а многим ладожанам повелел переехать на жительство в Новую Ладогу. До этого события Ладога была центром Ладожского уезда Водской пятины Земли Новгородской.
В 1718 году в Ладожский Успенский монастырь переведена из Суздаля первая жена Петра I — Евдокия Лопухина.
В 1719 году Старая Ладога вошла в состав Новгородской провинции (была образована в составе Санкт-Петербургской губернии).
В 1727 году Староладожский уезд Новгородской провинции был включён в состав новой Новгородской губернии.
В 1770 году Староладожский уезд был упразднён.
СТАРАЯ ЛАДОГА — слобода принадлежит Новоладожским купцам и мещанам, число жителей по ревизии: 54 м п., 62 ж. п.
В ней церкви каменные: а) Во имя Святого Великомученика Георгия. б) Девичий монастырь во имя Успения Пресвятой Богородицы. в) Упразднённая церковь во имя Св. Предтечи Иоанна. г) Монастырь во имя Св. Николая Чудотворца. (1838 год).
СТАРАЯ ЛАДОГА — селение Новоладожских мещан, по просёлочной дороге, число дворов — 30, число душ — 57 м п. (1856 год)
СТАРАЯ ЛАДОГА — село мещанское, при реках Волхове и Ладожке, 43 двора, жителей 103 м п., 264 ж. п.;
Церквей православных 4. Монастырей 2. Развалины крепости называемой Рюриковою. (1862 год)
В XIX веке село административно относилось к Михайловской волости 1-го стана Новоладожского уезда Санкт-Петербургской губернии, в начале XX века — 2-го стана.
По данным 1933 года "деревня Старая Ладога" являлась административным центром Староладожского сельсовета Волховского района, в который входили 17 населённых пунктов, деревни: Ахматова Гора, Валеши, Зелёная Долина, Ивановка, Каменка, Киндерево, Княщина, Лыткино, Местовка, Макинкина, Межумошье, Неважи, Окулово, Подол, Подмонастырская Слобода, "Старая Ладога", Трусово, общей численностью населения 2312 человек.
По данным 1936 года в состав Староладожского сельсовета с центром в "посёлке Старая Ладога" входили 15 населённых пунктов, 410 хозяйств и 13 колхозов.
По административным данным 1973 года в селе располагалась центральная усадьба совхоза «Волховский».
В 2003 году широко проводилось празднование 1250-летия Старой Ладоги как «древней столицы Северной Руси», которое освещалось прессой и привлекло внимание властей. Российский президент Владимир Путин издал указ по подготовке и проведению юбилея и дважды посетил Старую Ладогу. 
География.
Село расположено в северной части района на левом берегу реки Волхов, в 8 км к северу от административного центра района — города Волхова.
Через него проходит региональная автодорога Новая Ладога — Волхов — Кириши — Зуево.
Культура и искусство.
Первым изображением Старой Ладоги была гравюра Адама Олеария, посетившего город в 1634 году, в качестве секретаря посольства Фридриха III к царю Михаилу Фёдоровичу. Русских художников XIX-XX веков Старая Ладога привлекала своими романтическими видами берегов древнего Волхова, церквями, монастырями и величественными курганами. Недалеко от села находилась усадьба «Успенское» Алексея Томилова, бывшая в XIX веке местным очагом культуры. Здесь бывали художники И. К. Айвазовский, О. А. Кипренский, А. О. Орловский, А. Г. Венецианов, И. А. Иванов и другие. В 1844 году в деревне Лопино, расположенной напротив крепости на другом берегу Волхова, в крестьянской семье родился В. М. Максимов, будущий академик живописи и художник-передвижник, писавший картины из жизни и быта крестьян. Здесь же в 1911 году он был похоронен.
Летом 1899 года в Старой Ладоге писал этюды с натуры Николай Рерих. «"Взбираемся на бугор, — "писал Рерих о своих впечатлениях," — и перед нами один из лучших русских пейзажей"». Здесь бывали В. А. Серов, К. А. Коровин, Б. М. Кустодиев. В 1924—1926 годах в Старой Ладоге неоднократно бывал А. Н. Самохвалов, участвовавший в подготовительных работах по реставрации Георгиевского собора. По признанию художника, этот опыт многому его научил, помог понять, как композиционное слияние образов монументальной живописи и архитектурных форм «"создавало пафос полифонического звучания всего комплекса воздействующих элементов"». Результатом этих поездок стали также пейзаж «Старая Ладога» (1924) и картина «Семья рыбака» (1926, ГРМ).
В феврале 1945 года решением Леноблисполкома на баланс Художественного фонда был передан Дом отдыха в Старой Ладоге (бывшее имение Шаховских, по имени последнего владельца князя Николая Ивановича Шаховского (1851—1937), тайного советника, члена Государственного банка России и его сына, Всеволода Николаевича (1874—1954), действительного статского советника, последнего министра торговли и промышленности (1915—1917) царской России, эмигрировавших во Францию в 1919 году) для организации творческой базы ленинградских художников. В 1946 году начались работы по ремонту и строительству, которые растянулись на 15 лет.
Уже с середины 1940-х в Старую Ладогу стали приезжать ленинградские художники. Для С. И. Осипова, Г. А. Савинова, Н. Е. Тимкова, А. Н. Семёнова и других мастеров эти места на многие годы стали источником вдохновения. Мысль о наследовании ценностей труда и культуры отчётливо прозвучит в их творчестве, для которого «"национальное прошлое не разлучено с современностью, а входит в неё важной составной частью"».
В начале 1960-х годов после завершения ремонта зданий старинной усадьбы в деревне Чернавино Дом творчества художников «Старая Ладога» начал работать постоянно, став на тридцать лет важным центром художественной жизни. Здесь работали художники Е. Е. Моисеенко, А. Н. Самохвалов, В. Ф. Загонек, Н. Н. Баскаков, В. И. Овчинников, В. В. Ватенин, И. И. Годлевский, В. П. Кранц, Б. В. Корнеев, М. А. Козловская, Л. С. Язгур, Д. В. Беляев, В. А. Баженов, Д. П. Бучкин, Е. П. Жукова, С. Е. Захаров, А. М. Семёнов, Т. К. Афонина, З. Н. Бызова, В. И. Борисов, И. М. Добрякова, Н. Н. Брандт, Б. С. Угаров, П. Т. Фомин, В. И. Рейхет, Л. И. Вайшля, В. И. Викулов, В. С. Саксон, Д. И. Маевский и многие другие ленинградские живописцы и графики, а также художники из других регионов России. В 1970—1980 годы Дом творчества художников «Старая Ладога» расширялся, были построены новые корпуса, что позволило круглогодично использовать творческую базу в Старой Ладоге. Расходы на проживание, питание, поездки художников оплачивал Художественный фонд. Произведения, написанные в Старой Ладоге или по собранным здесь материалам, экспонировались на крупнейших художественных выставках 1960—1980-х годов, пополняли собрания музеев. В том числе стали основой обширного фонда живописи, графики и скульптуры музея заповедника «Старая Ладога».
В начале 1990-х годов, после ликвидации Художественного фонда и из-за отсутствия средств на содержание Дом творчества художников «Старая Ладога» сначала перестал принимать художников, а затем прекратил своё существование.
Демография.
Динамика численности населения с 1920 по 2010 год:
Транспорт.
От Волхова до Старой Ладоги можно доехать на автобусах № 23 и 23А.

</doc>
<doc id="1019" url="?curid=1019" title="Астрометрия">
Астрометрия

Астроме́трия (от  — «звезда» и  — «измеряю») — раздел астрономии, главной задачей которого является изучение геометрических и кинематических свойств небесных тел.
Основная задача астрометрии более развёрнуто формулируется как высокоточное определение местонахождения небесных тел и векторов их скоростей в данный момент времени. Полное описание этих двух величин дают шесть астрометрических параметров:
Знания этих астрометрических параметров для астрономического объекта с высокой точностью позволяют получить о нём следующую информацию:
Многие из этих сведений необходимы для того, чтобы делать выводы о физических свойствах и внутреннем строении наблюдаемого объекта, а также давать ответы и на более фундаментальные вопросы — об объеме, массе и возрасте всей Вселенной. Т.о., астрометрия является одним из необходимых разделов астрономии, дающим экспериментальную информацию, необходимую для развития остальных разделов (астрофизики, космологии, космогонии, небесной механики, и т. п.).
Классификация астрометрии.
Фундаментальная астрометрия.
Для точных измерений положений и движений небесных тел необходимо иметь систему отсчёта с заданными координатами. Фундаментальной астрометрией называется тот подраздел астрометрии, который занимается проблемами выбора такой системы координат, и связанных с ними вопросов — какие именно объекты выбрать для начала отсчёта (т. н., "реализации системы координат"); каким способом привязать систему координат к объектам, являющимся началом отсчёта.
Современные системы кооординат подразделяются на кинематические и динамические:
С начала развития астрономии и вплоть до конца XX века астрономы всегда пользовались именно динамической системой экваториальных координат. За начало отсчёта этой системы была принята точка весеннего равноденствия, традиционно обозначаемая символом formula_4, — точки пересечения эклиптики с небесным экватором, определяемая из наблюдений годового движения Солнца.
Такая динамическая система имеет ряд недостатков. Вследствие прецессии и нутации земной оси, движения оси вращения внутри Земли, а также вековых и периодических возмущений орбиты Земли от тел Солнечной системы (т. н., «прецессия от планет»), точка весеннего равноденствия движется среди звёзд. Пока в астрономии пользовались динамической системой координат, это движение вынуждены были компенсировать подсчетом влияния всех вышеперечисленных процессов, соответственно пересчитывая координаты на каждую эпоху.
Кроме того, динамическая система отсчёта не удовлетворяет предъявляемому к опорной системе требованию инерциальности.
Эти затруднения привели к целесообразности замены динамической системы координат на кинематическую. В современной астрометрии пользуются кинематической системой координат. В настоящий момент это система координат ICRF в радиодиапазоне, с внегалактическими объектами в качестве опорных, и HCRF в оптическом диапазоне, использующая привязку к системе ICRF наблюдений космического астрометрического проекта Hipparcos.
Кинематическая система отсчёта, базирующаяся на внегалактических объектах в качестве опорных, считается квазиинерциальной (поскольку ускорением в движении внегалактических объектов, и даже самим наличием этого движения, можно пренебречь).
Любая кинематическая система координат определяется с помощью фундаментального каталога, как совокупность всех астрометрических параметров объектов, зачисленных в этот каталог.
Практическая астрометрия.
Практической астрометрией называется подраздел, занимающийся проблемами:
К практической астрометрии следует отнести и обзоры неба — составление подробных фотографических карт с целью каталогизации как можно большего числа астрометрических объектов.
Изучение вращения Земли.
Так как астрометрические наблюдения в большом объёме ведутся с поверхности Земли, изучение любых вариаций её движения и движения её коры также связано с решением астрометрических задач, и является подразделом астрометрии. На движение каждой отдельно выбранной точки на поверхности Земли влияют такие процессы как прецессия, нутация, движение полюсов, замедление вращения Земли, движение литосферных плит, неравномерность хода часов в гравитационном поле. При этом параметры вращения Земли не постоянны; они меняются со временем. Одним из методов, применяемых для изучения вращения Земли, является гравиметрия
Следует отметить, что вращение Земли примерно до середины XX века использовалось в астрометрии для измерения времени, а также географических координат. После изобретения более точных способов для того и другого астрометрия теперь решает обратную задачу — изучает вариации вращения Земли, (в частности, замедление), используя стандарты точного времени; и изучает колебания земной коры, используя системы глобальной спутниковой навигации.
История астрометрии.
До появление астрофизики в начала XX века практически вся астрономия сводилась к астрометрии. Астрометрия неразрывно связана со звёздными каталогами. Первый каталог был составлен ещё в Древнем Китае астрономом Ши Шенем. Точнее, это был не каталог, а схематичная карта неба. Первый же астрометрический каталог, содержащий координаты звезд, был создан древнегреческим астрономом Гиппархом и датируется 129 годом до нашей эры, но он не сохранился. Сравнив свои наблюдения с более ранними, Гиппарх открыл явление "предварения равноденствий", или прецессии. Стимулом для развития астрометрии являлись практические нужды человека: без компаса и механических часов навигация могла осуществляться только по наблюдениям небесных светил (см. Астрономическая навигация).
В Средние века астрометрия была широко распространена в Арабском мире. Наибольший вкалад в неё внесли ал-Баттани (X в.), ал-Бируни (XI в.) и Улугбек (XV в.). В XVI веке Тихо Браге в течение 16 лет проводил наблюдения Марса, обработав которые, его преемник Иоганн Кеплер открыл законы движения планет. На основе этих эмпирических законов Исаак Ньютон описал закон всемирного тяготения и заложил основы классической механики, что привело к появлению научного подхода.
В конце XX века, после значительного кризиса, в астрометрии произошла революция, благодаря развитию вычислительной техники и усовершенствованию приёмников излучения.
https://docs.google.com/viewer?pid=explorer&amp;srcid=0B5A92Tih4dVqYkhGM2o5SWtkVTg&amp;chrome=false&amp;docid=c5f304898cb611e51d406c448aa442c3%7C7fe42bf936c62c232692e104d172dbb7&amp;a=bi&amp;pagenumber=1&amp;w=741
Основные задачи современной астрометрии.
Первоначально задачей астрометрии было измерение положения звезд с целью определения по ним географических координат для навигации. Если географические координаты известны, то отмечая момент прохождения светила через небесный меридиан, можно узнать местное солнечное время.
Методы астрометрии.
Астрометрические наблюдения.
Измеряемыми величинами при астрономических наблюдениях точечного источника света (в том числе и любой, за исключением Солнца, звезды) являются:
Наблюдения, показывающие эти величины, являются фотометрическими, спектроскопическими, и астрометрическими соответственно. С появлением новых, более универсальных приёмников света, такое разделение по классификации наблюдений становится всё менее заметным. Для определения астрометрических параметров небесных тел необходимы все три перечисленные типа измерений.
Точность измерений положений formula_5 зависит от радиуса formula_6 дифракционного диска изображения точечного источника и количества квантов света formula_7, пришедших от источника, следующим образом: formula_8
Астрометрические инструменты.
Предполагается, что космический аппарат Gaia достигнет точности измерения углов до "20 µas" (микросекунд дуги).
Классические астрометрические инструменты.
Классический астрограф — телескоп-рефрактор, используемый для фотографирования небесных объектов. Получили распространение в конце XIX века после изобретения фотографии. Использовался для создания обзоров неба.
Телескоп Шмидта — зеркально-линзовый телескоп, имеющий, по сравнению с классическим астрографом, бо́льшую светосилу и поле зрения. Также используется для обзоров неба.
Длиннофокусный астрограф — рефрактор с фокусным расстоянием до 19 метров. В отличие от классического астрографа дает большее увеличение, что позволяет его использовать для измерения параллаксов.
Пассажный инструмент — рефрактор, который может вращаться только вокруг горизонтальной оси, жестко закрепленной на двух тумбах и расположенной в направлении запад-восток. Для наблюдений доступны небесные тела в момент прохождения ими небесного меридиана, то есть во время "верхних" и "нижних" кульминаций. На оси закреплен специальный диск, по которому можно наводить трубу инструмента по высоте. Во время наблюдения фиксируется и момент времени прохождения небесного тела через меридиан.
Меридианный круг — астрометрический инструмент для точного определения экваториальных координат небесных тел по наблюдениям их прохождения через меридиан. В отличие от пассажного инструмента на оси закреплены разделенные круги, позволяющие с высокой точностью определять склонения наблюдаемых небесных тел.
Зенит-телескоп и зенит-труба используются для определения широты.

</doc>
<doc id="1020" url="?curid=1020" title="1861 год">
1861 год

Родились.
"См. также: "
Скончались.
"См. также: "

</doc>
<doc id="1021" url="?curid=1021" title="1724 год">
1724 год

Родились.
"См. также: "
Скончались.
"См. также: "

</doc>
<doc id="1022" url="?curid=1022" title="Желязны, Роджер">
Желязны, Роджер

Ро́джер Джо́зеф Желя́зны (; 13 мая 1937, Юклид, Огайо, США — 14 июня 1995, Санта-Фе, Нью-Мексико, США) — американский писатель-фантаст.
Биография.
Роджер Желязны родился 13 мая 1937 года в городе Юклид (штат Огайо) в семье поляка Юзефа Желязны ("Żelazny" по-польски означает «железный») и ирландки Жозефины Суит Желязны. Уже в десять лет Роджер писал сказки. В 1955 году закончил среднюю школу и поступил на отделение психологии в кливлендский университет Вестерн-Резерв. Сменил специальность, перейдя на отделение английской словесности с факультета психологии. Через два года сдал на бакалавра и перебрался в Колумбийский университет (штат Нью-Йорк). В 1962 году получил степень магистра в Колумбийском университете по специальности «Драма Елизаветинской и Якобианской эпох».
В годы учёбы Желязны занимался дзюдо и восточными единоборствами, писал и издавал стихи, писал, но не издавал фантастические рассказы, учился играть в шахматы, изучал хинди и японский, увлёкся медитацией и мистикой.
В конце 1960 года вступил в ряды Национальной гвардии, прослужил в Техасе шесть месяцев. С 1963 по 1966 — был резервистом армии США. Одно время входил в состав боевого расчёта ракет «Ника ()», а последние годы службы провёл в подразделении психологической войны, откуда и был с почётом уволен в запас.
В 1962 году журнал «Amazing Stories» опубликовал его первый рассказ «Игра страстей». Первую номинацию на премию «Хьюго» он получил за повесть «Роза для Экклезиаста» (1963), а в 1965 году его ждал полный успех — одна премия «Хьюго» и сразу две «Небьюла».
В 1964 женился на Шэрон Стиберл (Sharon Steberl) и развёлся в 1966. После Национальной гвардии он работал в системе социального страхования. В 1965 году его перевели на службу в Балтимор, штат Мэриленд, одновременно в 1967—68 гг. являлся секретарём-казначеем Ассоциации писателей-фантастов. В Балтиморе он встретил Джуди Кэллахан (Judith Alene Callahan), на которой женился 20 августа 1966, и которая родила ему троих детей — сыновей Девина (1971) и Джонатана Трента (1976), а также дочь Шаннон (1979).
В 1968 году, по совету Роберта Силверберга, Роджер Желязны заводит себе литературного агента. В 1969 — увольняется с государственной службы и становится профессиональным писателем. В 1975 году решает с семьёй переехать из Балтимора в Санта-Фе (штат Нью-Мексико). Известно, что Желязны перед смертью развёлся с женой и жил некоторое время с Джейн Линдскольд, с которой написал несколько романов.
В Санта-Фе Роджер Желязны написал большинство своих книг, получил чёрный пояс по айкидо, воспитывал своих детей и работал «чтецом» фантастических рассказов на радио.
На счету Р. Желязны около 20 романов и четыре сборника рассказов. Он шесть раз получал премию «Хьюго», три — «Небьюла», один раз — французскую «Аполло», был удостоен премии журнала «Локус» за создание «Хроник Амбера». Написал несколько произведений в соавторстве с Филипом Диком, Фредом Саберхагеном, Томасом Т. Томасом и Робертом Шекли.
Скончался 14 июня 1995 года в больнице Сент-Висент города Санта-Фе от почечной недостаточности, вызванной колоректальным раком. Тело писателя было кремировано, а прах, согласно его воле, развеян над горами возле Санта-Фе.
Библиография.
Хроники Амбера.
Хроники Амбера состоят из двух серий по пять романов в каждой и нескольких рассказов.
Первые пять книг рассказывают о приключениях принца Корвина, принца Амбера:
В следующих пяти книгах второй серии главным героем является сын Корвина, Мерлин (Мерль Кори), маг и инженер-программист:
Также Желязны написал несколько рассказов, относящихся к вселенной Амбера:
Желязны также был одним из авторов межавторского цикла "«Дикие карты»" (ред. Джорджем Р. Р. Мартином) (1987), написав рассказ под названием "«Спящий»".
Посмертное соавторство.
Две книги были начаты Роджером Желязны и дописаны его компаньоном и писателем Джейн Линдскольд после смерти Желязны:
Помимо этого, Джейн Линдскольд завершила начатый в соавторстве с Желязны сценарий к компьютерной игре "«Хрономастер»" ().

</doc>
<doc id="1023" url="?curid=1023" title="Литвинов, Максим Максимович">
Литвинов, Максим Максимович

Макси́м Макси́мович Литви́нов ( Меер-Генох Валлах) ( 5 (17 июля) 1876 года, Белосток, Гродненская губерния, Российская империя — 31 декабря 1951 года, Москва, СССР) — российский революционер, советский и государственный деятель. 
Член ЦИК СССР 2—7 созывов, депутат Верховного Совета СССР 1—2 созывов. Член ЦК ВКП(б) (1934—1941).
Биография.
Родился в семье еврейского торговца. Учился в хедере, а затем в реальном училище. Закончив в 1893 году учёбу в Белостокском реальном училище, поступил вольноопределяющимся в армию, служил пять лет в Баку в составе 17-го Кавказского пехотного полка.
После демобилизации в 1898 году работал бухгалтером в городе Клинцы, затем управляющим на сахарном заводе в Киеве. В 1898 Литвинов стал членом РСДРП; в 1900 — член Киевского комитета РСДРП. Наладил подпольную типографию, в которой печатал революционные брошюры и листовки. В 1901 арестован, в 1902 — один из организаторов и участников побега 11 «искровцев» из Лукьяновской тюрьмы Киева.
Эмигрировал в Швейцарию. Участвовал в распространении газеты «Искра» как агент, ведающий транспортировкой газеты в Россию; член Администрации Заграничной лиги русской революционной социал-демократии. После 2-го съезда РСДРП (1903) вступил в ряды большевиков, хотя, по его признанию, личные симпатии связывали его тогда с оказавшимися в числе меньшевиков Л. Д. Троцким, П. Б. Аксельродом, В. И. Засулич, Ю. О. Мартовым.
Весной 1904 нелегально приехал в Россию, ездил по стране по партийным делам. Был членом Рижского, Северо-западного комитетов партии и Бюро комитетов большинства.
Делегат 3-го съезда РСДРП (1905); участвовал в организации первой легальной большевистской газеты «Новая жизнь» в Петербурге: отвечал за издательскую деятельность газеты, которую формально издавала М. Ф. Андреева, а руководил работой Максим Горький.
Издательство находилось в доме Лопатина; в ноябре — декабре 1905 года В. И. Ленин бывал в издательстве практически ежедневно.
Во время революции 1905—1907 годов Литвинов занимался закупкой и поставкой в Россию оружия для революционных организаций. Для этого он организовал в Париже специальное бюро с помощью Камо и нескольких других кавказских товарищей. Летом 1905 года на острове Нарген близ Ревеля Литвинов подготовил приёмку английского парохода John Grafton, доверху наполненного оружием и динамитом. Пароход не дошёл до места назначения, так как наскочил на мель. В 1906 году, закупив большую партию оружия для кавказских революционеров, Литвинов с помощью македонского революционера Наума Тюфекчиева доставил его в Болгарию в Варну. Для дальнейшей перевозки оружия по Чёрному морю на Кавказ Литвинов купил в Фиуме яхту. Однако отправленная Литвиновым яхта из-за шторма села на мель у румынского берега, команда разбежалась, а оружие было растащено румынскими рыбаками. Из-за крушения судов эти два случая стали известны, однако сколько кораблей с оружием дошло до места назначения остаётся тайной.
С 1907 жил в эмиграции. В 1907 был секретарем делегации РСДРП на международном социалистическом конгрессе в Штутгарте. В 1908 арестован во Франции в связи с делом о разбойном нападении в Тифлисе, совершённом Камо в 1907 (пытался разменять купюры, похищенные во время ограбления). Франция выслала Литвинова в Великобританию. В Лондоне он провёл десять лет.
При содействии директора лондонской библиотеки Чарльза Райта Литвинов получил работу в издательской компании «Уильямс энд Норгейт» (). В 1912 году Литвинов жил в Лондоне в доме № 30 по Харрингтон-стрит. Был секретарём лондонской группы большевиков и секретарём Герценовского кружка.
В июне 1914 он стал представителем ЦК РСДРП в Международном социалистическом бюро. В феврале 1915 выступал от имени большевиков на международной социалистической конференции в Лондоне.
После Октябрьской революции.
Революция застала М. М. Литвинова в Лондоне. С января по сентябрь 1918 года он являлся дипломатическим представителем Советской России в Великобритании (с января уполномоченный НКИД, с июня полпред РСФСР).
Первоначально Британское правительство не признало его полномочий официально, но поддерживало неофициальные контакты с Литвиновым, выделив для этого одного из чиновников МИДа Рекса Липера (), через которого Литвинов мог передавать Бальфуру всё, что сочтёт необходимым.
Когда в январе 1918 года английское правительство направило в Советскую Россию в качестве своего представителя Роберта Брюса Локкарта, он поспешил войти в контакт с Литвиновым и встретился с ним в ресторане. По просьбе их общего друга Ф. А. Ротштейна Литвинов написал для Локкарта рекомендательное письмо к Троцкому, которое гласило:
Товарищу Троцкому, народному комиссару иностранных дел.
Дорогой товарищ, податель сего, мистер Локкарт отправляется в Россию с официальной миссией, с точным характером которой я мало знаком. Я знаю его лично как полностью честного человека, который понимает наше положение и симпатизирует нам. Я считаю его поездку в Россию полезной с точки зрения наших интересов… Ваш М. Литвинов.
Сам Литвинов вспоминал об этом периоде работы: «Каковы были мои отношения с английским правительством и английской общественностью? В этом отношении резко различаются два периода: до и после заключения Брестского мира. До заключения Брестского мира отношение ко мне официальной и неофициальной Англии было, учитывая время и обстоятельство, сравнительно благожелательно.»
Литвинов сделал попытку ликвидировать продолжавшее существовать в Лондоне старое русское посольство, возглавляемое К. Д. Набоковым, сотрудники которого не признали Советской власти и отказались работать с Троцким. Он направил к Набокову сотрудника с письмом, требуя передать ему Чешем-Хаус (здание посольства), но получил отказ.
6 сентября 1918 года Литвинова арестовали в ответ на арест в России английского дипломата Локкарта. Проведя 10 дней в Брикстонской тюрьме, Литвинов был освобождён, а через месяц страны организовали обмен этих дипломатов.
По возвращении в Россию в ноябре 1918 г. Литвинов был введён в состав коллегии Наркомата иностранных дел РСФСР. В декабре 1918 года по указанию Ленина он был командирован в Стокгольм, откуда пытался установить контакты с представителями Антанты, и в начале 1919 возвратился в Москву. В марте 1919 Литвинов участвовал в переговорах с приехавшим в Советскую Россию американским представителем Уильямом Буллитом. В ноябре 1919 Литвинов выехал в Копенгаген, где вёл переговоры с британским представителем О’Грэди, которые завершились 12 февраля 1920 подписанием британско-советского соглашения об обмене пленными. Нарком Чичерин высоко оценивал деятельность Литвинова в Копенгагене в 1920 году: «… он является единственным серьёзным политическим контролем над делегацией, и без него никакого контроля над ней не будет; вообще его пребывание за границей имеет для нас прямо-таки неоценимое значение, он один даёт нам постоянную замечательно проницательную информацию о каждом биении пульса мировой политики». Интересно, что когда в начале 1920 г. Литвинов был включён в состав советской торговой миссии, направлявшейся в Великобританию, он был признан «персоной нон грата» (нежелательным лицом) и в Лондон поехать не смог. В 1920 г. назначен полпредом РСФСР в Эстонии.
С 10 мая 1921 года по 1930 год — заместитель наркома по иностранным делам РСФСР (с 1923 г. — СССР) Г. В. Чичерина. Б. Г. Бажанов, бывший секретарём Политбюро ВКП(б) в 1920-х годах, вспоминал:
Первыми вопросами на каждом заседании Политбюро обычно идут вопросы Наркоминдела. Обычно присутствует нарком Чичерин и его заместитель Литвинов. …
Чичерин и Литвинов ненавидят друг друга ярой ненавистью. Не проходит и месяца, чтобы я получил «строго секретно, только членам Политбюро» докладной записки и от одного, и от другого. Чичерин в этих записках жалуется, что Литвинов — совершенный хам и невежда, грубое и грязное животное, допускать которое к дипломатической работе является несомненной ошибкой. Литвинов пишет, что Чичерин — педераст, идиот и маньяк, ненормальный субъект, работающий только по ночам, чем дезорганизует работу наркомата; к этому Литвинов прибавляет живописные детали насчет того, что всю ночь у дверей кабинета Чичерина стоит на страже красноармеец из войск внутренней охраны ГПУ, которого начальство подбирает так, что за добродетель его можно не беспокоиться. Члены Политбюро читают эти записки, улыбаются, и дальше этого дело не идёт.
«Мои отношения с Литвиновым дошли до белого каления, между тем Политбюро им дорожит, и мне остаётся только просить о назначении меня на маленькую работу в провинции, лишь бы уйти от Литвинова» (Из письма Чичерина к Ворошилову в январе 1928 года).
По совместительству Литвинов был членом коллегии наркомата Госконтроля и заместителем председателя Главконцесскома. В 1922 году входил в состав советской делегации на Генуэзской конференции. В декабре 1922 председательствовал на конференции по разоружению в Москве, куда были приглашены Польша, Литва, Латвия, Эстония и Финляндия. В 1927—1930 годах являлся главой советской делегации в подготовительной комиссии Лиги Наций по разоружению.
В 1930—1939 г. — нарком по иностранным делам СССР.
Возглавлял советские делегации на конференции Лиги наций по разоружению (1932), на Мирной экономической конференции в Лондоне (1933), в 1934—1938 представлял СССР в Лиге Наций.
В конце апреля (20—27) 1939 года в Кремле состоялось правительственное совещание с участием Сталина, Молотова, Литвинова, Майского, Мерекалова и др. «Тогда, как заметил Майский, в отношениях между Сталиным и Молотовым, с одной стороны, и Литвиновым с другой, уже существовала напряженность. В крайне возбуждённой атмосфере, в которой Сталин с трудом сохранял видимое спокойствие, &lt;…&gt; Молотов открыто обвинил Литвинова в политическом головотяпстве…». 3 мая, после доклада Сталину о последних событиях, связанных с англо-франко-советскими переговорами, отстранён от должности. Молотов обвинял бывшего наркома: «Литвинов не обеспечил проведения партийной линии в наркомате в вопросе о подборе и воспитании кадров, НКИД не был вполне большевистским, так как товарищ Литвинов держался за ряд чуждых и враждебных партии и советскому государству людей».
С уходом в 1939 году с поста наркома прекратил активную политическую деятельность.
Возвращён к работе с началом Великой Отечественной войны. На беседе у Сталина с Гопкинсом 31 июля Литвинов присутствовал в качестве переводчика.
В 1941—1946 годах заместитель наркома иностранных дел СССР, одновременно в 1941—1943 годах посол СССР в США и в 1942—1943 годах посланник СССР на Кубе. Известно, что перед отъездом из США Литвинов нанёс визит вице-госсекретарю США Самнеру Уэллзу ("Sumner Welles"), во время которого критиковал Сталина за непонимание Запада, советскую систему за негибкость, и особенно своего преемника на должности наркома иностранных дел Вячеслава Молотова. С 1946 года в отставке.
В конце 1951 года он перенёс очередной инфаркт и скончался 31 декабря. Его сын Михаил Литвинов рассказывал журналисту Леониду Млечину: «Отец последние месяцы лежал неподвижно, — после инфаркта рядом с ним неотлучно находилась медицинская сестра». Похоронен на Новодевичьем кладбище.
Планы убийства Литвинова.
Как описывает В. М. Бережков в мемуарах, в личной беседе соратник Сталина Анастас Микоян рассказал ему об отношении вождя к Литвинову и, в частности, о факте ведения им слишком свободных бесед с иностранцами, о чём стало известно Политбюро:
и, возможно, рассказывая о «гибели Литвинова», он перепутал его с Соломоном Михоэлсом — о гибели последнего тогда была распространена версия об автомобильной катастрофе, Литвинов и Михоэлс были дружны:
, что сам Сталин якобы приказал устроить смерть Литвинова в автокатастрофе в наказание за то, что последний дал советы американским дипломатам по более жесткому ведению переговоров с СССР в последние годы второй мировой войны.
— У Сталина была причина расправиться с Литвиновым, — продолжал Микоян. — В последние годы войны, когда Литвинов был уже фактически отстранён от дел и жил на даче, его часто навещали высокопоставленные американцы, приезжавшие тогда в Москву и не упускавшие случая по старой памяти посетить его. Они беседовали на всякие, в том числе и на политические, темы.
В одной из таких бесед американцы жаловались, что советское правительство занимает по многим вопросам неуступчивую позицию, что американцам трудно иметь дело со Сталиным из-за его упорства. Литвинов на это сказал, что американцам не следует отчаиваться, что неуступчивость эта имеет пределы и что если американцы проявят достаточную твердость и окажут соответствующий нажим, то советские руководители пойдут на уступки. Эта, как и другие беседы, которые вёл у себя на даче Литвинов, была подслушана и записана. О ней доложили Сталину и другим членам политбюро. Я тоже её читал. Поведение Литвинова у всех нас вызвало возмущение. По существу, это было государственное преступление, предательство. Литвинов дал совет американцам, как им следует обращаться с советским правительством, чтобы добиться своих целей в ущерб интересам Советского Союза. Сперва Сталин хотел судить и расстрелять Литвинова. Но потом решил, что это может вызвать международный скандал, осложнить отношения между союзниками, и он до поры до времени отложил это дело. Но не забыл о нём. Он вообще не забывал таких вещей. И много лет спустя решил привести в исполнение свой приговор, но без излишнего шума, тихо. И Литвинов погиб в автомобильной катастрофе…
И действительно, по некоторым данным группой Судоплатова под руководством Берии велось планирование убийства Литвинова наряду с рядом других людей (хотя всё же не было осуществлено). В своих воспоминаниях Хрущёв написал:
Таким же образом хотели организовать убийство Литвинова. Когда подняли ряд документов после смерти Сталина и допросили работников МГБ, то выяснилось, что Литвинова должны были убить по дороге из Москвы на дачу. Есть там такая извилина при подъезде к его даче, и именно в этом месте хотели совершить покушение. Я хорошо знаю это место, потому что позднее какое-то время жил на той самой даче. К убийству Литвинова имелось у Сталина двоякое побуждение. Сталин считал его вражеским, американским агентом, как всегда называл все свои жертвы агентами, изменниками Родины, предателями и врагами народа. Играла роль и принадлежность Литвинова к еврейской нации.
В сборнике документов «Реабилитация: как это было» (том 2, с. 499) приводится ответ Отдела административных органов ЦК КПСС от 1966 года на ходатайствование о реабилитации Судоплатова и Эйтингона со следующей информацией:
По этому вопросу Берия в августе 1953 г. показал: «… до начала войны мною Церетели намечался на работу в специальную группу, которую возглавлял Судоплатов, для осуществления специальных заданий, то есть избиения, тайного изъятия лиц, подозрительных по своим связям и действиям. Так, например, имелось в виду применить такую меру, как уничтожение Литвинова, Капицы. В отношении режиссёра Каплера намечалось крепко избить его… В эту группу были привлечены мной особо доверенные лица».
Подтверждается информация о планировании убийства Литвинова и в записке Комиссии Президиума ЦК КПСС под председательством Н. М. Шверника о результатах работы по расследованию причин репрессий и обстоятельств политических процессов 30-х годов (1963):В 1940 году подготавливалось тайное убийство бывшего наркома иностранных дел СССР Литвинова.
Семья.
Жил в фактическом браке с Фридой Ямпольской — соратницей по революционной деятельности. Затем в 1916 году женился на Айви Лоу (, 1889—1978) , дочери еврейских революционных эмигрантов из Венгрии, писательнице, писавшей под фамилией мужа (Айви Литвинов). Айви Лоу преподавала английский язык в Военной академии им. М. Фрунзе. В 1972 году выехала в Англию, где и скончалась. Всю жизнь сохраняла подданство Великобритании .
У М. М. Литвинова и А. Лоу было двое детей: сын Михаил — окончил мехмат МГУ (1941), математик и инженер, и дочь Татьяна — известная переводчица. Внук Максима Максимовича (сын Михаила) Павел Литвинов — активный участник диссидентского движения в СССР, участник «демонстрации семерых» на Красной площади 25 августа 1968 г. Правнук Дмитрий Литвинов — гражданин США и Швеции, пресс-секретарь Greenpeace (29 сентября 2013 года был арестован на два месяца при попытке проведения протестной акции на нефтеплатформе «Приразломная»). Внучки Максима Максимовича (дочери Татьяны) Маша Слоним (Мария Ильинична Филлимор) — британская и российская журналистка, и Вера Чалидзе (жена правозащитника Валерия Чалидзе), обе работали в Русской службе Би-Би-Си.
Память.
Именем Максима Литвинова назван теплоход, построенный в 1991 году для Волго-Донского пароходства (история и описание судна).

</doc>
<doc id="1024" url="?curid=1024" title="Ломоносов, Михаил Васильевич">
Ломоносов, Михаил Васильевич

Биография.
Детство.
"См также Предки и потомки М. В. Ломоносова"
Михаил Ломоносов родился в деревне Мишанинской Куростровской волости Двинского уезда Архангелогородской губернии (Архангельская область) в зажиточной семье помора Василия Дорофеевича (1681—1741) и дочери просвирницы погоста Николаевских Матигор, Елены Ивановны (урождённой Сивковой) Ломоносовых. Отец, по отзыву сына, был по натуре человек добрый, но «в крайнем невежестве воспитанный». Мать М. В. Ломоносова умерла очень рано, когда ему было девять лет. В 1721 году отец женился на Феодоре Михайловне Усковой. Летом 1724 года и она умерла. Через несколько месяцев, возвратившись с промыслов, отец женился в третий раз — на вдове Ирине Семёновне (в девичестве Корельской). Для тринадцатилетнего Ломоносова третья жена отца оказалась «злой и завистливой мачехой».
Михаил начал помогать отцу с десяти лет. Вместе они ходили рыбачить в Белое море и до Соловецких островов. Нередкие опасности плавания закаляли физические силы юноши и обогащали его ум разнообразными наблюдениями. Влияние природы русского севера легко усмотреть не только в языке М. В. Ломоносова, но и в его научных интересах: «вопросы северного сияния, холода и тепла, морских путешествий, морского льда, отражения морской жизни на суше — всё это уходит далеко вглубь, в первые впечатления молодого помора».
Принадлежность к поморам.
Ставится под сомнение именование «помором» Михаила Васильевича Ломоносова, происходившего из семьи крестьян Куростровской волости под Холмогорами, которые только по случаю и редко занимались дальними для них морскими промыслами. Журналист Дмитрий Семушин утверждает, что «Поморскость» М. В. Ломоносова — это красивый исторический миф.
Сам М. В. Ломоносов сообщил о своём происхождении на допросе 4 сентября 1734 г. в канцелярии московского синодального правления: «Рождением-де он, Михайло Архангелогородской губернии Двинского уезда дворцовой Куростровской деревни крестьянина Василия Дорофеева сын, и тот-де его отец и поныне в той деревне обретается с прочими крестьяны и положен в подушный оклад». Исторических документов, в которых М. В. Ломоносов именовал себя или своих родственников «поморами» не существует. Он — крестьянин по сословному состоянию и двинянин по местному региональному определению. Локализация «двинянин», то есть житель Двинского уезда, согласуется с определением «двинские жители» («двинской народ»), используемым младшим современником М. В. Ломоносова местным историком архангелогородцем Василием Васильевичем Крестининым (1729—1795).
В документах со сведениями об отце М. В. Ломоносова Василии Дорофеевиче и его дяде Луке Леонтьевиче, сохранившихся в Государственном архиве Архангельской области, они именуются «крестьянами Куроостровской волости», «двинянами», «холмогорцами», но никак не «поморами». Племянница М. В. Ломоносова, Матрёна Евсеевна Головина (в замужестве Лопаткина), воспоминания которой были записаны в 1828 году Павлом Петровичем Свиньиным в Архангельске, не именовала «поморами» самого М. В. Ломоносова и встречавшихся с ним его земляков, приходивших из Архангельска на кораблях в Санкт-Петербург.
Биографом, который впервые сделал из М. В. Ломоносова «помора», был русский историк Владимир Иванович Ламанский (1833—1914). К столетию смерти учёного в 1863 г. он издал его биографию, в которой впервые в биографической литературе М. В. Ломоносов назван «помором». В. И. Ламанский с начала 60-х гг. ХIХ в. занимался историей Российской академии наук. Он никогда не был специалистом по истории Русского Севера. Но при этом В. И. Ламанский был чрезвычайно талантливым и плодовитым историком, потому биография В. И. Ламанского повлияла на всё последующее биографическое «ломоносоведение».
Начальное образование.
Грамоте обучил Михаила Ломоносова дьячок местной Дмитровской церкви С. Н. Сабельников. «Вратами учёности», по его собственному выражению, для него делаются «Грамматика» Мелетия Смотрицкого, «Арифметика» Л. Ф. Магницкого, «Стихотворная Псалтырь» Симеона Полоцкого. В четырнадцать лет юный Ломоносов грамотно и чётко писал.
Жизнь Ломоносова в родном доме делалась невыносимой, наполненной постоянными ссорами с мачехой. Особенно ожесточала мачеху страсть Ломоносова к книгам. Узнав, что отец хочет женить его, Ломоносов решил бежать в Москву. Он притворился больным, женитьбу пришлось отложить.
Образование в России (1731—1735).
В декабре 1730 года 19-летний Михаил отправляется вместе с рыбным караваном из Холмогор в Москву. Путешествие в Москву выглядело как бегство, поскольку будущий учёный покинул дом ночью, тайно, ни с кем не простившись. Долгое время его считали беглым. Ломоносов взял с собой, помимо одежды (две рубахи и тулуп), лишь подаренные ему соседом «Грамматику» Смотрицкого и «Арифметику» Магницкого. Отправился он пешком, нагнав караван лишь на третий день и упросил рыбаков разрешить ему идти вместе с ними. Путешествие до Москвы заняло три недели, и в начале января 1731 года Ломоносов прибыл в Москву.
Чтобы поступить в «Спасские школы», то есть, в Славяно-греко-латинскую академию, Ломоносову пришлось подделать документы и выдать себя «за сына холмогорского дворянина».
В письме И. И. Шувалову (10 мая 1753 года) он вспоминает обстоятельства своей жизни того времени и рассказывает о страстной тяге своей к учёбе, бедности («один алтын в день») и насмешках малолетних одноклассников.
Ломоносов зарекомендовал себя как прилежный ученик. В библиотеке Заиконоспасского монастыря он читал летописи, патристику и другие богословские книги, — издания светского содержания и философские, и даже — физические и математические сочинения; «находимыя в оной книги утвердили его в языке славянском». Современные исследователи отмечают глубокое знакомство Ломоносова с самыми разными жанрами древнерусской литературы.
В 1734 году Ломоносов отправляется в Киев, где на протяжении нескольких месяцев обучается в Киево-Могилянской академии, но, не найдя там совершенно материалов для физики и математики, он «прилежно перечитывал летописи и творения святых отцов».
Первый петербургский период.
В 1735 году, не дойдя ещё до богословского класса, Ломоносов был вместе с другими двенадцатью учениками Спасского училища отправлен в Петербург и зачислен в студенты университета при Академии Наук. По одной из версий, богословская карьера Ломоносова оборвалась из-за вскрывшегося подлога документов при поступлении. Рукоположение не состоялось, но способный семинарист был направлен на ниву естествознания. В первые дни пребывания в Петербурге Ломоносов и его товарищи поселились при самой Академии Наук, а в дальнейшем переехали на жительство в снятое Академией каменное здание новгородской епархии на 1-й линии Васильевского острова, около Невы. Для них были куплены простые деревянные кровати с тюфяками, по одному маленькому столу и стулу, на всех три платяных и три книжных шкафа. Им были выданы необходимые одежда, обувь, бельё и т. д. Одним из существенных пробелов в их образовании было то, что они не знали немецкого языка, распространённого в то время в Академии. Занятия начались с изучения немецкого языка, которому их обучал ежедневно учитель Христиан Герман.
Под руководством В. Е. Адодурова он начал изучать математику, у профессора Г. В. Крафта знакомился с экспериментальной физикой, самостоятельно изучал стихосложение. По свидетельству ранних биографов, в течение этого довольно непродолжительного периода обучения в Петербургской академии Ломоносов «слушал начальные основания философии и математики и прилежал к тому с крайнею охотою, упражняясь между тем и в стихотворении, но из сих последних его трудов ничего в печать не вышло. Отменную оказал склонность к экспериментальной физике, химии и минералогии».
Учёба за границей (1736—1740).
В марте 1736 года Академия Наук (в лице президента Иоганна Корфа) принимает решение отправить в Европу 12 наиболее способных молодых людей из «Спасских школ» для обучения естественным (физика, химия) и техническим наукам (металлургия, горное дело). Переехав в Германию, Ломоносов поселяется в доме вдовы немецкого пивовара, на дочери которого он впоследствии женился.
За границей Ломоносов обучался пять лет: около 3 лет в Марбургском университете, под руководством знаменитого Христиана Вольфа, и около года во Фрайберге, у Генкеля; около года провёл он в переездах, был в Голландии.
Помимо заявленного обучения, Ломоносов укрепил свои знания немецкого языка, обучался французскому и итальянскому языкам, танцам, рисованию и фехтованию. В период обучения в Марбургском университете Ломоносов начал собирать свою первую библиотеку, потратив на книги значительную часть выдававшихся денег. Весьма внушителен список художественной литературы, вошедшей в это его первое собрание; здесь и античность, и современные авторы: Анакреон, Сафо, Вергилий, Сенека, Овидий, Марциал, Цицерон, Плиний Младший, Помей, Эразм Роттердамский, Фенелон, Свифт, Гюнтер, «Избранные и лучшие письма французских писателей, переведённые на немецкий язык» (Гамбург, 1731), «Вновь расширенное поэтическое руководство, то есть кратко изложенное введение в немецкую поэзию» И. Гюбнера (Лейпциг, 1711) и другие.
1737—1738 годы Ломоносов посвятил занятиям различными науками. Его первая студенческая работа по физике «О превращении твёрдого тела в жидкое, в зависимости от движения предшествующей жидкости».
Весной 1739 года Ломоносов представил ещё одну работу «Физическая диссертация о различии смешанных тел, состоящих в сцеплении корпускул», в которой рассматривались вопросы о строении материи и намечались контуры новой корпускулярной физики и химии.
Изучение естественных наук Ломоносов успешно сочетал с литературными занятиями. В Марбурге он познакомился с новейшей немецкой литературой. Ломоносов занимался с увлечением не только теоретическим изучением западноевропейской литературы, но и практической работой над стихотворными переводами.
Жизнь Ломоносова и его товарищей за границей осложнялась из-за неурядиц с пересылкой денег на их содержание и обучение. Средства от Академии Наук поступали нерегулярно, и студентам приходилось жить в долг.
К началу 1739 года Ломоносов и его товарищи завершили своё обучение в Марбурге. К этому времени от него уже забеременела дочь хозяйки, 19-летняя "Елизавета Цильх", с которой он сыграл свадьбу в Марбурге по реформатскому обряду 26 мая 1740 года. Первая их дочь Екатерина родилась до свадьбы и считалась незаконнорожденной. Вскоре из Петербурга пришло предписание готовиться к отъезду во Фрайберг к Генкелю для изучения металлургии и горного дела.
Пять дней потребовалось русским студентам на дорогу до Фрайберга. 14 июля 1739 года они прибыли в этот старейший горнозаводской центр Саксонии.
После относительно независимой и свободной университетской жизни в Марбурге русские студенты попали в полное подчинение к строгому и педантичному Й. Ф. Генкелю. Обучение Генкель начал с занятий минералогией и металлургией. Преподавание строилось в основном на практических занятиях: посещение рудников и металлургических заводов сопровождалось объяснениями производственных процессов. Здесь Ломоносов познакомился с устройством рудников, способами укрепления шахт, подъёмными машинами. Позднее, в своей книге «Первые основания металлургии, или рудных дел», Ломоносов широко использовал знания и опыт, приобретённый во Фрайберге.
Первая серьёзная ссора с наставником разразилась в конце декабря 1739 года. Поводом послужил отказ Ломоносова выполнить черновую работу, которую ему поручил Генкель. Весной, когда Ломоносов и его коллеги после очередного скандала пришли просить денег на своё содержание, Генкель им отказал. Отношения оказались окончательно испорчены. Кроме того, Ломоносов считал, что ему уже нечему учиться во Фрайберге.
Возвращение в Россию.
В начале мая 1740 года Ломоносов, оставив некоторые свои книги товарищам и захватив с собой небольшие пробирные весы с гирьками, навсегда покинул Фрайберг. Ломоносов рассчитывал с помощью барона Г. К. фон Кейзерлинга, русского посланника, уехать в Россию. Но, прибыв в Лейпциг, где, по его расчётам, должен был находиться посланник, Ломоносов не застал его там. Затем он решил возвращаться в Россию морским путём через Голландию, но, по дороге, напившись в трактире с прусскими солдатами, оказался в немецкой казарме в Везеле, откуда вскоре сбежал. В октябре 1740 года Ломоносов опять в Марбурге, где вновь живёт в доме тёщи. Возвращение Ломоносова в Петербург шло через порт Любек, который он покинул в мае 1741 года
Второй Петербургский период.
Адъюнкт.
8 июня в 1741 году 30-летний Ломоносов вернулся в Петербург, оставив жену в Марбурге. В России он никому не рассказывал о своей женитьбе и почти 2 года не вспоминал о своей жене, пока она не нашла его через российское посольство. Узнав о запросе от жены, Ломоносов не стал отрицать факта свадьбы и способствовал её переезду в Петербург.
10 июня 1741 года Ломоносов был направлен к профессору ботаники и естественной истории И. Амману для изучения естествознания. Будучи студентом и не получая никакого жалования, Ломоносов под руководством Аммана приступил к составлению Каталога собраний минералов и окаменелостей Минерального кабинета Кунсткамеры.
24 августа 1741 года Ломоносов представил на прочтение академиков две диссертации: одну по физике и другую по химии. Он надеялся, что их одобрят, а их автора, согласно данному Академией обещанию при отправке его за границу, произведут в экстраординарные профессора. Но месяцы сменялись месяцами, а Ломоносов всё не получал никакого назначения. В ожидании он занялся переводами статей профессора физики Крафта.
Наконец, 25 ноября 1741 года на престол вступила императрица Елизавета Петровна. Убеждённый в том, что императрица не намерена покровительствовать иноземцам, Ломоносов решается подать прошение на высочайшее имя о своём назначении. На этот раз прошение возымело надлежащее действие и Шумахер поторопил академиков высказать своё мнение о диссертациях Ломоносова.
8 января 1742 года секретарь канцелярии уже подписал следующее постановление: «Понеже сей проситель, студент Михайло Ломоносов, специмен своей науки ещё в июле месяце прошлого 1741 году в конференцию подал, который от всех профессоров оной конференции так опробован, что сей специмен и в печать произвесть можно; к тому ж покойный профессор Амман — его, Ломоносова, канцелярии рекомендовал; к тому-же оный Ломоносов в переводах с немецкого и латинского на российский язык довольно трудился, а жалованья и места поныне ему не определено; то до дальнейшего указа из Правительствующего сената и нарочного Академии определения быть ему Ломоносову, адъюнктом физического класса. А жалованья определяется ему с 1742 года, января с 1 числа, по 360 рублей на год, счисляя в то число квартиру, дрова и свечи».
Вступив в должность, Ломоносов почти тотчас же обратился с предложением устроить химическую лабораторию, которой до сих пор ещё не было при Академии наук. Но это первое предложение не обратило на себя никакого внимания.
В апреле 1743 года Ломоносов за дерзкое поведение был заключён под стражу на 8 месяцев. Только 12 января 1744 года Сенат, заслушав доклад Следственной комиссии, постановил: «Оного адъюнкта Ломоносова для его довольного обучения от наказания освободить, а во объявленных им продерзостях у профессоров просить прощения» и жалованье ему в течение года выдавать «половинное». В это время из Германии приезжает жена Елизавета. Следует отметить, что борьба немецкой и антинемецкой партии в Академии происходила на фоне конца правления Анны Иоановны, которое характеризовалось бироновщиной и «засильем немцев» — доминированием иностранцев в государственном аппарате, науке и образовании.
Профессор.
25 июля 1745 года специальным указом 34-летнему Ломоносову было присвоено звание профессора химии. Его диссертация называлась «О металлическом блеске». По табели о рангах он становился чиновником VII класса и получал дворянский статус. В том же году он хлопочет о разрешении читать публичные лекции на русском языке; в 1746 году — о наборе студентов из семинарий, об умножении переводных книг, о практическом приложении естественных наук. В то же время Ломоносов усиленно ведёт свои занятия в области минералогии, физики и химии, печатает на латинском языке длинный ряд научных трактатов.
В 1748 году при Академии возникают Исторический Департамент и Историческое Собрание, в заседаниях которого профессор химии Ломоносов начинает вести полемику с Г. Ф. Миллером. Он предъявляет Миллеру обвинения в умышленном принижении русского народа в научных исследованиях. Ломоносов представляет ряд записок и проектов с целью «приведения Академии Наук в доброе состояние», усиленно проводя мысль о «недоброхотстве учёных иноземцев к русскому юношеству», к его обучению.
В 1749 году, в торжественном собрании Академии Наук, Ломоносов произносит «Слово похвальное императрице Елизавете Петровне», имевшее большой успех; с этого времени Ломоносов начинает пользоваться большим вниманием при дворе. В 1753 году Ломоносову, при помощи И. И. Шувалова, удаётся устроить фабрику мозаики. Для этих целей 6 мая 1753 императрица Елизавета жалует Ломоносову мызу Усть-Рудица и четыре окрестных деревни.
В том же году Ломоносов хлопочет об устройстве опытов над электричеством, о пенсии семье профессора Г. В. Рихмана, который погиб в 1753 году во время электрического эксперимента; особенно озабочен Ломоносов тем, чтобы «сей случай (смерть Рихмана во время физических опытов) не был протолкован противу приращения наук».
В 1754 г. Ломоносов, недовольный тем, что премия за решение объявленной Академией наук задачи досталась У. Сальхову, в сердцах отказался от кафедры химии. Миллер его слова об отказе заведовать кафедрой химии внёс в протокол, и кафедра была передана Сальхову. Лишённый лаборатории, Ломоносов с этого времени вынужден был заниматься химией у себя дома и в Усть-Рудицах.
Ломоносов сближается с любимцем Елизаветы И. И. Шуваловым, что создаёт ему массу завистников, во главе которых стоит И. Д. Шумахер. Под влиянием Ломоносова совершается в 1755 году открытие Московского университета, для которого он составляет первоначальный проект, основываясь на «учреждениях, узаконениях, обрядах и обыкновениях» иностранных университетов. В 1756 году Ломоносов отстаивает права низшего русского сословия на образование в гимназии и университете.
Коллежский советник.
13 февраля 1757 года 46-летний профессор Ломоносов получает чин коллежского советника. По табели о рангах он становился чиновником VI класса. Новым местом его службы стала канцелярия Академии, он ведал научными и учебными департаментами. Назначенный в 1758 г. главой Географического департамента Академии наук, Ломоносов начинает работу по составлению нового «Атласа российского» и добивается рассылки во все губернии географических анкет, сведения из которых могли бы помочь в создании различных карт. В 1759 году он занят устройством гимназии и составлением устава для неё и университета при Академии, причём, опять всеми силами отстаивает права низших сословий на образование, возражая на раздававшиеся вокруг него голоса: «куда с учёными людьми?». Учёные люди — доказывает Ломоносов, — нужны «для Сибири, для горных дел, фабрик, сохранения народа, архитектуры, правосудия, исправления нравов, купечества, единства чистые веры, земледельства и предзнания погод, военного дела, хода севером и сообщения с ориентом (востоком)». В то же время идут занятия Ломоносова по Географическому Департаменту; под влиянием его сочинения «О северном ходу в Ост-Индию Сибирским океаном» в 1764 году снаряжается экспедиция в Сибирь. В конце жизни Ломоносов был избран почётным членом Стокгольмской (1760) и Болонской (1764) академий наук.
Смерть.
Ломоносов умер 15 апреля 1765 года на 54-м году жизни от воспаления лёгких. Незадолго до смерти Ломоносова посетила императрица Екатерина II, «чем подать благоволила новое Высочайшее уверение о истинном люблении и попечении своём о науках и художествах в отечестве» («Санкт-Петербургские Ведомости», 1764).
На следующий день после смерти Ломоносова его библиотека и бумаги были по приказанию Екатерины II опечатаны Г. Г. Орловым, перевезены в его дворец и исчезли бесследно. Уже современники связывали изъятие документов с боязнью «выпустить в чужие руки» бумаги Ломоносова.
Ломоносов похоронен на Лазаревском кладбище Александро-Невской лавры. Надгробие М. В. Ломоносова, поставленное канцлером М. И. Воронцовым — стела из каррарского мрамора с латинской и русской эпитафией и аллегорическим рельефом. Мастер Ф. Медико (Каррара) по эскизу Я. Штелина, 1760-е годы.
В то же время поэт Сумароков так откомментировал смерть Ломоносова:
Семья и потомки.
С ноября 1736 года (после 4 числа) Михаил Ломоносов жил в доме вдовы марбургского пивовара, члена городской думы и церковного старосты Генриха Цильха, Екатерины-Елизаветы Цильх (урождённой Зергель). Через два с небольшим года, в феврале 1739-го, Михаил Ломоносов женился на её дочери Елизавете-Христине Цильх (1720—1766). 8 ноября 1739 года у них родилась дочь, получившая при крещении имя Екатерина-Елизавета. 26 мая 1740 года Михаил Ломоносов и Елизавета-Христина Цильх обвенчались в церкви реформатской общины Марбурга. Сын М. В. и Е.-Х. Ломоносовых, родившийся в Германии 22 декабря 1741 года, и получивший при крещении имя Иван, умер в Марбурге в январе 1742 года (до 28 числа, когда был погребён). В 1743 году (не позднее ноября) Елизавета-Христина Ломоносова с дочерью Екатериной-Елизаветой и братом Иоганном Цильхом приехала в Санкт-Петербург. Первая дочь Ломоносовых умерла в 1743 году (о третьем их ребёнке, якобы также умершем, сведения недостоверны). 21 февраля 1749 года в Санкт-Петербурге у них родилась дочь Елена. Так как Михаил Васильевич не имел сыновей, линия рода Ломоносовых, которую он представлял, пресеклась.
Единственная оставшаяся в живых дочь Елена Михайловна Ломоносова (1749—1772) вышла замуж за Алексея Алексеевича Константинова, домашнего библиотекаря императрицы Екатерины II. В этом браке родились сын Алексей (ок. 1767—1814) и три дочери Софья (1769—1844), Екатерина (ок. 1771—1846) и Анна (ок. 1772—1864). Софья Алексеевна Константинова вышла замуж за Николая Николаевича Раевского-старшего, генерала, героя Отечественной войны 1812 года.
Научная деятельность.
А. С. Пушкин так характеризует деятельность Ломоносова:
А. С. Пушкин также сказал о Ломоносове:
Естествознание.
Основной областью своей деятельности М. В. Ломоносов считал химию, но как показывает его наследие, эта дисциплина, вступая на разных этапах его творчества во взаимодействие с другими разделами естествознания, оставалась в неразрывной связи с ними в контексте всего разнообразия его исследований, которые, в свою очередь, пребывали во взаимосвязи между собой. Такое логическое единство является следствием понимания им единства природы и существования немногих фундаментальных законов, лежащих в основе всего целостного многообразия явлений. Это логическое единство демонстрируют не только его труды, относящиеся к естественным наукам и философии — оно прослеживается между ними и его поэтическим творчеством. А учитывая вышесказанное, не только потому, что в отдельных случаях оно становится «прикладным» по отношению к ним, выполняя функцию своеобразной «рекламы» — когда он использовал весь дар своего красноречия, ища поддержки изысканий, в целесообразности которых был твёрдо убеждён и страстно заинтересован и как естествоиспытатель-теоретик, и как последовательный практик («Письмо о пользе Стекла»). Учёный мечтал построить всю свою «Натуральную философию» на основе объединяющих идей, в частности, на основе идеи о «коловратном» (вращательном) движении частиц.
М. В. Ломоносов своей «корпускулярной философией» не только подвергает критике наследие алхимии и ятрохимии, но, выдвигая продуктивные идеи, использовавшиеся им на практике — формирует новую теорию, которой суждено было стать фундаментом современной науки.
Показателен пример фундаментальной многосторонности его интересов, «дальнобойности ума» — по словам Н. Н. Качалова, причём относится он, этот пример, к области, занимавшей далеко не первостепенное место в круге интересов М. В. Ломоносова. Выдающийся русский геолог и почвовед В. В. Докучаев пишет в своих лекциях, изданных в 1901 году: «На днях проф. Вернадский получил поручение от Московского университета разобрать сочинения Ломоносова, и я с удивлением узнал от проф. Вернадского, что Ломоносов давно уже изложил в своих сочинениях ту теорию, за защиту которой я получил докторскую степень, и изложил, надо признаться, шире и более обобщающим образом».
Молекулярно-кинетическая теория тепла.
Одним из выдающихся естественнонаучных достижений М. В. Ломоносова является его молекулярно-кинетическая теория тепла.
М. В. Ломоносов обращает внимание научного сообщества на то, что ни расширение тел по мере нагревания, ни увеличение веса при обжиге, ни фокусировка солнечных лучей линзой — не могут быть качественно объяснены теорией теплорода. Связь тепловых явлений с изменениями массы отчасти и породила представление о том, что масса увеличивается вследствие того, что материальный теплород проникает в поры тел и остаётся там. Но, спрашивает М. В. Ломоносов, почему при охлаждении тела теплород остаётся, а сила тепла теряется?
Опровергая одну теорию, М. В. Ломоносов предлагает другую, в которой с помощью бритвы Оккама он отсекает лишнее понятие теплорода. Вот логические выводы М. В. Ломоносова, по которым, «достаточное основание теплоты заключается»:
«Таким образом, мы доказали a priori и подтвердили a posteriori, что причиною теплоты является внутреннее вращательное движение связанной материи».
Эти рассуждения имели огромный резонанс в европейской науке. Теория, как и полагается, более критиковалась, нежели принималась учёными. В основном критика была направлена на следующие стороны теории:
 «Коловратное движение» 
Все сии диссертации не токмо хороши, но и весьма превосходны, ибо он омоносо пишет о материях физических и химических весьма нужных, которые по ныне не знали и истолковать не могли самые остроумные люди, что он учинил с таким успехом, что я совершенно уверен в справедливости его изъяснений. При сём случае г. Ломоносову должен отдать справедливость, что имеет превосходное дарование для изъяснения физических и химических явлений. Желать должно, чтоб и другия Академии в состоянии были произвести такия откровения, как показал г. Ломоносов. Эйлер в ответ к его сиятельству г. президенту 1747 года.
М. В. Ломоносов утверждает, что все вещества состоят из корпускул — молекул, которые являются «собраниями» элементов — атомов. В своей диссертации «Элементы математической химии» (1741; не закончена) учёный даёт такие определения: «Элемент есть часть тела, не состоящая из каких-либо других меньших и отличающихся от него тел… Корпускула есть собрание элементов, образующее одну малую массу».
В более поздней работе (1748) он вместо «элемента» употребляет слово «атом», а вместо «корпускула» — партикула () — «частица» или «молекула» (). «Элементу» он придаёт современное ему значение — в смысле предела делимости тел — последней составной их части. Древние говорили: «Как слова состоят из букв, так и тела — из элементов». Атомы и молекулы (корпускулы и элементы) у М. В. Ломоносова часто также — «физические нечувствительные частицы», чем подчёркивает, что эти частицы чувственно неощутимы. М. В. Ломоносов указывает на различие «однородных» корпускул, то есть состоящих из «одинакового числа одних и тех же элементов, соединённых одинаковым образом», и «разнородных» — состоящих из различных элементов. Тела, состоящие из однородных корпускул, то есть простые тела, он называет началами ().
Своей корпускулярно-кинетической теорией тепла М. В. Ломоносов предвосхитил многие гипотезы и положения, сопутствовавшие дальнейшему развитию атомистики и теорий строения материи. В его тезисах, логических построениях и доказательствах можно наблюдать следующие аналогии с представлениями, ставшими актуальными более чем сто лет спустя: атомы — шарообразные вращающиеся частицы — следующий шаг был сделан только с гипотезой электрона (1874; точнее, ещё позже — с появлением модели вращательного движении частиц вокруг ядра — электронная конфигурация, вращательная симметрия), увеличение скорости вращения сказывается повышением температуры, а покой — предвосхищает мысль об абсолютном нуле и невозможности его достижения. К близким выводам о природе теплоты в 1778 году полуэмпирически подступает Б. Румфорд. Второе начало термодинамики — 1850; по Дж. Джоулю (1844) теплота — следствие вращательного движения молекул; зависимость между теплотой и механической энергией, механическая теория тепла — в уравнениях У. Д. Рэнкина и Р. Клаузиуса — при обосновании второго закона термодинамики, в рассмотрении химических процессов. М. В. Ломоносов, при ошибочной исходной тезе о "соприкосновении" частиц (но — "вращательном!"), тем не менее, впервые использует геометрическую модель для доказательства, связанного с формой, строением и взаимодействием разной величины шарообразных атомов; опытным путём вплотную приблизился к открытию водорода; дал кинетическую модель идеального газа, по отдельными положениям, при ряде поправок — соответствующую принятой в дальнейшем; демонстрирует зависимость между объёмом и упругостью воздуха (см. закон Бойля-Мариотта), тут же указывает на дискретность её для воздуха при сильном его сжатии, что определяет конечный размер его молекул — настоящая мысль применена Я. Д. Ван-дер-Ваальсом в выводе уравнения реального газа; рассматривая тепло и свет (1756—1757), М. В. Ломоносов приходит к выводам о вращательном («коловратном») распространении частиц тепла и волновом («зыблющемся») — частиц света (в 1771 году тепловое излучение, «лучистую теплоту», рассматривает К. В. Шееле); русский учёный говорит об одном происхождении света и электричества, что, при определённых поправках на общие представления времени, сопоставимо с положениями электромагнитной теории Д. К. Максвелла. Некоторые из этих утверждений в той или иной форме в дальнейшем высказывались другими учёными, в едином рассмотрении — никем. Справедливость этих аналогий и предшествие гипотез М. В. Ломоносова достаточно убедительно показаны химиком и историком науки Н. А. Фигуровским и многими другими учёными.
Вращательное движение М. В. Ломоносов положил в основу своей «Натуральной философии», как один из фундаментальных принципов мироздания. При всём умозрительно-философском характере и логике идей М. В. Ломоносова (учёный достаточно широко использовал и математический аппарат; но математика сама по себе не есть «абсолютный гарант достоверности» — достоверны должны быть исходные) это неслучайно. У. Гиббс заявляет: «Математик может говорить всё, что ему заблагорассудится, физик должен сохранять хоть толику здравого смысла»; приблизительно об этом же говорит П. Дюэм), они убедительны и справедливы (это отмечал, как мы видим, и математик Леонард Эйлер) и хорошо согласуются с последовавшими через многие десятилетия открытиями — подобно открытию продолжателя его — Д. И. Менделеева, который, не зная строения атома, дал фундаментальный закон, которым впоследствии руководствовались те, кто постигал именно это строение.
Выводы механической теории теплоты, подтвердив саму её, впервые обосновали гипотезу об атомно-молекулярном строении материи — атомистика получила объективные естественнонаучные доказательства. С корпускулярной теорией и молекулярно-кинетическими взглядами М. В. Ломоносова напрямую связанно его понимание актуальности закона сохранения вещества и силы (или движения). Принцип сохранения силы (или движения) для него стал начальной аксиомой в рассмотрении им аргументов в обосновании молекулярного теплового движения. Принцип этот регулярно применяется им в ранних работах. В диссертации «О действии химических растворителей вообще» (1743) он пишет: «Когда какое-либо тело ускоряет движение другого, то сообщает ему часть своего движения; но сообщить часть движения оно не может иначе, как теряя точно такую же часть». Аналогичны соображения о принципе сохранения вещества, показывающего несостоятельность теории теплорода. Руководствуясь им, М. В. Ломоносов выступает с критикой идей Р. Бойля о преобразовании огня в «стойкую и весомую» субстанцию. В «Материалах для биографии Ломоносова» в документе № 165 — видим, что учёный пишет в декабре 1756 года: «"В Химии:" 1) Между разными химическими опытами. которых журнал на 13 листах, деланы опыты в заплавленных накрепко стеклянных сосудах, чтобы исследовать: прибывает ли вес металлов от чистого жару. Оными опытами нашлось, что славного Роберта Боция "(ошибка — следует читать, конечно, Бойля)" мнение ложно, ибо без пропущения внешенего воздуха вес сожжённого металла остаётся в одной мере…». В 1774 году А. Л. Лавуазье опубликует работу, в которой описаны аналогичные опыты; позднее им был сформулирован и опубликован закон сохранения вещества — результаты опытов М. В. Ломоносова не были опубликованы, поэтому о них стало известно только через сто лет.
В письме к Л. Эйлеру он формулирует свой «всеобщий естественный закон» (5 июля 1748 года). повторяя его в диссертации «Рассуждение о твёрдости и жидкости тел» (1760):
Являясь противником теории флогистона, М. В. Ломоносов, тем не менее, вынужден был делать попытки согласования её со своей «корпускулярной философией» (например, объясняя механизм окисления и восстановления металлов, «состав» серы — рационального понимания явлений не было, отсутствовала научная теорией горения — ещё не был открыт кислород), что было естественно в современной ему всеобщей «конвенциональности» относительно теории «невесомых флюидов» — иначе он не только не был бы понят, но его идеи вообще не были бы приняты к рассмотрению. Но учёный уже подвергает критике Г. Э. Шталя: «Так как восстановление производится тем же, что и прокаливание, даже более сильным огнём, то нельзя привести никакого основания, почему один и тот же огонь то внедряется в тела, то из них уходит».
Основные сомнения М. В. Ломоносова связаны с вопросом невесомости флогистона, который, удаляясь при кальцинации из металла, даёт возрастание веса продукта прокаливания — в чём учёный усматривает явное противоречие «всеобщему естественному закону». М. В. Ломоносов оперирует флогистоном как материальным веществом, которое легче воды — по существу указывая на то, что это — водород. В диссертации «О металлическом блеске» (1745) он пишет: «…При растворении какого-либо неблагородного металла, особенно железа, в кислотных спиртах из отверстия склянки вырывается горючий пар, который представляет собой не что иное, как флогистон, выделившийся от трения растворителя с молекулами металла (ссылка на „Диссертацию о действии химических растворителей вообще“) и увлечённый вырывающимся воздухом с более тонкими частями спирта. Ибо: 1) чистые пары кислых спиртов невоспламенимы; 2) извести металлов, разрушившихся при потере горючих паров, совсем не могут быть восстановлены без добавления какого-либо тела, изобилующего горючей материей». К аналогичному выводу («горючий воздух» — флогистон, позднее названный водородом), более 20 лет спустя пришёл английский учёный Г. Кавендиш, который был уверен, что его открытие разрешает все противоречия теории флогистона. Идентичный вывод М. В. Ломоносова в работе «О металлическом блеске» (1751) «остался незамеченным».
Физическая химия.
В 1740-х годах М. В. Ломоносов в «собственноручных черновых тетрадях» «Введение в истинную физическую химию» (), и «Начало физической химии потребное молодым, желающим в ней совершенствоваться» () уже дал абрис будущего курса новой науки, более строго оформившийся к январю 1752 года, о чём учёный пишет в итогах 1751-го: «Вымыслил некоторые новые инструменты для Физической Химии», а в итогах 1752-го — «диктовал студентам и толковал сочинённые мною к Физической Химии пролегомены на латинском языке, которые содержатся на 13 листах в 150 параграфах, со многими фигурами на шести полулистах». Тогда М. В. Ломоносовым была намечена огромная программа изучения растворов, которая не полностью реализована и по сию пору.
М. В. Ломоносовым были заложены основы физической химии, когда он сделал попытку объяснения химических явлений на основе законов физики и его же теории строения вещества. Он пишет:
Леонард Эйлер говорит о М. В. Ломоносове не только и не столько как о сформировавшем новую научную методику, сколько как о первенствующем в основоположении новой науки — физической химии вообще:
Важной особенностью той науки, основу которой заложил М. В. Ломоносов, явился его метод, подразумевающий исследование связи физических и химических явлений. Постоянно занимаясь практической наукой, он находит подтверждение в ней своим теоретическим воззрениям, но не только тому служит эксперимент — учёный применяет его для развития практики как таковой, опирающейся на понимание закономерностей тех или иных процессов. Настоящая методика касается не только химии и физики, но и вопросов химизма, сопровождающего электрические опыты и оптические явления — свойств объектов исследования, химического их состав и молекулярного строения. Все эти факторы говорят о хорошо осознанной, разработанной и последовательно применяемой системе взглядов и приёмов, которая, с точки зрения теории познания даёт корректное экспериментальное подтверждение гипотезам, способным вследствие того становиться основой теории. Этот методологический круг можно определить, перефразируя самого учёного, как «оживляющий» теорию и делающий практику «зрячей».
Наука о стекле.
В своей Химической лаборатории М. В. Ломоносов в 1752—1753 годах впервые за всю историю науки читал курс физической химии студентам академического университета. А разрешение на строительство этой лаборатории он смог получить только после трёхлетних усилий — это была первая научно-исследовательская и учебная лаборатория в России.
В октябре 1748 года, когда она, наконец, была построена, и получила оборудование, изготовленное по чертежам и проектам самого учёного, он начал проводить в ней экспериментальные исследования по химии и технологии силикатов, по обоснованию теории растворов, по обжигу металлов, а также — осуществлял пробы руд.
Здесь он провёл более 4 тысяч опытов. Им разработана технология цветных стёкол (прозрачных и «глухих» — смальт). Эту методику он применил в промышленной варке цветного стекла и при создании изделий из него.
Стекольное производство того времени имело в своём распоряжении весьма скудный ассортимент реактивов, что, конечно, сказывалось на окраске изделий: производившееся Санкт-Петербургским стеклянным заводом было в основном бесцветно, или окрашено в синий и зелёный цвета. Немецкий стеклодел Иоганн Кункель ещё в XVII веке обладал секретом красного стекла — «золотого рубина» (известен ещё в Древнем Риме — включение золота при варке). Но и Кункель унёс в могилу свою тайну. М. В. Ломоносов был одним из первых, кто разгадал эту рецептуру.
Учёный работал со стёклами и другими силикатными расплавами ещё в процессе изучения им технологии горнорудного и металлического дела в Германии. В 1751 году Санкт-Петербургский Стеклянный завод через Академию наук заказал исследования по разработке цветных стёкол М. В. Ломоносову.
Эмпирическая технология стеклоделия тогда применялась только практиками, не владевшими никакими научными методами. М. В. Ломоносов и его однокашник Дмитрий Виноградов, создатель русского фарфора, первыми заявляют о необходимости знания химии для создания стёкол. М. В. Ломоносов сумел доказать необходимость лабораторного и производственного персонала.
Важной стороной ломоносовской методологии явилась присущность ему качеств отличного систематизатора, что сказывалось на теоретической упорядоченности исследований и строго последовательном, контролируемом технологическом цикле.
В четырёхлетних фундаментальных научных исследованиях по химии стекла, проводившиеся М. В. Ломоносовым, и потребовавших упомянутых четыре тысячи опытов, можно наблюдать три крупных этапа:
Работы проводились на чрезвычайно высоком методическом уровне, для каждого из вышеозначенных факторов производилась большая самостоятельная серия опытов, когда количественное участие его систематически изменялось в очень широких пределах. Были правильно организованы опытные плавки (точные размеры тиглей — современные практически не отличаются от использовавшихся М. В. Ломоносовым); строго соблюдалось единообразие условий опытов; впервые в практике соблюдалась строгая дозировка компонентов; точное навешивание; строгая и аккуратная, контролируемая система хранения тысяч эталонных образцов; регулярное и неукоснительное ведение подробного лабораторного журнала (самим М. В. Ломоносовым); впервые очень чётко сформулирован вопрос о влиянии состава стекла на его свойства. Сейчас целесообразность такой постановки исследования очевидна, но в то время это было новаторством — теоретическая часть особенно интересовала учёного. Он пишет: «…прилагаю я возможное старание, чтобы делать стёкла разных цветов, которые бы помянутым художествам годны были и в том имею нарочитые прогрессы. При всех сих практических опытах записываю и те обстоятельства, которые надлежат до химических теорий».
Одновременно он занимается и теорией цвета, что пребывает в отчётливой связи с настоящими и другими его исследованиями. Он интересовался природой света и цветов с самого начала своей научной деятельности. Тогда же, в ходе размышлений о природе цветов, им был задуман ряд опытов с цветными стёклами. И в согласовании со своими теоретическими исследованиями эти эксперименты М. В. Ломоносов получил возможность проводить с 1748 года в своей Химической лаборатории, когда им были получены такие стёкла, рецептуры которых нашли применение впоследствии, при создании его мозаичных работ. Результатом этого комплекса научных исследований явилось также создание им собственной теории света и цвета, основывающейся на представлении о распространении света посредством колебания частиц эфира, заполняющего мировое пространство (уже в XIX веке академик Б. Б. Голицын назовёт её «теорией волнения»).
Множество разнообразно окрашенных стёкол было получено М. В. Ломоносовым при весьма ограниченном наборе элементов, использовавшихся в качестве включений, влиявших на цветность (ныне применяющиеся с этой целью хром, уран, селен, кадмий, попросту ещё не были открыты в то время) — очень искусно варьируя приёмы химической обработки в восстановительных и окислительных условиях при изменении состава стекла за счёт введения свинца, олова, сурьмы и некоторых других веществ.
Богатейшие красные тона получены в результате добавки меди для смальт, называемых мастерами мозаики «скарцетами» и «лаками». Очень большого умения требует их варка, которая до сих пор не всегда бывает успешной. Медь использовалась учёным также для получения зелёных и бирюзовых оттенков. И поныне знатоки мозаичного искусства очень высоко ценят полихромные качества ломоносовских смальт, и многие считают, что таких замечательных красных и зелёных оттенков крайне редко и мало кому удавалось получить.
И вот слова Л. Эйлера, подтверждающие признание роли М. В. Ломоносова в основании науки о стекле — и не только в его отечестве:
В 1753—1754 годах недалеко от Ораниенбаума в деревне Усть-Рудицы Копорского уезда М. В. Ломоносов получает для строительства стекольной фабрикие земельный надел, а в 1756 году земли были ему жалованы в вечное пользование. При постройке этой фабрики учёный проявляет свои инженерные и конструкторские способности, начиная с выбора места строительства, расчётов строительных материалов и ориентации на превоклассные ямбургские пески и достаточное количество леса для стеклеплавильных печей и пережигания на золу; — проектирования цехов завода, детальной разработки технологического процесса, конструирования лабораторных и производственных печей, оригинальных станков и инструментов; — и кончая офрмлением графических материалов, которые выполняются им также собственноручно или при непосредственном его руководстве. Усть-Рудицкая фабрика представляла собой своеобразное и в полной мере новое стекольное промышленное предприятие, и поскольку руководил ею создатель науки о стекле, ведущее место отведено было лаборатории, причём находившейся в процессе эксперимента и в постоянном совершенствовании. Первоначально на фабрике выпускался только бисер, пронизка, стеклярус и мозаичные составы (смальты). Через год появляются различные «галантерейные изделия»: гранёные камни, подвески, броши и запонки. С 1757 года фабрика начинает выпускать столовые сервизы, туалетные и письменные приборы — всё из разноцветного стекла, по большей части бирюзового. Постепенно, по прошествии нескольких лет, было налажено производство крупных вещей: дутых фигур, цветников, украшений для садов, литых столовых досок.
Эта страница деятельности М. В. Ломоносова — яркий пример органичного сочетания всего разнообразия его способностей: как увлечённого учёного-теоретика, в совершенстве владеющего экспериментом, практика, очень удачно реализующего найденное в ходе расчётов и опытов, умелого организатора производства, вдохновенного художника-дилетанта, наделённого природным вкусом, умеющего с толком применить свои познания и в этой области. Но и сим не исчерпывается многосторонняя творческая натура — М. В. Ломоносов написал беспрецедентное поэтическое произведение, единственное в своём роде; имеется в виду объём версификации, посвящённой одному предмету, в данном случае, веществу и материалу — стеклу — почти 3 тысячи слов (около 15 тысяч знаков) составило его «Письмо о пользе Стекла к высокопревосходительному господину генералу-поручику действительному Ея Императорскаго Величества камергеру, Московскаго университета куратору, и орденов Белаго Орла, Святаго Александра и Святыя Анны кавалеру Ивану Ивановичу Шувалову, писанное в 1752 году»…
Астрономия, опто-механика и приборостроение.
26 мая 1761 года, наблюдая прохождение Венеры по солнечному диску, М. В. Ломоносов обнаружил наличие у неё атмосферы.
Интересен и другой эффект, наблюдавшийся астрономами с приближением диска Венеры к внешнему краю диска Солнца или при удалении от него. Данное явление, открытое Ломоносовым, не было удовлетворительно истолковано, и его, по всей видимости, следует расценивать как зеркальное отражение Солнца атмосферой планеты — особенно велико оно при незначительных углах скольжения, при нахождении Венеры вблизи Солнца. Учёный описывает его следующим образом:
Труд М. В. Ломоносова «Явление Венеры на Солнце, наблюдённое в Санктпетербургской Императорской Академии Наук Майя 26 дня 1761 года» (Санкт-Петербург: Типография Академии наук, 1761) был напечатан на русском и немецком языках () и, следовательно, были известны в Западной Европе, поскольку публикации Академии рассылались в её крупнейшие научные центры, однако открытие атмосферы на Венере приписывалось И. И. Шрётеру и Ф. В. Гершелю. Председатель Американского химического общества профессор Колумбийского университета А. Смит в 1912 году писал: «Открытие, сделанное при этом Ломоносовым о наличии атмосферы на этой планете, обычно приписывают Шретеру и Гершелю», Любопытно, что сам М. В. Ломоносов этому открытию не придавал большого значения, во всяком случае, оно даже не упомянуто в составленном им списке работ, которые он относил к наиболее важным в своём научном творчестве (см. раздел «Итог»).
Академик С. И. Вавилов, изучавший труды Ломоносова многие годы, сделал вывод, что «…по объёму и оригинальности своей оптико-строительной деятельности Ломоносов был … одним из самых передовых оптиков своего времени и, безусловно, первым русским творческим опто-механиком». Ломоносовым было построено более десятка принципиально новых оптических приборов.
Учёным было сконструировано и построено несколько принципиально новых оптических приборов, им создана русская школа научной и прикладной оптики. М. В. Ломоносов создал катоптрико-диоптрическую зажигательную систему; прибор «для сгущения света», названную им «ночезрительной трубой», предназначавшаяся для рассмотрения на море удалённых предметов в ночное время или, как говорится в его статье тому посвящённой «Физическая задача о ночезрительной трубе» (1758) — служившую возможности «различать в ночное время скалы и корабли» — 13 мая 1756 года он демонстрировал её на заседании Академического собрания (этот проект вызвал ряд возражений со стороны академиков С. Я. Румовского, А. Н. Гиршова и Н. И. Попова, а академик Ф. У. Т. Эпинус пытался доказать «невыполнимость на практике» этого изобретения), М. В. Ломоносов до конца своих дней продолжал заниматься созданием приборов для ночных наблюдений, но ему не суждено было увидеть реализацию этой своей идеи — для снаряжённой по его же проекту полярной экспедиции капитана 1 ранга В. Я. Чичагова наряду с другими приборами было собрано 3 ночезрительных трубы; оптической системы, «через которую узнавать можно рефракцию светлых лучей, проходящих сквозь жидкие материи».
М. В. Ломоносовым разработан и построен оптический батоскоп или новый «инструмент, которым бы много глубже видеть можно дно в реках и в море, нежели как видим просто. Коль сие в человеческой полезно, всяк удобно рассудить может». Большой интерес представляет созданная учёным конструкция «горизонтоскопа» — большого перископа с механизмом для горизонтального обзора местности. Также им предложен прибор для качественного определения вязкости жидкостей (вискозиметр). М. В. Ломоносов — талантливый изобретатель и приборостроитель, в то же время стоит у истоков русской теоретической оптики.
М. В. Ломоносов, хорошо знавший телескопы И. Ньютона и Д. Грегори, предложил свою конструкцию. Он пишет в конце весны — начале лета 1762 года: «Я всегда лелеял желание, чтобы эти превосходные небесные орудия, коих изобретение составляет славу Ньютона и Грегори, не по размерам только, как это обычно происходило, возрастали, но получили и иные, почерпнутые из сокровищ оптики усовершенствования».
Суть и отличие от двух предыдущих предложенного им усовершенствования заключались в том, что новая конструкция имела лишь одно вогнутое зеркало, расположенное под углом около 4° к оси телескопа, и отражённые этим зеркалом лучи попадали в расположенный сбоку окуляр, что позволяло увеличить световой поток. Опытный образец такого телескопа был изготовлен под руководством М. В. Ломоносова в апреле 1762 года, а 13 мая учёный демонстрировал его на заседании Академического собрания. Изобретение это оставалось неопубликованным до 1827 года, поэтому, когда аналогичное усовершенствование телескопа предложил У. Гершель, такую систему стали называть его именем.
Теория электричества и метеорология.
В 1752—1753 годах, занимаясь изучением атмосферного электричества, М. В. Ломоносов ставит задачу написания труда, посвящённого общей теории электричества. К работе над латинской рукописью учёный приступил только в апреле 1756 года, но уже в мае переключившись на «Слово о явлениях воздушных, от электрической силы происходящих», — оставляет первую, не завершив.
В незаконченную рукопись «Теории электричества, изложенной математически» исследователем включены отдельные разработанные им на тот момент к настоящему вопросу относящиеся положения: о тождественности атмосферного и искусственного электричества, о предопределяющем электрические явления движении частиц эфира и тому подобные. Рукопись начинается с плана, включающего восемь глав, из коих М. В. Ломоносовым закончена была только первая и частично — вторая. Рассматривая именования шести остальных разделов, можно прийти к выводу о том, что учёный имел в предположении попытку рассмотрения всех известных к тому времени электрических явлений, снабжая их осмыслением, опирающимся на понимание строения вещества в свете корпускулярной теории: «1. Содержит предварительные данные; 2. Об эфире и огне; 3. О строении чувствительных тел; 4. О получении производного электричества; 5. О получении производного электричества; 6. Объяснение искусственных явлений; 7. Объяснение природных явлений; 8.. О будущих успехах учения об электричестве».
В работах М. В. Ломоносова, посвящённых исследованию электричества особенно ценным является направленность их от качественных наблюдений к установлению количественных закономерностей — формированию основ теории электричества. Занимаясь независимо этими исследованиями, он с Г. В. Рихманом и Б. Франклин добились наиболее убедительных результатов.
В ходе этих совместных с М. В. Ломоносовым исследований в 1745 году Г. В. Рихманом разработан первый электроизмерительный прибор экспериментального наблюдения — «электрический указатель», который, в отличие от уже использовавшегося электроскопа, был «снабжён деревянным квадрантом со градусной шкалой для измерения степени электричества» (Г. В. Рихман). «Громовая машина», созданная ими, имела принципиальные различия с приборами других учёных, в том числе и с «электрическим змеем» Б. Франклина, давала возможность стабильного наблюдения при любом изменении электричества, содержащегося в атмосфере при любой погоде.
На очередном торжественном собрании Петербургской Академии Наук академики Г. В. Рихман и М. В. Ломоносов должны были сделать доклад об электричестве. 26 июля 1753 года во время опытов в ходе наблюдения грозовых явлений Г. В. Рихман был убит ударом молнии. Трагические обстоятельства были использованы противниками учёных: советник академической Канцелярии И. Д. Шумахер убедил президента К. Г. Разумовского отменить собрание. Своими энергичными действиями М. В. Ломоносов сумел убедить последнего изменить решение — подготовленный М. В. Ломоносовым латинский текст речи обсуждался на нескольких заседаниях, после которых учёный внёс в неё некоторые изменения.
26 ноября 1753 года им был сделан большой доклад — «Слово о явлениях воздушных, от электрической силы происходящих» и, что немаловажно — на русском. М. В. Ломоносовым была представлена его строго научная теория атмосферного электричества, которая в полной мере соответствует современным взглядам, данных явлений касающихся. В обстоятельных «Изъяснениях, надлежащих к Слову об электрических явлениях» (неотъемлемой части «Слова», сопровождаемой описанием наблюдений, опытов и пояснением чертежей и рисунков) учёный убедительно показывает, что результаты его самостоятельных исследований и, сделанные на их основе выводы, существенно отличаясь от найденного и показанного Б. Франклином, началом имеют предшествующие тому изыскания, относящиеся к значительно более раннему времени, — «сие слово было уже почти готово, когда я о Франклиновой догадке уведал» — отмечает он; в частности ода «Вечернее размышление о Божием величестве при случае великого северного сияния» (1743), напечатанная в 1747 году в «Риторике», со всей очевидностью указывает на выявленную им природу северного сияния. Далее, в своём письме академику А. Н. Гиршову который, в числе других, указывал на приоритет Б. Франклина, он пишет: «α) …Винить меня не станет никто, так как произведения учёных столь поздно доходят до нас, особенно из Америки. β) Нисхождение верхней атмосферы Франклин только "предполагал" по догадке; я же вывожу его из внезапного наступления холодной погоды, о чём у Франклина нет никакого упоминания. γ) Я также произвёл расчёт и доказал, что верхний воздух не только может, но и должен стекать вниз, чего у Франклина нет и следа. δ) Мнение Франклина о северном сиянии совершенно расходится с моим. Ведь электрическую материю, необходимую для образования северного сияния, он старается привлечь с тропиков к полюсам; я же нахожу её в изобилии на месте; он не излагает, каким образом это происходит, а мимоходом в нескольких словах намечает свою догадку, а я подробнейшим образом изъясняю свою теорию; он не обосновал никакими аргументами, а я подкрепляю не только аргументами, но и объяснением явления».
Очень важно в рассмотрении М. В. Ломоносовым света и электричества, в контексте его корпускулярно-кинетической теории тепла, единое толкование их волновой природы.
Твёрдая ртуть.
В декабре 1759 года М. В. Ломоносов и И. А. Браун первыми получили ртуть в твёрдом состоянии. Но важность этого успеха для М. В. Ломоносова выражалась в большей степени не фактом приоритета, а логикой аргументации ряда положений его корпускулярно-кинетической теории, и последовавшим успехом в классификации веществ — когда учёным первым в январе 1760 года, наряду с решением ряда других задач, была показана электропроводность и «ковкость» ртути, что стало основанием для отнесения этого вещества к металлам.
Прототип вертолёта.
В рамках метеоисследований, в том числе измерений на разных высотах (температура, давление и т. д.), М. В. Ломоносов, независимо от идеи Леонардо да Винчи, чьи труды найдены много позже, разработал летательный аппарат вертикального взлёта — первый прототип вертолёта с двумя (предположительно соосными) винтами. Однако он не подразумевал пилотируемых полётов — только подъём метеоприборов.
Документы показывают, что учёный сделал его действующую модель По протоколу конференции Академии Наук (1754, июля 1; перевод с латинского) и в отчёте М. В. Ломоносова о научных работах в 1754 году (1755):
Оригинальной аэродромической машины не сохранилось, имеющиеся в музеях модели являются реконструкциями.
География и навигация.
Ломоносов возглавлял географический департамент АН, руководил работой по созданию географического атласа, восстановил глобус после пожара, создал циркумполярную карту.
Определяя географию как комплексную науку, большую часть выводов Ломоносов обосновывал по частным направлениям: в учениях об атмосфере, гидросфере, криосфере, каменной оболочке. Он пришёл к выводу о трёхслойности атмосферы. В нижнем слое протекают наиболее значительные изменения, отражающиеся на поверхности планеты. В частности, Ломоносовым сформулировано представление о конвективных, то есть восходящих и нисходящих токах воздуха и связанных с ними электрических явлениях. Средний слой отличается постоянством низкой температуры. Верхний не зависит от земной поверхности. Ломоносов обосновывал формирование морского и континентального климата, влияние высоты места на климатические условия и, естественно, отдавал должное влиянию широты местности в процессах климатообразования.
Ломоносов дал классификацию природных льдов, обосновал различия температуры льдообразования воды с различной минерализацией.
Ломоносов справедливо предположил наличие постоянного перемещения льдов из восточных секторов Арктики в сторону Атлантики.
Наиболее полное представление Ломоносова о геологии и преобразованиях лика земного содержится в его работе «О слоях земных», которую называют началом русской научной геологии. Ломоносовым выдвинута гипотеза о существовании зон с быстрыми и медленными вертикальными движениями земной тверди в зависимости от силы «внутреннего огня», о первостепенном вкладе этих движений в происхождение крупнейших неровностей земной поверхности.
Ломоносов решительно был настроен на существенное совершенствование карт и атласов страны. Ломоносов сам принимал участие в составлении карт. В частности, им была подготовлена карта Арктики как обширного океанического пространства с предполагаемым положением берегов Северной Америки.
Ломоносов выдвинул идею систематического обновления географических карт через каждые 20 лет. В обновлении нуждался и Академический атлас. Ломоносов считал необходимым, чтобы в новом атласе были отражены явления социально-экономического характера. Материалы для атласа предполагалось в краткий срок собрать с помощью «географических запросов», разосланных в 1760 г. по губерниям и уездам. В анкете содержалось 30 вопросов, десять из которых относились к физической географии, остальные — к экономической и природопользованию.
Ломоносов ввёл в научный оборот термины «экономическая география» и «экономическая ландкарта». Он глубоко интересовался демографией — этой теме посвящено его сочинение «О сохранении и размножении российского народа».
Охрана жизни и здоровья.
В этом же труде содержатся многие идеи в области охраны здоровья и общественного здравоохранения.
Ещё ранее, в 1742 году в своём труде «Первые основания металлургии или рудных дел» он подробно осветил различные вопросы безопасности и гигиены труда «горных людей», организации их труда и отдыха, надёжность креплений грунта, безопасность переходов по лестницам, рациональность рабочей одежды. Им были изучены и многие другие вопросы безопасности труда, которые остро стояли тогда при производстве опасных работ.
Гуманитарные науки.
С пятидесятых годов учёный облекает плоды размышлений и исследований в живую форму своих речей, произносимых на собраниях Академии и в качестве представителя науки перед общественностью — когда он свободно высказывает свои теоретические взгляды, не стесняясь требований полноты и строгости академического мемуара — и здесь, объединив в своём лице оратора, естествоиспытателя, популяризатора научного знания и литератора — он «даёт указания, выражает надежды, вырабатывает планы новых снарядов и опытов, приводит …результаты собственных изысканий в лаборатории и кабинете».
Вклад в развитие риторики.
Ломоносов в 1743 написал «Краткое руководство к риторике» на русском языке. Основной труд Ломоносова по риторике — «Риторика» 1748 года, которая стала, по сути, первой в России хрестоматией мировой литературы, включавшей также лучшие произведения отечественной словесности. Пособия Ломоносова были первыми общедоступными руководствами по красноречию. Само определение риторики у него традиционно:
В «Риторике» выделены три традиционных раздела: об изобретении, украшении, расположении. В своём труде он выделяет собственно риторику — учение о красноречии вообще; ораторию — наставление к сочинению речей в прозе; поэзию — наставление к сочинению поэтических произведений. Первая попытка Ломоносова создать учебник риторики — событие большого исторического значения. На основе «Риторики» впоследствии были написаны учебники по русскому красноречию.
Грамматика и теория стиля.
«Российская грамматика» Ломоносова — нормативное описание русского языка, в которой излагается учение о частях речи. Орфоэпические рекомендации «Российской грамматики» опираются на специфику «московского наречия»: «Московское наречие не только для важности столичного города, но и для своей отменной красоты прочим справедливо предпочитается». Ломоносов ввёл понятие художественно-выразительных приёмов.
Разработал стилистическую систему русского языка эпохи классицизма — теорию трёх штилей (книга «Рассуждение о пользе книг церковных в российском языке»).
Поэтическая теория и практика.
М. В. Ломоносов осуществил совместно с В. К. Тредиаковским силлабо-тоническую реформу («Письмо о правилах российского стихотворства»), причём именно опыты Ломоносова были восприняты поэтами в качестве образцовых. Создал по немецкому образцу классический русский четырёхстопный ямб, первоначально «тяжёлый» полноударный (оды Иоанну Антоновичу, «Вечернее размышление»), затем облегчённый пропусками ударений. Основоположник русской торжественной (обращённой к правителям) и философской оды. Поэзия Ломоносова насыщена научной, космической и натурфилософской образностью (дидактическое послание к Шувалову, «Размышления»); он внёс вклад в русскую сатиру («Гимн бороде», эпиграммы). Неоконченная поэма «Пётр Великий» стала попыткой национального эпоса. Многие строки Ломоносова стали крылатыми.
История.
Историографы относят Ломоносова к «либерально-дворянскому направлению» в российской историографии XVIII в. Ломоносов был сторонником устаревшей сарматской теории этногенеза славян, о чём свидетельствует написанный по заказу императрицы Елизаветы его труд «Древняя российская история»; так, он отождествлял роксаланов с «россиянами» и опровергал норманнскую теорию, ссылаясь, среди прочего на «Окружное послание патриарха Фотия». В своей полемике Г. Ф. Миллером Ломоносов утверждал, что отвергать на основании исторической критики такие официально одобренные легенды, как посещение Андреем Первозванным Руси, политически опасно, что Миллер умышленно принижает достоинство русских и что задача историографии — подчёркивать величие и древность русского народа, а о темных страницах в его истории следует умалчивать; он высказался против публикаций работ Миллера. Впоследствии происходило официальное расследование и обыск у Миллера, в котором Ломоносов лично участвовал.
Ломоносов утверждал, что варяги, приглашенные во главе с Рюриком на княжение в Новгород, упоминаемые в «Повести временных лет», были не скандинавами, а балтийскими варягами славянского происхождения (причём славянами он ошибочно считал не только балтийских славян, но и балтов). Ломоносов удревнял историю славян, утверждая, что они участвовали в Троянской войне, а затем заселили область Венето.
Основной труд по истории — «Древняя Российская история», изданная уже после смерти автора. М. В. Ломоносов начинает историю славян и «россов» со времён Римской Империи. Сравнительный анализ античных верований восточных славян обнаруживает множество сходных элементов. По его мнению, корни формирования языческого пантеона одни и те же.
Сокращенной версией «Российской истории» стал опубликованный раньше её «Краткий российский летописец с родословием». Здесь в сжатой форме излагались все основные события русской истории с 862 по 1725 г. Эта книга облегчала пользование летописями и другими историческими документами, давала краткий, но содержательный свод исторических фактов. Ещё при жизни Ломоносова «Летописец» был переведён на немецкий язык, а затем дважды, в 1767 и 1771 гг., переиздавался. В 1767 г. вышел его английский перевод.
Современники Ломоносова, как российские, так и западные, оценили его исторические работы невысоко, в частности, Вольтер счёл возведение славян к троянцам приёмом средневековой, а не современной историографии; не придавали серьёзного значения его работам также М. М. Щербатов, А. Л. Шлёцер, Н. М. Карамзин и другие. Новый интерес к историческим работам Ломоносова связан с славянофильским движением XIX в. и с «борьбой с космополитизмом» в 1940—1950-е гг., когда значение Ломоносова-историка сильно преувеличивалась.
Педагогические идеи.
Научные основы воспитания. Считал главнейшими составными элементами познания: чувственное восприятие, теоретические обобщения и опытную проверку результатов. «Идеями называются представления вещей или действий в уме нашем…». «Из наблюдений установлять теорию, через теорию исправлять наблюдения — есть лучший всех способ к изысканию правды». Природу человека М. В. Ломоносов рассматривал иерархически: «нижняя», чувственная, эгоистическая и «высшая», духовная, патриотическая.
Идеи, на которых строится педагогическая теория М. В. Ломоносова. Положение народа можно улучшить посредством распространения культуры и просвещения. Выступал сторонником бессословной системы образования вплоть до университета. Отстаивал идею светскости образования и получения молодыми поколениями основ научных знаний. Связывал формирование человека с конкретными социально-историческими условиями его жизни, с уровнем развития общества в целом.
Воспитание. Был сторонником принципа природосообразности. Воспитатель должен руководствоваться факторами естественного природного развития ребёнка. «Чаще природное дарование без науки, нежели наука без природного дарования к похвале и добродетели способствовали». Природные особенности детей считал основой и источником их развития, рекомендовал педагогам строить обучения с учётом склонностей детей. Цель воспитания — формирование человека-патриота, главными качествами которого должны быть высокая нравственность, любовь к науке, знаниям, трудолюбие, бескорыстное служение родине.
Отводил большую роль воспитанию « … Молодых людей нежные нравы, во все стороны гибкие страсти и мягкие их и воску подобные мысли добрым воспитанием управляются». Исходил в воспитании из принципов гуманизма и народности. Метод и условие воспитания — порядок и дисциплина.
Нравственное воспитание. Качества нравственно воспитанного человека: патриотизм, милосердие, трудолюбие. Пороки нравственности: леность, скупость, малодушие, лукавство, злоба, лицемерие, упрямство, самохвальство и др.
Образование. Видел органическую связь воспитания и обучения, ратовал за взаимосвязь физического и нравственного воспитания и умственного развития. Выступил впервые в русской педагогике сторонником синтеза классического, естественнонаучного и реального образования. Был сторонником классно-урочной системы как наиболее продуктивной для развития ума и памяти. Был за домашние задания и экзамены. Отводил в процессе обучения значительное место практике, постановке опытов, отмечал практическое значение знаний. Русский язык ценил очень высоко, выдвинул идею воспитательного значения русского языка.
Вклад в развитие педагогики. Разработал впервые в России педагогическую теорию, методологической основой которой явилось материалистическое мировоззрение, разграничение науки и религии. Был организатором науки и просвещения. Написал первую грамматику русского языка.
Литература и искусство.
Литературное творчество.
Критика поэзии М. В. Ломоносова
Известно, по крайней мере, два образца критической оценки поэтического наследия М. В. Ломоносова: А. С. Пушкина — в его произведении третьего, если не четвёртого плана — не слишком известных «разнородных путевых заметках» эссе—перифразе радищевского «реального путешествия» — в «Путешествии из Москвы в Петербург» (впервые изданных под этим условным наименованием в 1933 году), и в главе «Чёрная грязь» радищевского же «Путешествия», цитируемой тем же А. С. Пушкиным, который так говорит о последнем, излагая далее своё мнение:
В конце книги своей Радищев поместил слово о Ломоносове. Оно писано слогом надутым и тяжёлым. Радищев имел тайное намерение нанести удар неприкосновенной славе росского Пиндара. Достойно замечания и то, что Радищев тщательно прикрыл это намерение уловками уважения и обошёлся со славою Ломоносова гораздо осторожнее, нежели с верховной властию, на которую напал с такой безумной дерзостью. Он более тридцати страниц наполнил пошлыми похвалами стихотворцу, ритору и грамматику, чтоб в конце своего слова поместить следующие мятежные строки:
Ломоносов был великий человек. Между Петром I и Екатериною II он один является самобытным сподвижником просвещения. Он создал первый университет. Он, лучше сказать, сам был первым нашим университетом. Но в сём университете профессор поэзии и элоквенции не что иное, как исправный чиновник, а не поэт, вдохновенный свыше, не оратор, мощно увлекающий. Однообразные и стеснительные формы, в кои отливал он свои мысли, дают его прозе ход утомительный и тяжёлый. Эта схоластическая величавость, полуславенская, полулатинская, сделалась было необходимостию: к счастию, Карамзин освободил язык от чуждого ига и возвратил ему свободу, обратив его к живым источникам народного слова. В Ломоносове нет ни чувства, ни воображения. Оды его, писанные по образцу тогдашних немецких стихотворцев, давно уже забытых в самой Германии, утомительны и надуты. Его влияние на словесность было вредное и до сих пор в ней отзывается. Высокопарность, изысканность, отвращение от простоты и точности, отсутствие всякой народности и оригинальности — вот следы, оставленные Ломоносовым. Ломоносов сам не дорожил своею поэзиею и гораздо более заботился о своих химических опытах, нежели о должностных одах на высокоторжественный день тезоименитства и проч. С каким презрением говорит он о Сумарокове, страстном к своему искусству, об этом человеке, который ни о чём, кроме как о бедном своём рифмичестве, не думает!.. Зато с каким жаром говорит он о науках, о просвещении! Смотрите письма его к Шувалову, к Воронцову и пр.
В «филиппиках» А. С. Пушкина и А. Н. Радищева выражено их частное мнение: в первом случае — поэта уже другой эпохи, других вкусов — когда многое из сравнительно недавно минувшего — «осьмнадцатого века, века од» — было переоценено. Именно в это время «проглядели» и Ломоносова-естествоиспытателя; но если тот же А. Н. Радищев, чьё поколение начало эту переоценку, берёт на себя смелость сказать, что «Ломоносов не достиг великости в испытаниях природы», то А. С. Пушкин от такого «приговора» воздерживается и, дав в этих же своих заметках чрезвычайно подробный реестр научных публикаций естествоиспытателя, ограничивается общими хвалебными эпитетами. Малоизвестное до поры критическое мнение А. С. Пушкина о Ломоносове-гуманитарии вступает в противоречие с уже известными нам восторженными оценками именно Ломоносова-гуманитария в других публикациях того же А. С. Пушкина
Критика поэтических переводов М. В. Ломоносова (Гораций и Анакреон).
И к самим ломоносовским переводам Анакреона и Горация и к судьбе их за 250 лет обращались многие словесники, литературоведы и лингвисты. Ещё А. Н. Радищев в упоминавшейся главе «Путешествия из Петербурга в Москву» пишет:
И перевод М. В. Ломоносова и эта аллюзия прямо или косвенно — породили череду поэтических обращений и к античному оригиналу, и к ломоносовскому его прочтению. Среди наиболее известных авторов Г. Р. Державин, К. Н. Батюшков, А. С. Пушкин, А. Х. Востоков; в своём лексико-этимологическом анализе Л. А. Мусорина демонстрирует эволюцию феномена, напоминая о том, что к традиции этой причастны С. А. Тучков, В. Я. Брюсов (три стихотворения), В. Ходасевич, В. Н. Крачковский (два стихотворения), С. В. Шервинский, Н. И. Шатерников, Б. В. Никольский, Я. Э. Голосовкер, А. П. Семёнов-Тян-Шанский, Н. Ф. Фокков. Преобразовав наименование оды А. С. Пушкина, В. А. Жуковский устанавливает преемственность, идущую от Г. Р. Державина, который происхождением своего «столпа», в свою очередь, обязан радищевской метафоре, на что и указывает публицист В. Е. Ронкин. Но наиболее полное представление об этой традиции даёт коллекция Гая Михайловича Севера, пополняя список переводчиков 30-й оды Горация «К Мельпомене» (), более известной именно как «Памятник», следующими именами: В. А. Алексеев, П. Бобцов, Н. В. Вулих, В. В. Капнист, Б. Лапков, П. Ф. Порфиров, Г. М. Север, С. Суворова и А. А. Фет.
Интересна такая деталь во «взаимоотношениях» творчества М. В. Ломоносова как поэта-переводчика с творчеством одиннадцати других русских поэтов, в числе которых Г. Р. Державин и А. С. Пушкин: вместе с другими оба последних в своих персонифицированных «Памятниках» воспроизводят смысловую ошибку первого, допущенную в переводе «Памятника». Филолог Л. А. Мусорина отмечает: «М. В. Ломоносов не понял оригинальный текст 30-й оды Горация и тем самым породил литературную традицию: из девятнадцати авторов одиннадцать написали свои „Памятники“ с упоминанием мест будущей славы». Речь идёт о неверно истолкованном М. В. Ломоносовым упоминании Горацием топонима и антропонима как двух топонимов, что привело к изменению смысла довольно существенного указания Горация на свою первенственную роль в переложении Эолийской песни на Италийский лад, следствием чего явилось получивше распространение образное указание на якобы географическую широту его славы. По тем или иным причинам (недостаточное ли владение латынью, влияние ли авторитета М. В. Ломоносова) названные переводчики воспроизводят эту ошибку. В то же время, на художественной ценности произведений это, конечно, никак не отразилось, мало того, в этом отношении «ошибка» М. В. Ломоносова, освободив горациевский образ от очень конкретной экзотической принадлежности — придала ему расширительное значение универсальной выразительности — а что это, как ни атрибут иррациональной сущности истинного творчества?
Литературовед Л. В. Омелько рассматривает ломоносовский текст как универсальное целое, где значение имеют и мысли поэта и форма их выражения. Одно из последних стихотворных произведений М. В. Ломоносова, «Разговор с Анакреоном» предлагается расценивать как своеобразное «художественно-философское завещание». Примером поэтического силлогизма М. В. Ломоносов даёт в «Риторике» свой перевод «Памятника» Горация, но в отличие от Г. Р. Державина и А. С. Пушкина, как теперь с уверенностью можно сказать, следовавших этому переводу — не проецирует его на оценку собственного творчества, что в некоторой степени он осуществляет посредством «Разговора с Анакреоном», олицетворяющим синтез глубины философской мысли и поэтического мастерства стихотворца.
Возвращаясь к пушкинским критическим заметкам, приведём его слова, где говорится о времени М. В. Ломоносова, и снова — о нём самом, и если здесь о его поэзии — очень мало, то о личности «росского Пиндара» и об отношении к нему А. С. Пушкина некоторое представление составить можно:
А вот ещё одно мнение А. С. Пушкина о поэзии М. В. Ломоносова (О предисловии г-на Лемонте к переводу басен И. А. Крылова):
Научная терминология.
Михаил Васильевич создал основы русского научного языка; ему удалось исключительно удачно перевести с латинского языка основные физические и химические термины.
Ломоносов впервые ввёл в русский язык и науку множество новых научных терминов, которые большей частью закрепились и в быту. Часть из них явилось транскрипцией и транслитерацией устоявшихся или только ещё вводимых в научную лексику терминов: "атмосфера, микроскоп, минус, полюс, формула, периферия, горизонт, диаметр, радиус, пропорция, барометр, манометр, эклиптика, метеорология, оптика, вязкость, кристаллизация, материя, эфир, селитра, сулема, поташ"… и тому подобных. Другие представляют собой кальки — присутствовавших в научном тезаурусе или неологизмы. По разным источникам к ним относят следующие: "градусник" (от латинского слова "градус" — ступенька), "предложный (падеж)", "зажигательное (стекло)", "огнедышащие (горы)", "преломление (лучей)", "равновесие", "негашёная (известь)", "горизонтальный", "вертикальный", "квадрат", "кислота", "удельный (вес)", "квасцы", "сферический", "электрический".
М. В. Ломоносов о журналистах и научной публицистике.
И весьма показательный пример тесной связи или причастности М. В. Ломоносова к разным дисциплинам, его публицистической и просветительской активности, даёт «Рассуждение об обязанностях журналистов при изложении ими сочинений, предназначенное для поддержания свободы философии» (1754). Это достаточно отчётливая зона соприкосновения разных его интересов, показатель его гражданской, нравственной позиции. Актуальность этого «манифеста» очевидна, причём — не только относительно научно-популярных публикаций — много шире подразумеваемое за этими словами…
Поводом к рассуждению явилась публикация немецкого журналиста, исказившего смысл ломоносовского исследования, извратившего суть естественнонаучного труда, обсуждаемого в рецензии, до противоположных выводов. Своим следствием эта статья имела появление целого ряда некомпетентных публикаций, «изобличающих несостоятельность учёного М. В. Ломоносова», — острокритических выпадов в его адрес других учёных. Вот конкретное указание самого М. В. Ломоносова на эти ошибки рецензента:
Учёный сознаёт в себе силы не только отстоять справедливость собственных суждений, но и выступить с критикой вульгарного толкования предмета естественнонаучной принадлежности вообще — он считает долгом дать программу, которой рекомендует следовать тем из пишущей братии, кто берётся за это ответственное дело, не имея должной осведомлённости,— какими нравственными принципами им руководствоваться, беря на себя смелость изложения и критики вопросов сложных для понимания — в том числе, как показывает опыт — и самого критика.
Отношения с Синодом.
В 1743 году М. В. Ломоносов написал «Утреннее размышление о Божием величестве», содержащее гипотезы о процессах на солнце, получившие научное подтверждение только в середине XIX века, — и «Вечернее размышление о Божием величестве при случае великаго северного сияния», неоднократно публиковавшееся при жизни автора; особую ценность вторая ода представляет, о чём сказано выше, для научного объяснения природы северного сияния (задолго до и корректней Б. Франклина). М. В. Ломоносов выступает с позиций естествоиспытателя, нигде и никогда не отрицая бытия Божия.
Но в конце 1756 — начале марта 1757 года он пишет направленный против обскурантизма антиклерикальный «Гимн бороде» — предположительно, в адрес одной конкретной персоны — архиепископа Сильвестра Кулябки (по словам М. В. Ломоносова, когда он досадил «одной из сих пустых бород», за неё вступились «и прочие»). При жизни учёного стихотворение не публиковалось, распространялось в списках; местонахождение подлинника неизвестно. В ответ на эту сатиру, воспринятую духовенством на свой счёт вообще, 6 марта 1757 года Синодом во всеподданнейшем докладе императрице высказана просьба «таковые соблазнительные и ругательные пасквили истребить и публично сжечь, и впредь то чинить запретить, и означенного Ломоносова для надлежащего в том увещевания и исправления в Синод отослать». Предположения относительно раскольников в виде центрального объекта сатиры, несмотря на имеющиеся косвенные основания к тому, давно признаны несостоятельными — об этом говорит и тот факт, что сатира эта затронула именно высшее духовенство (см. выше). Просьба Синода была оставлена без последствий, а доклад, «подобно и прежним жалобам на Ломоносова, не навлёк на него никакой ответственности, и через несколько дней… он был назначен советником академической канцелярии».
Уже после обращения синода, воспользовавшись возможностью уязвить М. В. Ломоносова, по тому же поводу с особой яростью обрушился на него гуманитарий В. К. Тредиаковский (небезосновательно — в списках «гимна», как показывает анализ, затронута и его персона), сам в юности подозревавшийся духовенством в атеизме.
Известно более позднее стихотворение-эпиграмма на ту же тему, также приписываемое М. В. Ломоносову (местонахождение подлинника неизвестно). Впервые опубликовано П. Пекарским
Сложные отношения М. В. Ломоносова с Синодом обусловлены формальным конфликтом научных представлений, сложившихся к тому времени, и церковных догматов, — тем же желанием учёного, последовательно руководствуясь логикой научного миропонимания, противодействовать обскурантизму.
Синодом запрещена, изданная в 1740 году в Санкт-Петербурге в переводе книга Б. Б. де Фонтенеля «Разговоры о множестве миров», где излагалась система Коперника, — изуродован цензурой перевод аналогичной по содержанию книги А. Поупа «Опыт о человеке» (1757).
В «Явлении Венеры» М. В. Ломоносов пишет:
Являясь убеждённым сторонником гелиоцентрической модели и предположений о множественности обитаемых миров, последнему М. В. Ломоносов видел косвенное подтверждение в установленном им наличии атмосферы у Венеры. В своём «Прибавлении» к «Явлению Венеры» учёный ставит вопрос: противоречат ли эти идеи учению церкви? Сопоставив цитаты из Священного писания и православных богословов, он показывает разность задач религии и науки — у них нет оснований для того, чтобы противостоять друг другу. Он пишет для «Прибавления» весьма убедительные стихи «Случились вместе два астронома в пиру ….», правда, допуская некоторую вольность: на месте Птоломея, должен быть Тихо Браге — «Другой, что Солнце все с собой планеты водит …» — это его система, а не Птолемея.
В своём проекте «О сохранении и размножении российского народа» (1761) М. В. Ломоносов высказывается относительно несообразностей в понимании некоторых церковных обычаев, но соображения эти, кроме идей переноса дней постов и, соответственно, церковных праздников, никоим образом не противоречат мнениям разумных православных пастырей и отцов церкви на этот счёт (например, о неумеренном разговении, начётничестве и буквализме в исполнении отдельных обрядов и т. д.).
Изобразительное искусство.
Мозаики.
Продвижение двух центральных идей, связанных со стеклоделием, с развитием основанной им науки о стекле, с производством художественного стекла, смальт — о фабрике и о мозаичной мастерской — шло много успешней, чем некогда строительство первой лаборатории.
В это время М. В. Ломоносов уже не какой-то безвестный адъюнкт, а профессор Академии. О его открытиях знают за границей, его имя часто звучит при дворе императрицы. «Враждебные ему группировки мелких академических людишек не смеют поднять свой голос и стараются мешать и вредить исподтишка».
Неукротимая энергия учёного, решительность, способствовали тому, что его чаяниям суждено было сбыться: в специальной пристройке к его дому на Васильевском острове открывается мастерская для набора мозаичных картин, и в ней он начинает занятия с первыми своими учениками — художниками-мозаичистами Матвеем Васильевичем Васильевым и Ефимом Тихоновичем Мельниковым. А сам М. В. Ломоносов был первым в России человеком, который начал на собственном опыте и своими руками осваивать технику мозаичного набора. Он демонстрирует свойства безошибочного художественного чутья, благородный пафос замыслов; имея трезвый взгляд на искусство, М. В. Ломоносов в кратчайший срок становится руководителем группы художников, прославившихся созданием первоклассных мозаичных картин, по качествам своим сравнимых с лучшими живописными произведениями.
Далее Я. Штелин сообщает о созданных в 1756 году «погрудном портрете Петра I и его дочери нн — блаженной памяти герцогини Голштинской…», как достоинства он отмечает то, что «в портрете герцогини кружева исполнены из одних только маленьких осколков белого литика, и вообще швы набора или промежутки между кусочками смальты не видны более и наполовину так отчётливо, как в первых картинах, где между ними можно было положить почти мезинец». В то же время, В. К. Макаров находит, что как раз «исполненный Ломоносовым портрет Петра I. набранный крупными, неправильной формы кусками колотой смальты, является драгоценной реликвией высокой художественной культуры XVIII века и даёт один из самых выразительных, одухотворённых образов Петра» &gt;. В 1757 году М. В. Ломоносов представят Сенату программу, в которой намечается сооружение над могилой Петра Великого мозаичного монумента, а всю крепостную церковь — «выложить мозаичными картинами». В 1761 году Сенат поручил ему исполнение этого прекрасного, по словам того же Я. Штелина, проекта, уплатив несколько тысяч рублей «заранее или на подряд».
Полтавская баталия.
М. В. Ломоносов со всей энергией взялся за осуществление своих, хоть и «урезанных», но грандиозных для возрождения мозаики, замыслов, он начинает подготовку к созданию монументального панно «Полтавская баталия», для набора которой нужно было написать картину (картон). Был нанят «хороший городской живописец Л. З. Кристинек (ученик Фанцельта — копииста Грота)», которому в помощь даны были «жалкие новички из академической живописной школы и подобная же пара бедняг из Канцелярии от строений», как характеризует «членов исполнительской группы» Я. Штелин. И они «слепили» 14 футов длиной и 9 футов высотой «ужасно красивую и большую картину, которая должна была представлять Полтавскую баталию» ().
Мозаику такого размера завершили поздней осенью 1764 года, заключив в золочёную чеканную медную раму. Во время приезда в том же году в мастерскую на Мойке австрийского посла для осмотра «Полтавской баталии», М. В. Ломоносова вынесли из дома в креслах, поскольку болезнь ног уже не позволяла ему ходить.
После завершения этой работы М. В. Ломоносов начал немногим меньшую картину для мозаичного панно «Покорение Азова в 1696 году», но его кончина в следующем году прервала работу. Созданный Бухгольцом эскиз, вместе с тремя другими, которые должны были последовать за ней, М. В. Ломоносов намеревался поручить подправить её Торелли, но тот не принял всерьёз композицию, заявив. что «подправка» обернётся полной переделкой, на что М. В. Ломоносов выругался, оставшись при своём намерении….
Мнения о даровании М. В. Ломоносова как художника, если и не расходятся до противоречия, то дают его понимание, естественно, в различном преломлении. Искусствовед В. К. Макаров предоставляет оценку уже с высоты ретроспективного взгляда на роль его творчества, в большей степени независимо, нежели Я. Штелин — с неизбежными, но и закономерными для его современного явлению восприятия — обескураженностью и некоторым скепсисом, в значительной мере обусловленным бессознательным, но искренним сочувствием энергии и энтузиазму дерзновенного дилетанта, не имеющего способных исполнителей. И если первый справедливо сопоставляет ломоносовские мозаики с «монументальной мозаичной живописью нового времени», которая берёт своё начало как раз в масштабности и монументальности задуманного и осуществлённого М. В. Ломоносовым, то второй — констатирует, что для эскизов и картонов, служивших этому воплощению в натуре, не нашлось достойных живописцев, низводя роль мозаики до прикладной функции имитации живописи, хоть бы и монументальной, без осознания ценности её самостоятельных пластических особенностей. В то же время, именно понимание особенностей мозаики позволяло М. В. Ломоносову сознавать и отсутствие надобности досконального следования картону в материале, когда многое придёт к единству за счёт этих уникальных пластических свойств модульного набора.
Во всяком случае, именно Якоб Штелин, конечно, будучи потрясён, но и желая верить в целесообразность задуманного, предостерегал М. В. Ломоносова от создания мозаики по той «жалкой картине», которую представляла собой подготовленная работа; с другой стороны, вероятно, он, как и многие другие, в том числе профессиональные художники, не способен был во всей полноте представить ясно видевшееся М. В. Ломоносову, и уже созданное, в конце концов, своими масштабами и выразительностью ошеломившее Я. Штелина; не умея рисовать, М. В. Ломоносов, тем не менее, обладал очень ценным для художника даром обобщения, и способность к абстрагированию давала ему широту видения условного, монументального — свободу от натуралистического буквализма. тенётами которого обременено было восприятие «художественной правды» его оппонентов по этой части, в том числе и Я. Штелина. Большой знаток творчества последнего, К. В. Малиновский, объективно характеризует уровень и способность понимания им деятельности М. В. Ломоносова, отмечая, что «представления о художественной ценности мозаичных работ (восхищение иллюзорностью, имитацией масляной живописи) свидетельствуют, что в данном вопросе Штелин следовал вкусам своей эпохи и не мог быть беспристрастным арбитром. Ломоносов был ближе к нынешнему пониманию живописности картины и, соответственно, мозаики».
Первый современник-исследователь творчества М. В. Ломоносова даёт исчерпывающий каталог его наследия в мозаичном искусстве.— ни одна другая посвящённая этому работа уже не содержит такой полноты документальных сведений о сделанном им. Здесь названы известные портреты Петра I и П. И. Шувалова, «Полтавская баталия», несколько других знакомых по различным экспозициям произведений, сохранившихся или упоминаемых исследователями: «Апостол Пётр» (1761), св. Александр Невский (1757—1758), погрудный профиль Екатерины II (1763), портрет великого князя Петра Фёдоровича (1758—1759), портрет великой княгини Елизаветы Петровны (1758—1760), портрет графа М. И. Воронцова (1765); но Якоб Штелин упоминает ряд произведений самого М. В. Ломоносова и его мастерской, не упоминаемые никакими другими источниками: портрет великого князя Павла Петровича, два пейзажа (1765—1766), портрет графа Г. Г. Орлова (1764), св. Пётр (с картины П.-П. Рубенса).
Подводя итог этому последнему разделу творчества М. В. Ломоносова, завершающему его служение и науке и искусству, Н. Н. Качалов в таких словах отмечает основные его результаты:
Оценка деятельности.
Подводя итоги своей деятельности, приблизительно в мае 1764 года М. В. Ломоносов выбирает из всего своего творчества то, что представляется ему наиболее важным. Результатом этого анализа явилось описание девяти «открытий», из которых четыре (1—3, 6) имеют отношение к исследованиям, основанным на его корпускулярном учении и гипотезе о вращательном движении составляющих тела частиц (3 — физическая химия, теория растворов), остальные относятся к минералогии и геологии (4), изучению электрических явлений (5) и гравиметрии (7—9).
Изучение и популяризация наследия Ломоносова.
Попытки изучения биографии М. В. Ломоносова были предприняты ещё в 1768 году. Академики И. И. Лепёхин и
Н. Я. Озерецковский с 1768 по 1772 год включительно изучали родину Ломоносова (записки Озерецковского о Двинской земле, Холмогорах), а также биографию учёного, они узнали о его роде и детских годах.
Затем секунд-майор П. И. Челищев в 1791 году побывал на Курострове, записав воспоминания помора Варфоломеева и соседей о юности Ломоносова на его малой родине, и даже поставил первый деревянный памятник учёному (не имея на большее средств). С 1860−1870-х годов до начала XX века интерес исследователей к наследию, важнейшему вкладу в культуру России М. В. Ломоносова возрос, происходил анализ его естественнонаучных работ. Труды П. С. Билярского, А. А. Куника, А. С. Будиловича, П. П. Пекарского и В. И. Ламанского положили начало превращению изучения наследия Ломоносова в научную дисциплину.
В работе над академической биографией М. В. Ломоносова были использованы материалы, собранные А. А. Куником. На основе их вышел также «Сборник материалов для истории Императорской Академии наук в XVIII веке» (1865), который посвящён жизни и литературной деятельности В. К. Тредиаковского и М. В. Ломоносова.
В 1865 году была издана книга Д. М. Перевощикова «Труды Ломоносова по физике и физической географии». Математик и астроном Д. М. Перевощиков был одним из первых, кто проводил систематические исследования и занимался популяризацией научного наследия Ломоносова. Позднее А. С. Будилович издал труды «Об учёной деятельности Ломоносова по естествознанию и филологии» (1869), «Ломоносов, как писатель. Сборник материалов для рассмотрения авторской деятельности Ломоносова» (1871).
Большую работу по изучению естественнонаучного корпуса трудов М. В. Ломоносова проделал Б. Н. Меншуткин, давший в результате своей деятельности возможность получить представление как об опубликованных в редких изданиях, так и о не опубликованных вообще трудах М. В. Ломоносова, найдя их, переведя с латыни и издав лабораторные журналы, рукописи и программы исследований учёного. Будучи сам химиком и историком науки, Меншуткин дал профессиональную оценку вклада М. В. Ломоносова в развитие идей о сохранении массы вещества. Им опубликованы монографии «Ломоносов как физикохимик» (1904) и «Первый русский учёный» (1915), сборники «Рукописи Ломоносова в Академии наук СССР» (1937) и «Труды М. В. Ломоносова по физике и химии» (1936). Б. Н. Меншуткин редактировал собрание сочинений М. В. Ломоносова, осуществлявшееся в 1891—1948 годах. Эти труды явились важным вкладом в осмысление роли естествоиспытателя не только в основных направлениях его исследований, но и с точки зрения методологии науки.
Много сделал для понимания деятельности М. В. Ломоносова и должной оценки её президент Академии наук Украины В. И. Вернадский, чьё имя в ряду русских естествоиспытателей по праву соседствует с именем первого русского учёного («Ломоносов XX века»), В. И. Вернадский возглавлял комиссию по изучению наследия в канун 150-летнего юбилея его первой лаборатории.
Термин «ломоносововедение» закрепился в науке. Директор академического музея М. В. Ломоносова Э. П. Карпеев определяет Ломоносововедение как:
…изучение биографии, научного наследия и вклада Ломоносова в науку и культурный процесс… Ломоносов был сложнейшим явлением своего времени, совмещавшим в себе народные корни, религиозность, монархические настроения, естественно-научный рационализм, просветительство и мн. др., поэтому в «ломоносововедении» с самого момента его зарождения высказывались самые различные, иной раз противоположные оценки его жизни и творчества. Началом «ломоносововедения» можно считать появившиеся сразу же после смерти Л. оценки современников.
В Международном институте управления (МИУ), располагающемся в городе Архангельске и имеющем филиалы в регионах России, существуют дисциплины «Ломоносововедение» по ряду специальностей.
В 1992 году в Архангельске был создан Межрегиональный Ломоносовский фонд, одной из основных задач которого является просветительская деятельность. Основной идеей, лежащей в основе организации фонда, является продолжение подвижнической деятельности М. В. Ломоносова, направленной на возрождение лучших традиций российской науки, культуры, просвещения на Русском Севере. По инициативе фонда ведётся подготовка пятитомной «Поморской энциклопедии», в 2006 году организован Научно-культурный центр «Ломоносовский Дом» в Архангельске, создан конкурс имени М. В. Ломоносова научно-исследовательских и внедренческих работ по проблемам охраны окружающей среды Архангельской области.
М. В. Ломоносов в изображении художников.
Академик П. Л. Капица пишет: «до нас не дошёл хороший портрет Ломоносова. Портреты и гравюры, которые обычно воспроизводятся, сделаны посмертно и являются копиями с одного и того же оригинала, написанного неизвестным и малоодарённым художником. Только бюст работы Шубина, лично знавшего Ломоносова, даёт нам его живой и одухотворённый образ».
Правда и легенды о М. В. Ломоносове.
М. В. Ломоносов был натурой увлекающейся, порой — пылкой; вполне авторитетные источники указывают на примеры несдержанности с его стороны в отношении равных, о «продерзостях» и «неучтивых поступках». История его пребывания в Германии сохранила свидетельства «беспорядочности» его тамошней жизни. Известны скандальные эпизоды уже петербургской его бытности… «…Схватя болван, на чём парики вешают, и почал всех бить и слуге своему приказал бить всех до смерти…» — объявляет его «жертва», украсив свой рассказ душераздирающими подробностями об этом «коммунальном» столкновении с «рукоприкладством» и «до полусмерти побитием», которое обернулось для М. В. Ломоносова следствием и непродолжительным заключением… Обо всём этом сохранились не только анекдоты, но и свидетельские показания. Но, как говорится, «что дозволено Юпитеру…».
В своих суждениях и оценках он прям — не прибегает к эвфемизмам и «сглаживанию углов», когда пишет о кознях и непотребных инсинуациях своих недоброжелателей: «…Таубертовой комнатной собачки — Румовского. Тауберт, как только увидит на улице собачку, которая лает на меня, тотчас готов эту бестию повесить себе на шею и целовать её под хвост. И проделывает это до тех пор, пока не минует надобность в её лае; тогда он швырнёт её в грязь и натравливает на неё других собак» (письмо Л. Эйлеру; 21 февраля 1765).
Вот эпизод с грабителями в другом изложении:
В 1748 году Ломоносов написал оду в честь очередной годовщины со дня восшествия императрицы Елизаветы Петровны на престол, за что был награждён двумя тысячами рублей. Согласно легенде, в казне на тот момент были только медные деньги и награда была выдана именно ими. Для того чтобы доставить награду Ломоносову, потребовалось два воза.
Усадьба М. В. Ломоносова на Мойке — Большая Морская, 61 — 
Память Ломоносова.
В честь Ломоносова названы различные научные и учебные заведения, город в составе Санкт-Петербурга, а также многочисленные улицы, ряд сёл и районов, космические объекты (кратер на Луне, кратер на Марсе и астероид), горный хребет, полуостров и течение. В 1950 году в его честь В. И. Герасимовским был назван открытый им новый минерал ломоносовит.
В нумизматике.
Кроме того, 19 ноября 1986, к 275-летию со дня рождения М. В. Ломоносова, Госбанк СССР выпустил памятную монету номиналом 1 рубль из медно-никелевого сплава.

</doc>
<doc id="1025" url="?curid=1025" title="Чеченский язык">
Чеченский язык

Чече́нский язы́к ("но́хчийн мотт") — один из нахских языков, национальный язык чеченцев.
Чеченский язык распространён в Чеченской республике, Республикe Ингушетии, Хасавюртовском, Новолакском, Казбековском районах Дагестана и в Ахметском районе Грузии. По переписи 2010 года, число говорящих на нём в России составляло 1 354 705 человек. Чеченский язык занимает пятое место по распространённости в России (после русского, английского, татарского и немецкого). Государственный (наряду с русским) язык Чечни и один из литературных языков Дагестана.
На чеченском языке издаются региональные газеты в Чечне («Даймохк», радиогазета «Чечня Свободная» и ряд других) и Дагестане («Нийсо-Дагестан»). В Чечне издаются литературно-художественные журналы «Орга» и «Вайнах».
Диалекты.
Основные диалекты: плоскостной, лёгший в основу литературного языка, аккинский, чеберлоевский, мелхинский, итумкалинский, галанчожский, кистинский. Они распадаются на говоры, между которыми существуют относительно незначительные расхождения. Наибольшими являются различия между плоскостным, аккинским, чеберлоевским и отчасти кистинским (в связи с сильным влиянием грузинского языка) диалектами.
Аккинский диалект.
Характерному для литературного языка комплексу согласных "лх" в аккинском соответствует "рх": литер. "малх", аккинск. "марх" («солнце»); литер. "болх", аккинск. "борх" («работа»). В отличие от литературного, в аккинском нет прогрессивной ассимиляции аффиксального "н" в глагольных формах прошедшего времени: литер. "аьлла", аккинск. "аьлнд" («сказал»); литер. "делла", аккинск. "даьлнд" («кончил»). В аккинском классные показатели могут выступать в функции внешней флексии глагольных форм: литер. "д-аьлла", аккинск. "д-аьлн-д" («закончил»); литер. "делла", аккинск. "д-елн-д" («отдал») и др.
Мелхинский диалект.
Примеры фонетических отличий мелхинского диалекта от литературного языка: литер. "сецна", мелх. "сеца" («остановился»); литер, "лаьцна", мелх. "лаьста" («поймал»); литер. "эцна", мелх. "иста" («купил»); литер. "дечиг", мелх. "дечк" («дрова»); литер. "хьаж", мелх. "хьаьга" («лоб»); литер. "йоьхь", мелх. "лоьхь" («кишка, колбаса») и др.
Итум-Калинский диалект.
Примеры фонетических отличий итон-калинского диалекта от литературного языка: литер. "борц", итон-к. "борс" («просо»); литер. "дарц", итон-к. "дарс" («буря»); литер. "лоьху", итон-к. "лиеха" («ищет»); литер. "муохк", итон-к. "муорк" («земля, страна»); литер. "дуохк", итон-к. "дуорк" («туман»); литер. "бурч", итон-к. "бурш" (перец); литер. "ирча", итон-к. "ирша" («некрасивый») и др.
Галанчожский диалект.
Галайн-Чажский диалект, так же как и аккинский и мелхинский диалекты, сочетает в себе черты чеченского и ингушского языков, и является своего рода мостом между чеченским и ингушским языками. Комплексу ст в начале слова в галайн-чажском, как и в ингушском, соответствует с: литер. стаг, галайн-ч. саг («человек»); литер. стогар, галайн-ч. согар («лампа»), как и фонетические отличия от литературной формы: литер. "доттагІ", галайн-ч. "доттах" («друг»); литер. "мостагІ", галайн-ч. "мостах" («враг»); литер. "орца", галайн-ч. "орса" («тревога»); литер. "цициг", галайн-ч. "циск" («кошка»); литер. "дечиг", галайн-ч. "дешк" («дерево»); литер. "эчиг", галайн-ч. "аьшк" («железо») и др.
Окончание глаголов так же занимает промежуточное положение между чеченским и ингушским языками: литер. чеч. гIур ву, литер. инг. гIоаг ва, галайн-ч. гIуорг ву («пойду»); литер. чеч. хуур ду, литер. инг. ховг да, галайн-ч. хоуврг ду («узнаю»)
В галайн-чажском диалекте так же как и в ингушском языке, и в аккинском, и мелхинском диалектах чеченского языка используется буква ф: литер. х1оаъ, галайн-ч. фоаъ («яйцо»); литер. 'х1орд', галайн-ч. форд («море»), отличительной чертой галайн-чажского диалекта, также является: йах вместо литературного бах («говорить»), и строгое обозначение грамматических классов в глагольных и прилагательных формах: литер. Іаьржаниг, галайн-ч. Іаьржаварг / Іаьржайарг / Іаьржабарг / Іаьржадарг («черный»); литер. диканиг, галайн-ч. дикаварг / дикайарг / дикабарг / дикадарг («хороший»); литер. тІечІагІо, галайн-ч. тІичІагІава / тІичІагІайа / тІичІагІаба / тІичІагІада («прикрепить»); литер. сацо, галайн-ч. сацава / сацайа / сацаба / сацада («прикрепить»), и др.
В рассматриваемых диалектах наблюдаются также некоторые лексические, морфологические и синтаксические особенности.
Письменность.
С распространением ислама в Чечне утвердилась арабская письменность. В XIX — начале XX веков она была реформирована для нужд чеченской фонетики. Параллельно с 1862 года существовала чеченская письменность на кириллице, созданная П. К. Усларом. В 1925 году была введена письменность на латинской основе. В 1938 году её сменила кириллица, действующая по настоящее время. В 1990-е годы была предпринята попытка восстановить латинизированный алфавит.
Чеченский алфавит:
Лингвистическая характеристика.
Фонетика и фонология.
Фонетическая система отличается сложностью вокализма (краткие, долгие, умлаутированные, простые гласные, дифтонги, трифтонги, слабо выраженная назализация гласных) и консонантизма (простые, геминированные, абруптивные, фарингальные согласные).
Морфология.
Морфологическая система агглютинативно-флективная. Имеет 6 грамматических классов, многопадежное склонение, глагольные категории класса, времени, наклонения, вида.
Падежи:
Чеченская Википедия.
Существует Чеченская Википедия () — раздел Википедии на чеченском языке. Создан 28 февраля 2005 года, базируется на кириллице.
На 25 в Чеченской Википедии насчитывается статей.
С начала 2013 года это крупнейший из разделов на нахско-дагестанских языках.
На ноябрь 2013 года по объёму тысячи , раздел занимал 103 место, а по объёму расширенного списка из 10 000 важнейших статей — 126 место среди всех разделов Википедии.
Традиционное приветствие.
Маршалла или "маршалла хаттар" (чеч. приветственный вопрос) — традиционные чеченские приветствия, часть речевого этикета. В отличие от исламского приветствия «Ассалам Іалайкум», употребляемого в чеченской среде только между мужчинами, «маршалла ду хьоьга/шуьга» имеет универсальное применение, и так же как и «ассалам алейкум», означает «мир тебе/вам».
Диалекты:
Словари:

</doc>
<doc id="1026" url="?curid=1026" title="Латинский алфавит">
Латинский алфавит

Лати́нский алфави́т (лати́ница) — восходящая к греческому алфавиту буквенная письменность, возникшая в латинском языке в середине I тысячелетия до н. э. и впоследствии распространившаяся по всему миру. Современный латинский алфавит, являющийся основой письменности большинства романских, германских, а также множества других языков, в своём базовом варианте состоит из 26 букв. Буквы в разных языках называются по-разному.
Письменность на основе латинского алфавита используют все языки романской (кроме молдавского языка в ПМР и, в некоторых странах, сефардского языка), германской (кроме идиш), кельтской и балтийской групп, а также некоторые языки славянской, финно-угорской, тюркской, семитской и иранской групп, албанский, баскский языки, а также некоторые языки Индокитая (вьетнамский язык), Мьянмы, большинство языков Зондского архипелага и Филиппин, Африки (южнее Сахары), Америки, Австралии и Океании, а также искусственные языки (например, эсперанто).
История.
Древнейшие обнаруженные латинские надписи датируются VII веком до н. э. Направление письма в архаичных надписях могло быть как слева направо, так и справа налево. Засвидетельствованы также надписи бустрофедоном.
Существуют две гипотезы происхождения латинского алфавита. По одной гипотезе, латинский язык заимствовал алфавитное письмо из греческого напрямую, по другой — своеобразным посредником в этом оказался этрусский алфавит. В том и в другом случае основой латинского алфавита является западногреческий (южноиталийский) вариант греческого алфавита. Латинский алфавит обособился примерно в VII веке до н. э. и первоначально включал только 21 букву: A, B, C, D, E, F, Z, H, I, K, L, M, N, O, P, Q, R, S, T, V и X.
В архаичном латинском алфавите буквы C (восходящая к архаичному наклонному начертанию греческой гаммы Γ), K (от греческой каппы Κ) и Q (от впоследствии исключённой из греческого алфавита буквы "коппа" Ϙ) использовались для обозначения звуков и ; при этом K ставилась перед A; буква Q (иногда) ставилась перед V и O; а C ставилась всюду.
Буквы Θ, Φ и Ψ не использовались для записи слов, но применялись как знаки для чисел 100, 1000 и 50. Впоследствии эти функции перешли к буквам C, M и L, соответственно (см. Римские цифры).
Буква Z (аналог греческой дзеты Ζ) была исключена из алфавита в 312 году до н. э. (позже её восстановили). В 234 году до н. э. на месте исключённой Z была создана отдельная буква G путём добавления к C поперечной чёрточки. В I веке до н. э., после завоевания Римом Греции были добавлены буквы Y и Z для записи слов, заимствованных из греческого языка. Название буквы Y («i Graeca», то есть «и греческое») было введено, чтобы отличать эту букву от I, так как греческий звук, соответствующий ипсилону, в латинской фонетике отсутствовал. Большинство букв называлось не греческими названиями их аналогов (восходящих к финикийскому алфавиту), а просто по их произношению (для гласных) или (для согласных) с помощью добавления звука после согласного (для взрывных согласных) или перед согласным (для фрикативных и сонорных) (, e, e, e, …), за исключением K a и Q u, чтобы отличать их от C e, а также H a. В итоге получился классический латинский алфавит из 23 букв:
Потомок Аппия Клавдия, император Клавдий (правивший в 41—54 годах), будучи на должности консула в 37 г., пытался добавить в латинский алфавит три новых буквы: знаки для звуков PS/BS (по аналогии с греческой пси Ψ); для согласного V, чтобы отличать его от обозначавшегося той же буквой гласного звука (в современном латинском алфавите для этой гласной используется буква U, возникшая лишь в новое время); а также для краткого звука, промежуточного между I и V (так называемый "sonus medius", звучавший, вероятно, как ɨ или ʉ, близко к русскому звуку "ы"). Однако после смерти Клавдия «Клавдиевы буквы» были забыты.
На рубеже II—I веков до н. э. выработался каллиграфически совершенный вид эпиграфического письма для особо важных надписей. Латинское письмо эпиграфических памятников также называют монументальным, квадратным или лапидарным. Однако в повседневной жизни римляне использовали курсивную скоропись. Эпиграфисты выделяют иногда ещё один вид латинского письма — актуарный, использовавшийся для документов (актов). Особый вид латинского письма возник в III веке в Северной Африке — так называемое унциальное (то есть «крючковатое») письмо.
Древние римляне использовали только заглавные формы букв; современные строчные буквы появились на рубеже античности и средних веков; в целом буквы в своём современном виде оформились около 800 года (так называемый каролингский минускул).
Уже в новое время, около XVI века произошла дифференциация слоговых и неслоговых вариантов букв I и V (I/J и U/V). В итоге получился современный алфавит из 25 букв:
Примерно в то же время, но только в северной Европе стал считаться отдельной буквой диграф VV, возникший в XI веке и использующийся в письме германских языков. С добавлением W алфавит достиг своего окончательного состава из 26 букв:
Этот стандартный 26-буквенный алфавит зафиксирован Международной организацией по стандартизации (ISO) как «базовый латинский алфавит». Этот алфавит совпадает с современным английским алфавитом.
Однако, когда говорят об алфавите собственно латинского языка, а также романских языков, то W чаще всего не включают в состав букв (тогда латинский алфавит состоит из 25 букв).
В средние века в скандинавских и английском алфавитах использовалась руническая буква þ (название: "thorn") для звука (как в современном английском thing), однако позднее она вышла из употребления. В настоящее время thorn используется только в исландском алфавите.
Все прочие добавочные знаки современных алфавитов, основанных на латинском, происходят от указанных выше 26 букв с добавлением диакритических знаков или в виде лигатур (так, немецкая буква ß, эсцет, происходит из готической лигатуры букв S и Z).
Модификации букв.
Для большинства языков обычного латинского алфавита недостаточно, поэтому для адаптации фонетических систем языков к латинской графике часто используются разные диакритические знаки, лигатуры и другие модификации букв. Примеры:
Ā Ă Â Ã À Á Ä Å Ą Æ Ç Č Ć Ð Ē Ę Ğ Ģ Î Į Ì Í Î Ï Ī Ķ Ł Ñ Ö Ő Ó Ø Œ ß Ş Š Ś Ţ Ū Ŭ Ú Ù Û Ž Ź Ż
Больше всего диакритических знаков имеет вьетнамский язык, который, подобно турецкому, перешёл на латиницу довольно поздно.
Кроме того, в некоторых языках возникли комбинации букв — диграфы, триграфы, тетраграфы — для обозначения звука, отсутствующего в классической латинской азбуке (например: "ch", "sch", "th", "ng", "sz"). Из некоторых таких комбинаций букв со временем возникают лигатуры (сращения) или новые буквы (ср. вышеуказанное образование "W" из двойной "VV" в поздней латыни, английском, немецком и польском или "æ" из "a" и "e" в датском, норвежском и исландском).
Во времена Средневековья в латинском письме часто употребляемые префиксы, суффиксы и даже корни слов сокращались с помощью лигатур и специальных знаков, некоторые из которых используются и сегодня. Например, символы @ и &amp; образованы из латинских слов "ad" («к») и "et" («и»).
Латинская азбука в других языках расширялась также за счёт появления новых букв. Часто модифицировались уже имеющиеся буквы, как было уже в классической латыни с буквой G, которая является модификацией буквы C. Другие примеры новых букв: Ð в исландском языке, Ŋ в саамском языке.
Иногда латиницу расширяли за счёт букв других алфавитов, как это произошло с буквами "Y" и "Z", заимствованными из греческого алфавита, или с буквой Þ (Thorn) в исландском языке, заимствованной из рунической азбуки. Некоторые западно-, центрально- и южно-африканские языки используют дополнительные буквы; например, в языке адангме имеются буквы ⟨⟩ и ⟨⟩, язык га использует буквы ⟨⟩, ⟨Ŋ/ŋ⟩ и ⟨⟩. В языке хауса используются буквы ⟨⟩ и ⟨⟩ для имплозивных согласных и ⟨⟩ для абруптивных согласных.
На латинском алфавите основан также Международный фонетический алфавит, использующийся для фонематической и фонетической транскрипции, хотя некоторая часть его символов взята из других алфавитов.
Латинский алфавит как международный.
В настоящее время латинский алфавит знако́м почти всем умеющим читать людям Земли, поскольку изучается всеми школьниками либо на уроках математики, либо на уроках иностранного языка (не говоря уже о том, что для многих языков латинский алфавит является родным), поэтому он де-факто является «алфавитом международного общения». На латинском алфавите основано большинство искусственных языков, в частности, эсперанто, интерлингва, идо и другие.
Для всех языков с нелатинской письменностью существуют также системы записи латиницей (романизации) — даже если иностранец и не знает правильного чтения, ему гораздо легче иметь дело со знакомыми латинскими буквами, чем с «китайской грамотой». В ряде стран вспомогательное письмо латиницей стандартизировано и дети изучают его в школе (в Японии, Китае).
Запись латиницей в ряде случаев диктуется техническими трудностями: международные телеграммы всегда писались латиницей; в сети Интернет можно встретить запись русского языка латиницей из-за отсутствия поддержки кириллицы клиентской машиной (см. транслит; то же относится и к греческому языку).
С другой стороны, в текстах на нелатинском алфавите иностранные названия нередко оставляют латиницей из-за отсутствия общепринятого и легко узнаваемого написания в своей системе. Например, иногда в русском тексте японские названия пишут латиницей, хотя для японского языка существуют общепринятые правила транслитерации в кириллический алфавит.
Неоднократно выдвигалась идея перевода всех языков на латинское письмо. Например, сторонником глобальной латинизации был известный датский лингвист Отто Есперсен.
Романизация языков с нелатинской письменностью.
Латинский алфавит используется во всем мире для латинизации языков, которые пользуются нелатинскими алфавитами, с целью упрощения коммуникации. Большинство языков с нелатинскими алфавитами имеют официальные правила транслитерации на базе латиницы. Иногда такие системы транслитерации называют романизированными, т.е. производными от романских, а следовательно, латинского языков.
Ниже приводится таблица с примерами латинизированной транслитерации греческого, русского (и других языков, пользующихся кириллицей), иврита, арабского, персидского, японского (катакана) и корейского (хангыль) языков:
Использование латинского алфавита для русского языка.
Попытки использовать латиницу в записях на русском языке отмечались ещё в 1680-х — 1690-х годах. В годы правления Петра I компромиссом между сторонниками традиционного кириллического полуустава и теми, кто стремился максимально полно заимствовать западную культуру, стал гражданский шрифт. Отдельные проекты перевода русского языка на латинский алфавит появлялись в XIX веке. Позднее эта проблема поднималась в СССР в 1920-х годах (см. латинизация). В 1990-х годах вопрос о переходе на латиницу ставился вновь, но к концу 2000-х эта идея, как правило, стала выдвигаться лишь в публикациях, рассчитанных на привлечение внимания, а не на практическую реализацию.

</doc>
<doc id="1027" url="?curid=1027" title="Чеченская письменность">
Чеченская письменность

Чеченская письменность — письменность, используемая для записи чеченского языка. За время своего существования функционировала на разных графических основах и неоднократно реформировалась. В настоящее время чеченская письменность функционирует на кириллице. В истории чеченской письменности выделяются следующие этапы:
Алфавит на основе арабского.
В XVI веке в Чечню вместе с исламом проник арабский язык. Во время Кавказской войны были предприняты первые попытки приспособить арабское письмо под особенности чеченской фонетики, что было непростым делом из-за отсутствия в арабском письме букв для имеющихся в чеченском абруптивов и лабиализованных гласных.
Первоначально чеченский алфавит на основе арабского выглядел так:
ي ﻻ ه و ن م ل ك ق ڮ ڤ ف غ ع ظ ط ض ص ش س ز ر ذ د خ ح ج ث ت ب ا 
В 1910 году Сугаип Гайсунов реформировал чеченский арабский алфавит, приблизив его к нуждам чеченской фонетики. На этом алфавите в типографии Темир-Хан-Шуры начали печататься книги. Этот алфавит выглядел так:
ڥ ڤ ڭ ڮ ژ چ ي ه و ن م ل ك ق ف غ ع ظ ط ض ص ش س ر ذ د خ ح ج ث ت ب ا . Гласные звуки , и обозначались горизонтальной чертой над согласными.
В 1920 году был издан букварь за авторством А. Тугаева и Т. Эльдарханова. Этот букварь содержал алфавит С. Гайсунова с добавлением двух букв — څ для звука и ﭙ
Наконец в 1922 году Шахаб Сугаипов ещё раз реформировал чеченский арабский алфавит, введя в него знаки для обозначения гласных и максимально приспособив его для нужд чеченской фонетики. Этот алфавит употреблялся во всех официальных сферах (образование, книгоиздание, документооборот) до 1925 года, хотя отдельные статьи в газете «Серло» печатались на нём до 1927 года. Последний вариант алфавита на арабской графической основе выглядел так:
Алфавит Услара.
Вскоре после присоединения Чечни к Российской империи изучением чеченского языка занялся барон П. К. Услар. Он составил первую грамматику чеченского языка, а в 1862 году вместе со своим помощником Кеди Досовым составил первый чеченский букварь «нахчујн ђуж ду һара». Алфавит этого издания базировался на кириллической основе, но также включал несколько латинских и грузинских букв. В 1866 году на этом алфавите вышел ещё один букварь за авторством И. Бартоломея.
Алфавит Услара был хорошо приспособлен к нуждам чеченской фонетики и использовался в светских школах Чечни, которых, однако, в то время было очень мало.
В 1908 году учителем Т. Эльдархановым был составлен, а в 1911 году издан новый чеченский букварь: «Чеченская азбука и первая книга для чтения». В этом издании он использовал алфавит Услара, в который были внесены несколько изменений. Так, он исключил из алфавита букву ђ, а грузинские буквы წ и ჭ заменил на ц̀ и ч̀ соответственно.
Алфавит на основе латинской графики (1925—1938).
В начале 1920-х годов в СССР развернулась кампания по латинизации письменностей. Уже в 1920 году на I съезде горских просвещенцев в Пятигорске был предложен проект латинизированного чеченского алфавита, но тогда он был отвергнут сторонниками арабского письма. В 1923 году на латинский алфавит перешли ингуши, язык которых близок к чеченскому. Однако в Чечне латинизация встретила сопротивление со стороны духовенства и других сторонников арабского письма. Тем не менее в 1925 году был официально утверждён чеченский латинизированный алфавит, составленный Х. Д. Ошаевым. Этот алфавит имел следующий вид:
11-17 июля 1928 года во Владикавказе прошла конференция по вопросу унификации чеченского и ингушского алфавитов. По итогам обсуждения было решено внести в чеченскую письменность ряд изменений: заменить букву X̌ x̌ на Ꜧ ꜧ, Ä ä на Ea ea, Ö ö на Eo eo, Ü ü на Eu eu, а также исключить из алфавита букву Ŋ ŋ
Однако де-факто унификация чеченского и ингушского алфавитов прошла позднее, в 1934 году, к тому же в сокращённом варианте. Была лишь произведена замена X̌ x̌ на Ꜧ ꜧ и исключена Ŋ ŋ. В таком виде алфавит продолжал функционировать до 1938 года.
Кириллический алфавит.
В 1938 году в ходе процесса по переводу письменностей народов СССР на кириллицу Н. Ф. Яковлевым был составлен чеченский кириллический алфавит, функционирующий по настоящее время.
Современный чеченский алфавит имеет следующий вид:
Современный чеченский алфавит достаточно хорошо отражает фонетическую структуру чеченского языка, но, вместе с тем не лишён ряда недостатков. Так, некоторые специалисты предлагают исключить из чеченского алфавита буквы "е, ё, ю, юь, я, яь" и заменить их на "йэ, йо, йу, йуь, йа, йаь" соответственно. Также поступали предложения по исключению из алфавита букв "ф, щ". Ещё одним предлагаемым усовершенствованием является обозначение на письме долгих гласных, которое возможно реализовать либо через удвоение буквы, либо путём простановки диакритического знака макрона над ней.
Алфавит на основе латинской графики (1991 год).
1 ноября 1991 года в одностороннем порядке была провозглашена независимость Чеченской Республики Ичкерия. На следующий день парламент ЧРИ принял закон «О возврате чеченскому народу латинской графики». Новый латинизированный алфавит, разработанный К. З. Чокаевым и З. У. Хамидовой, не прошёл экспертизы ни в одном научном учреждении. Многие чеченские специалисты (например, Ю. Д. Дешериев) возражали против его внедрения. По факту использование нового алфавита ограничилось созданием официальных вывесок и бланков; во всех остальных сферах продолжал использоваться кириллический алфавит. После восстановления Россией контроля над Чечнёй в 2000 году использование латинизированного алфавита было прекращено.
Латинизированный чеченский алфавит 1990-х годов имел следующий вид:
Данный алфавит используется в разговорнике и грамматике чеченского языка, которые составил Николас Од (Awde, Nicholas and Muhammad Galaev (1996) Chechen Dictionary and Phrasebook), а также в словаре, выпущенном в Анкаре в 2003 году.
В 2011 году во Франции сторонниками ЧРИ был составлен новый вариант чеченского латинизированного алфавита. На нём был выпущен букварь и подготовлены другие издания. Алфавит имеет следующий состав: A a, Ae ae, B b, C c, C' c', Ch ch, Ch' ch', D d, E e, F f, G g, Gh gh, H h, ', I i, J j, K k, K' k', L l, M m, N n, O o, Oe oe, P p, P' p', Q q, Qh qh, R r, S s, Sh sh, T t, T' t', U u, Ue ue, V v, W w, X x, Y y, Z z, Zh zh.

</doc>
